{"version":3,"sources":["main.js"],"names":["jobLoc","document","querySelector","jobLabelLoc","jobInputLoc","cityLoc","cityListBtnLoc","cityListTitleLoc","citySelectedOptionsLoc","cityListLoc","distanceLoc","distanceListBtnLoc","distanceListTitleLoc","distanceListLoc","sectorLoc","sectorListBtnLoc","sectorListTitleLoc","sectorSelectedOptionsLoc","sectorListLoc","employmentFormLoc","employmentFormListBtnLoc","employmentFormListTitleLoc","employmentFormSelectedOptionsLoc","employmentFormListLoc","workingHoursLoc","workingHoursListBtnLoc","workingHoursListTitleLoc","workingHoursSelectedOptionsLoc","workingHoursListLoc","languageLoc","languageListBtnLoc","languageListTitleLoc","languageSelectedOptionsLoc","languageListLoc","awardedResultsLoc","recordsOnPageLoc","pagesSwitchLoc","brancheWrapperLoc","branchesLoc","jobFormLoc","jobTypeLoc","langLoc","citiesLoc","resultsLoc","remoteLoc","relocationLoc","searchInputLoc","distanceInputsLoc","querySelectorAll","distanceTitleLoc","searchBtn","advancedSearchBar","advancedSearchBtn","advancedContainer","addEventListener","classList","add","event","target","value","remove","toggle","filteredRecordsArray_11","filterConfigData","apiPage","rawAPIArray","allRecordsArray","recordsNumber","recordsOnPage","filtersON","filterBranchesList","filterJobFormList","filterJobTypeList","filterLangList","filterCountriesList","filterListMaxHeight","forEach","elem","innerText","Number","dataset","distance","citySelectedFilterArray","actionAfterCityFilterChange","e","checked","push","indexDeletedItem","indexOf","splice","length","join","sectorSelectedFilterArray","actionAfterSectorFilterChange","employmentFormSelectedFilterArray","actionAfterEmploymentFormFilterChange","workingHoursSelectedFilterArray","actionAfterWorkingHoursFilterChange","languageSelectedFilterArray","actionAfterLanguageFilterChange","addListenerToFilterListsElements","createRecordBoxes","recordsArray","firstRecordNumber","replaceChildren","i","borderColorClass","textColorClass","recruitmentType_colorOnly","recruitmentType","formaZatrudnienia","jobForm","insertAdjacentHTML","url","lang","branche","name","city","jobType","visibleRate","salaryFrom","salaryTo","remote","relocation","createFilteredRecordsArray","branchesChildrenLoc","jobFormChildrenLoc","jobTypeChildrenLoc","langChildrenLoc","citiesChildrenLoc","filteredRecordsArray","selectedBranches","branche_filter","Array","from","filter","map","filteredRecordsArray_1","el","index","addFlag","selectedFiltr","selectedJobForms","filteredRecordsArray_2","selectedjobTypes","filteredRecordsArray_3","selectedLangs","language_filter","filteredRecordsArray_4","filteredRecordsArray_6","selectedCity","location_city_filter","filteredRecordsArray_7","lati","longi","min_lati","max_lati","min_longi","max_longi","selectedDistance","parseInt","el_city","el_record","Math","cos","PI","filteredRecordsArray_8","filteredRecordsArray_9","filteredRecordsArray_10","searchText","position","description","field_id","toLowerCase","search","selectedRecruitmentType","recruitmentType_filter","setPages","pagesContainerStart","pagesContainer","dropDownBtnStart","dropDownLoc","showHideFilters","createFilterLists","branche_visible","sort","a","b","localeCompare","rowHeight","Object","keys","compare","key","reduce","accumulator","allCitiesObj","concat","allCitiesArray","changePage","pageBtn","pageButtonsLoc","firstRecord","lastRecord","globActivePageNo","movePrevPagesBtns","activePageNo","firstDispalyedPageNo","shift","lastDispalyedPageNo","pop","n","pagesQuantityCalc","moveNextPagesBtns","getWidth","max","body","scrollWidth","documentElement","offsetWidth","clientWidth","getHeight","scrollHeight","offsetHeight","clientHeight","ceil","maxPageBtns","setPagesBtnQuantity","window","createAwardedRecordBoxes","awardedRecordsArray","awarded","remote_filter","filterAwarded","location_country_filter","style","margin","summariseDownload","recNumLoc","noResultsLoc","createDataForFilters","country","undefined","findIndex","arr_el","reworkData","options","job_location","parsedJobLocation","JSON","parse","advert","branches","language","job_type","_Widoczna_stawka","_spodziewane_wynagrodzenie_od","_spodziewane_wynagrodzenie_do","_relokacja","_rekrutacja_rodzaj","_forma_zatrudnienia","locality","parseFloat","latitude","longitude","values","getAPI","fetch","mode","headers","loopOnAPI","jsonData","createRecordsObjFromAPI","async","rawData","json","getConfigFilter","readConfigFilter","console","error"],"mappings":"AACA,MAAAA,OAAAC,SAAAC,cAAA,QACAC,YAAAF,SAAAC,cAAA,cACAE,YAAAH,SAAAC,cAAA,cAEAG,QAAAJ,SAAAC,cAAA,SACAI,eAAAL,SAAAC,cAAA,qBACAK,iBAAAN,SAAAC,cAAA,qBACAM,uBAAAP,SAAAC,cAAA,2BACAO,YAAAR,SAAAC,cAAA,eAEAQ,YAAAT,SAAAC,cAAA,aACAS,mBAAAV,SAAAC,cAAA,yBACAU,qBAAAX,SAAAC,cAAA,yBACAW,gBAAAZ,SAAAC,cAAA,mBAEAY,UAAAb,SAAAC,cAAA,WACAa,iBAAAd,SAAAC,cAAA,uBACAc,mBAAAf,SAAAC,cAAA,uBACAe,yBAAAhB,SAAAC,cAAA,6BACAgB,cAAAjB,SAAAC,cAAA,iBAEAiB,kBAAAlB,SAAAC,cAAA,oBACAkB,yBAAAnB,SAAAC,cAAA,gCACAmB,2BAAApB,SAAAC,cAAA,gCACAoB,iCAAArB,SAAAC,cAAA,sCACAqB,sBAAAtB,SAAAC,cAAA,0BAEAsB,gBAAAvB,SAAAC,cAAA,kBACAuB,uBAAAxB,SAAAC,cAAA,8BACAwB,yBAAAzB,SAAAC,cAAA,8BACAyB,+BAAA1B,SAAAC,cAAA,oCACA0B,oBAAA3B,SAAAC,cAAA,wBAEA2B,YAAA5B,SAAAC,cAAA,aACA4B,mBAAA7B,SAAAC,cAAA,yBACA6B,qBAAA9B,SAAAC,cAAA,yBACA8B,2BAAA/B,SAAAC,cAAA,+BACA+B,gBAAAhC,SAAAC,cAAA,mBAEAgC,kBAAAjC,SAAAC,cAAA,YACAiC,iBAAAlC,SAAAC,cAAA,oBACAkC,eAAAnC,SAAAC,cAAA,UAEAmC,kBAAApC,SAAAC,cAAA,WACAoC,YAAArC,SAAAC,cAAA,cACAqC,WAAAtC,SAAAC,cAAA,uBACAsC,WAAAvC,SAAAC,cAAA,qBACAuC,QAAAxC,SAAAC,cAAA,gBACAwC,UAAAzC,SAAAC,cAAA,YACAyC,WAAA1C,SAAAC,cAAA,YAEA0C,UAAA3C,SAAAC,cAAA,WACA2C,cAAA5C,SAAAC,cAAA,eACA4C,eAAA7C,SAAAC,cAAA,cAEA6C,kBAAA9C,SAAA+C,iBAAA,mBACAC,iBAAAhD,SAAAC,cAAA,yBAEAgD,UAAAjD,SAAAC,cAAA,eAEAiD,kBAAAlD,SAAAC,cAAA,iBACAkD,kBAAAnD,SAAAC,cAAA,oCACAmD,kBAAApD,SAAAC,cAAA,uBAEAF,OAAAsD,iBAAA,SAAA,KACAnD,YAAAoD,UAAAC,IAAA,QACApD,YAAAmD,UAAAC,IAAA,aAGApD,YAAAkD,iBAAA,QAAAG,IACAA,EAAAC,OAAAC,QACAxD,YAAAoD,UAAAK,OAAA,QACAxD,YAAAmD,UAAAK,OAAA,cAMArD,iBAAA+C,iBAAA,SAAA,KACA7C,YAAA8C,UAAAM,OAAA,UACAvD,eAAAiD,UAAAM,OAAA,gBAGAjD,qBAAA0C,iBAAA,SAAA,KACAzC,gBAAA0C,UAAAM,OAAA,UACAlD,mBAAA4C,UAAAM,OAAA,gBAGA7C,mBAAAsC,iBAAA,SAAA,KACApC,cAAAqC,UAAAM,OAAA,UACA9C,iBAAAwC,UAAAM,OAAA,gBAGAxC,2BAAAiC,iBAAA,SAAA,KACA/B,sBAAAgC,UAAAM,OAAA,UACAzC,yBAAAmC,UAAAM,OAAA,gBAGAnC,yBAAA4B,iBAAA,SAAA,KACA1B,oBAAA2B,UAAAM,OAAA,UACApC,uBAAA8B,UAAAM,OAAA,gBAGA9B,qBAAAuB,iBAAA,SAAA,KACArB,gBAAAsB,UAAAM,OAAA,UACA/B,mBAAAyB,UAAAM,OAAA,gBAKAxD,QAAAiD,iBAAA,cAAA,KACA7C,YAAA8C,UAAAK,OAAA,UACAtD,eAAAiD,UAAAK,OAAA,gBAGAlD,YAAA4C,iBAAA,cAAA,KACAzC,gBAAA0C,UAAAK,OAAA,UACAjD,mBAAA4C,UAAAK,OAAA,gBAQAzC,kBAAAmC,iBAAA,cAAA,KACA/B,sBAAAgC,UAAAK,OAAA,UACAxC,yBAAAmC,UAAAK,OAAA,gBAQA/B,YAAAyB,iBAAA,cAAA,KACArB,gBAAAsB,UAAAK,OAAA,UACA9B,mBAAAyB,UAAAK,OAAA,gBAIA,IAaAE,wBAbAC,iBAAA,GACAC,QAAA,EACAC,YAAA,GACAC,gBAAA,GACAC,cAAA,EACAC,cAAA,GACAC,WAAA,EACAC,mBAAA,GACAC,kBAAA,GACAC,kBAAA,GACAC,eAAA,GACAC,oBAAA,GACAC,oBAAA,EAKA5B,kBAAA6B,SAAAC,IACAA,EAAAvB,iBAAA,UAAA,KACAL,iBAAA6B,UAAA,IAAAC,OAAAF,EAAAlB,YACAV,iBAAA+B,QAAAC,SAAAF,OAAAF,EAAAlB,aAIAxB,iBAAAwB,MAAAS,cAEA,IAAAc,wBAAA,GAEA,MAAAC,4BAAAC,IAEA,GAAAA,EAAA1B,OAAA2B,QACAH,wBAAAI,KAAAF,EAAA1B,OAAAC,WACA,CACA,MAAA4B,EAAAL,wBAAAM,QAAAJ,EAAA1B,OAAAC,OACAuB,wBAAAO,OAAAF,EAAA,GAGA,IAAAL,wBAAAQ,OACAnF,iBAAAgD,UAAAC,IAAA,QAEAjD,iBAAAgD,UAAAK,OAAA,QAGApD,uBAAAsE,UAAAI,wBAAAS,KAAA,OAIA,IAAAC,0BAAA,GAEA,MAAAC,8BAAAT,IAEA,GAAAA,EAAA1B,OAAA2B,QACAO,0BAAAN,KAAAF,EAAA1B,OAAAC,WACA,CACA,MAAA4B,EAAAK,0BAAAJ,QAAAJ,EAAA1B,OAAAC,OACAiC,0BAAAH,OAAAF,EAAA,GAGA,IAAAK,0BAAAF,OACA1E,mBAAAuC,UAAAC,IAAA,QAEAxC,mBAAAuC,UAAAK,OAAA,QAGA3C,yBAAA6D,UAAAc,0BAAAD,KAAA,OAIA,IAAAG,kCAAA,GAEA,MAAAC,sCAAAX,IAEA,GAAAA,EAAA1B,OAAA2B,QACAS,kCAAAR,KAAAF,EAAA1B,OAAAC,WACA,CACA,MAAA4B,EAAAO,kCAAAN,QAAAJ,EAAA1B,OAAAC,OACAmC,kCAAAL,OAAAF,EAAA,GAGA,IAAAO,kCAAAJ,OACArE,2BAAAkC,UAAAC,IAAA,QAEAnC,2BAAAkC,UAAAK,OAAA,QAGAtC,iCAAAwD,UAAAgB,kCAAAH,KAAA,OAIA,IAAAK,gCAAA,GAEA,MAAAC,oCAAAb,IAEA,GAAAA,EAAA1B,OAAA2B,QACAW,gCAAAV,KAAAF,EAAA1B,OAAAC,WACA,CACA,MAAA4B,EAAAS,gCAAAR,QAAAJ,EAAA1B,OAAAC,OACAqC,gCAAAP,OAAAF,EAAA,GAGA,IAAAS,gCAAAN,OACAhE,yBAAA6B,UAAAC,IAAA,QAEA9B,yBAAA6B,UAAAK,OAAA,QAGAjC,+BAAAmD,UAAAkB,gCAAAL,KAAA,OAIA,IAAAO,4BAAA,GAEA,MAAAC,gCAAAf,IAEA,GAAAA,EAAA1B,OAAA2B,QACAa,4BAAAZ,KAAAF,EAAA1B,OAAAC,WACA,CACA,MAAA4B,EAAAW,4BAAAV,QAAAJ,EAAA1B,OAAAC,OACAuC,4BAAAT,OAAAF,EAAA,GAGA,IAAAW,4BAAAR,OACA3D,qBAAAwB,UAAAC,IAAA,QAEAzB,qBAAAwB,UAAAK,OAAA,QAGA5B,2BAAA8C,UAAAoB,4BAAAP,KAAA,OAIAS,iCAAA,KAEAnG,SAAA+C,iBAAA,kBAAA4B,SAAAC,IACAA,EAAAvB,iBAAA,SAAA6B,gCAGAlF,SAAA+C,iBAAA,oBAAA4B,SAAAC,IACAA,EAAAvB,iBAAA,SAAAuC,kCAGA5F,SAAA+C,iBAAA,6BAAA4B,SAAAC,IACAA,EAAAvB,iBAAA,SAAAyC,0CAGA9F,SAAA+C,iBAAA,2BAAA4B,SAAAC,IACAA,EAAAvB,iBAAA,SAAA2C,wCAGAhG,SAAA+C,iBAAA,sBAAA4B,SAAAC,IACAA,EAAAvB,iBAAA,SAAA6C,qCAMAE,kBAAA,CAAAC,EAAAC,EAAAnC,KAGA,IAFAzB,WAAA6D,kBAEAC,EAAAF,EAAAE,EAAArC,EAAAqC,IAGA,GAAAH,EAAAG,GAAA,CACA,IAAAC,EAAA,GACAC,EAAA,GAEA5C,iBAAA6C,0BAAAlB,SAgBA,IADA3B,iBAAA6C,0BAAApB,QAAA,OAGA,OAAAc,EAAAG,GAAAI,kBACAH,EAAA,YACAC,EAAA,YAMA,IADA5C,iBAAA6C,0BAAApB,QAAA,OAGA,OAAAc,EAAAG,GAAAI,kBACAH,EAAA,YACAC,EAAA,YAOA,IAFA5C,iBAAA6C,0BAAApB,QACA,QAGA,QAAAc,EAAAG,GAAAI,kBACAH,EAAA,aACAC,EAAA,cAxCA,OAAAL,EAAAG,GAAAI,kBACAH,EAAA,YACAC,EAAA,WAEA,OAAAL,EAAAG,GAAAI,kBACAH,EAAA,YACAC,EAAA,WAEA,QAAAL,EAAAG,GAAAI,kBACAH,EAAA,aACAC,EAAA,aAmCA,IAAAG,EAAA,GAEAR,EAAAG,GAAAM,SACAT,EAAAG,GAAAM,QAAAnC,SAAA,SAAAC,GACAiC,EACAA,EAAA,MAAAjC,EAAA,UAIAlC,WAAAqE,mBACA,YACA,YACAV,EAAAG,GAAAQ,2CACAP,gGAGAJ,EAAAG,GAAAS,gHAGAZ,EAAAG,GAAAU,QACAb,EAAAG,GAAAU,QACA,sDAEAR,MACAL,EAAAG,GAAAW,0PAUAd,EAAAG,GAAAY,oHAKAf,EAAAG,GAAAa,QACA,wBACAhB,EAAAG,GAAAa,QACA,SACA,2BAGAhB,EAAAG,GAAAc,aACAjB,EAAAG,GAAAe,YACAlB,EAAAG,GAAAgB,SACA,uBACAnB,EAAAG,GAAAe,WACA,MACAlB,EAAAG,GAAAgB,SACA,SAEA,2BAGAnB,EAAAG,GAAAiB,OACA,mCACA,2BAGApB,EAAAG,GAAAkB,WACA,2CACA,uDAEAb,gJAcAc,2BAAA,KACA,MAAAC,EAAAvF,YAAAU,iBAAA,YACA8E,EAAAvF,WAAAS,iBAAA,YACA+E,EAAAvF,WAAAQ,iBAAA,YACAgF,EAAAvF,QAAAO,iBAAA,YAEAiF,EAAAvF,UAAAM,iBAAA,YAEA,IAAAkF,EAAAhE,gBAIAiE,EAAA,GAGAA,EADApE,iBAAAqE,eAAA1C,OACA3B,iBAAAqE,eAEAC,MAAAC,KAAAT,GACAU,QAAA,SAAA1D,GACA,OAAAA,EAAAQ,WAEAmD,KAAA,SAAA3D,GACA,OAAAA,EAAAlB,SAIA,IAAA8E,EAAA,GAEA,IAAAN,EAAAzC,OACAwC,EAAAtD,SAAA,CAAA8D,EAAAC,KACA,IAAAC,GAAA,EAEAT,EAAAvD,SAAAiE,IACAH,EAAAvB,UAAA0B,IACAD,GAAA,MAIAA,GACAH,EAAAnD,KAAAoD,MAIAD,EAAAP,EAKA,IAAAY,EAAA,GAEAA,EAAAT,MAAAC,KAAAR,GACAS,QAAA,SAAA1D,GACA,OAAAA,EAAAQ,WAEAmD,KAAA,SAAA3D,GACA,OAAAA,EAAAlB,SAGA,IAAAoF,EAAA,GAEA,IAAAD,EAAApD,OACA+C,EAAA7D,SAAA,CAAA8D,EAAAC,KACA,GAAAD,EAAA3B,QAAA,CACA,IAAA6B,GAAA,EAEAE,EAAAlE,SAAAiE,KACA,IAAAH,EAAA3B,QAAAvB,QAAAqD,KACAD,GAAA,MAIAA,GACAG,EAAAzD,KAAAoD,OAKAK,EAAAN,EAKA,IAAAO,EAAAX,MAAAC,KAAAP,GACAQ,QAAA,SAAA1D,GACA,OAAAA,EAAAQ,WAEAmD,KAAA,SAAA3D,GACA,OAAAA,EAAAlB,SAGAsF,EAAA,GAEA,IAAAD,EAAAtD,OACAqD,EAAAnE,SAAA,CAAA8D,EAAAC,KACA,IAAAC,GAAA,EAEAI,EAAApE,SAAAiE,IACAH,EAAApB,UAAAuB,IACAD,GAAA,MAIAA,GACAK,EAAA3D,KAAAoD,MAIAO,EAAAF,EAIA,IAAAG,EAAA,GAKAA,EAFAnF,iBAAAoF,gBAAAzD,OAEA3B,iBAAAoF,gBAEAd,MAAAC,KAAAN,GACAO,QAAA,SAAA1D,GACA,OAAAA,EAAAQ,WAEAmD,KAAA,SAAA3D,GACA,OAAAA,EAAAlB,SAIA,IAAAyF,EAAA,GAEA,IAAAF,EAAAxD,OACAuD,EAAArE,SAAA,CAAA8D,EAAAC,KACA,IAAAC,GAAA,EAEAM,EAAAtE,SAAAiE,IACAH,EAAAxB,OAAA2B,IACAD,GAAA,MAIAA,GACAQ,EAAA9D,KAAAoD,MAIAU,EAAAH,EAqGA,IAAAI,EAAAD,EAGAE,EAAA,GAGAA,EADAvF,iBAAAwF,qBAAA7D,OACA3B,iBAAAwF,qBAGAlB,MAAAC,KAAAL,GACAM,QAAA,SAAA1D,GACA,GAAAA,EAAAlB,MACA,OAAAkB,EAAAQ,WAGAmD,KAAA,SAAA3D,GACA,GAAAA,EAAAlB,MACA,OAAAkB,EAAAlB,SAMA,IAAA6F,EAAA,GAEA,GAAAF,EAAA5D,OAAA,CAEA,IAEA+D,EACAC,EACAC,EACAC,EACAC,EACAC,EAPAC,EAAAC,SAAA/G,iBAAA+B,QAAAC,UASAqE,EAAA1E,SAAAqF,IACAZ,EAAAzE,SAAA,CAAAsF,EAAAvB,KACAsB,IAAAC,EAAA7C,OAEAoC,EAAAS,EAAAT,KACAC,EAAAQ,EAAAR,MAEAC,EAAAF,EAAA,QAAAM,EACAH,EAAAH,EAAA,QAAAM,EACAF,EAAAH,EAAA,SAAAK,EAAAI,KAAAC,IAAAX,EAAAU,KAAAE,GAAA,KACAP,EAAAJ,EAAA,SAAAK,EAAAI,KAAAC,IAAAX,EAAAU,KAAAE,GAAA,SAIAhB,EAAAzE,SAAA,CAAAsF,EAAAvB,KAEAuB,EAAAT,MAAAG,GACAM,EAAAT,MAAAE,GACAO,EAAAR,OAAAI,GACAI,EAAAR,OAAAG,GAEAL,EAAAlE,KAAA4E,cAMAV,EAAAH,EAKA,IAAAiB,EAAA,GAEA1H,UAAAyC,SAAAtB,iBAAA,cACAyF,EAAA5E,SAAA,CAAA8D,EAAAC,KACA,IAAAC,GAAA,EAEAF,EAAAhB,SACAkB,GAAA,GAGAA,GACA0B,EAAAhF,KAAAoD,MAIA4B,EAAAd,EAKA,IAAAe,EAAA,GAEA1H,cAAAwC,QACAiF,EAAA1F,SAAA,CAAA8D,EAAAC,KACA,IAAAC,GAAA,EAEAF,EAAAf,aACAiB,GAAA,GAGAA,GACA2B,EAAAjF,KAAAoD,MAIA6B,EAAAD,EAKA,IAAAE,EAAA,GAEAC,EAAA3H,eAAAa,MAEA8G,EACAF,EAAA3F,SAAA,CAAA8D,EAAAC,KACA,IAEA+B,EAFA9B,GAAA,EAIAF,EAAAiC,YAAA/F,SAAA,SAAAC,GACAA,EAAAlB,OAAA,gBAAAkB,EAAA+F,WACAF,EAAA7F,EAAAlB,MACAkH,cACAC,OAAAL,EAAAI,gBACA,IAAAH,IACA9B,GAAA,OAKA8B,EAAAhC,EAAAtB,KAAAyD,cAAAC,OAAAL,EAAAI,gBACA,IAAAH,IACA9B,GAAA,GAGAA,GACA4B,EAAAlF,KAAAoD,MAIA8B,EAAAD,EAIAzG,wBAAA,GAEA,IAAAiH,EAAA,GAEAhH,iBAAAiH,uBAAAtF,SACAqF,EAAAhH,iBAAAiH,wBAGA,IAAAD,EAAArF,OACA8E,EAAA5F,SAAA,CAAA8D,EAAAC,KACA,IAAAC,GAAA,EAEAmC,EAAAnG,SAAAiE,IACAH,EAAA7B,kBAAAgC,IACAD,GAAA,MAIAA,GACA9E,wBAAAwB,KAAAoD,MAIA5E,wBAAA0G,EAGArG,cAAAL,wBAAA4B,OAGAW,kBAAAvC,wBAAA,EAAAM,eAEA6G,SAAA9G,eACAE,WAAA,GAOA6G,oBAAA,KACAC,eAAA5H,UAAAC,IAAA,WAGA4H,iBAAA,KACAC,YAAA/H,iBAAA,QAAAgI,iBAEAD,YAAA9H,UAAAC,IAAA,WAIA+H,kBAAAxH,IAiJA,GA3HAA,EAAAyH,iBACAnJ,kBAAAkB,UAAAC,IAAA,YAMAc,mBAAAoB,OAAA,IACApB,mBAAAmH,MAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAE,cAAAD,MAEAE,UAAA,GAAAvH,mBAAAoB,OAAA,EACAf,oBAAAkH,UASAvH,mBAAAM,SAAA,SAAA8D,GACApG,YAAA0E,mBACA,YACA,kKAGA0B,YAAAA,aAAAA,kJAGAA,MAAAA,4DAQAnE,kBAAAmB,OAAA,IACAnB,kBAAAkH,MAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAE,cAAAD,MAEAE,UAAA,GAAAtH,kBAAAmB,OAAA,EAQAnB,kBAAAK,SAAA,SAAA8D,GACAnG,WAAAyE,mBACA,YACA,kKAGA0B,YAAAA,aAAAA,kJAGAA,MAAAA,4DAOAlE,kBAAAkB,OAAA,IACAlB,kBAAAiH,MAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAE,cAAAD,MAEAE,UAAA,GAAArH,kBAAAkB,OAAA,EAQAlB,kBAAAI,SAAA,SAAA8D,GACAlG,WAAAwE,mBACA,YACA,kKAGA0B,YAAAA,aAAAA,kJAGAA,MAAAA,4DAOAjE,eAAAiB,OAAA,IACAjB,eAAAgH,MAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAE,cAAAD,MAEAE,UAAA,GAAApH,eAAAiB,OAAA,EAQAjB,eAAAG,SAAA,SAAA8D,GACAjG,QAAAuE,mBACA,YACA,kKAGA0B,YAAAA,aAAAA,kJAGAA,MAAAA,4DAQAoD,OAAAC,KAAArH,qBAAAgB,OAAA,EAAA,CAWA,SAAAsG,EAAAN,EAAAC,GACA,OAAAD,EAAArE,KAAAuE,cAAAD,EAAAtE,MAGA,IAAA,IAAA4E,KAAAvH,oBACAA,oBAAAuH,GAAAR,KAAAO,GAGAtH,oBAAAoH,OAAAC,KAAArH,qBACA+G,OACAS,QAAA,CAAAC,EAAAF,KACAE,EAAAF,GAAAvH,oBAAAuH,GACAE,IACA,IAEA,IAAAC,EAAA,GACA,IAAA,IAAAH,KAAAvH,oBAKA0H,EAAAA,EAAAC,OAAA3H,oBAAAuH,IAGA,IAAAK,EAAA,GACAF,EAAAxH,SAAA8D,IACA4D,EAAAhH,KAAAoD,EAAArB,SAGAiF,EAAAb,MAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAE,cAAAD,MAGAW,EAAA1H,SAAA,SAAA8D,GACAhG,UAAAsE,mBACA,YACA,kKAGA0B,YAAAA,aAAAA,kJAGAA,MAAAA,6DAkBA6D,WAAAC,IACAC,eAAA7H,SAAA8D,IACAA,EAAAnF,UAAAK,OAAA,aAEA4I,EAAAjJ,UAAAC,IAAA,UACA,IAAAkJ,EACAtI,cAAA4F,SAAAwC,EAAA1H,WAAAV,cACAuI,EAAAvI,cAAA4F,SAAAwC,EAAA1H,WAGAuB,kBADAhC,UACAP,wBACAI,gBADAwI,EAAAC,GAEAC,iBAAA5C,SAAAwC,EAAA1H,YAIA,IAAA8H,iBAEA,MAAAC,kBAAA,KACA,IAOAC,EAPAC,EAAA/C,SACA3B,MAAAC,KAAArI,SAAA+C,iBAAA,UAAAgK,QAAAlI,WAEAmI,EAAAjD,SACA3B,MAAAC,KAAArI,SAAA+C,iBAAA,UAAAkK,MAAApI,WAUA,GANAgI,EAAA7M,SAAAC,cAAA,gBAEA4M,IACAA,EAAA9C,SAAA8C,EAAAhI,YAGAiI,EAAA,EAAA,CAGA,IAFA3K,eAAAoE,kBAEA2G,EAAAJ,EAAA,EAAAI,GAAAF,EAAA,EAAAE,IACAL,IACAA,EAAAF,kBAEAE,GAAAK,IAAAL,EACA1K,eAAA4E,mBACA,YACA,4BAAAmG,WAGA/K,eAAA4E,mBACA,YACA,qBAAAmG,WAKA,GAAAF,EAAAG,kBAAA,EAAA,CACAhL,eAAA4E,mBACA,YACA,+EAEA/G,SAAAC,cAAA,SACAoD,iBAAA,SAAA,KACA+J,4BAGAjL,eAAA4E,mBACA,YACA,iDAIA,GAAA+F,EAAA,EAAA,CACA3K,eAAA4E,mBACA,aACA,8EAEA/G,SAAAC,cAAA,SACAoD,iBAAA,SAAA,KACAuJ,4BAGAzK,eAAA4E,mBACA,aACA,iDAIAyF,eAAAxM,SAAA+C,iBAAA,SACAyJ,eAAA7H,SAAA8D,IACAA,EAAApF,iBAAA,SAAA8B,IACAmH,WAAAnH,EAAA1B,gBAMA2J,kBAAA,KACA,IAOAP,EAPAC,EAAA/C,SACA3B,MAAAC,KAAArI,SAAA+C,iBAAA,UAAAgK,QAAAlI,WAEAmI,EAAAjD,SACA3B,MAAAC,KAAArI,SAAA+C,iBAAA,UAAAkK,MAAApI,WAUA,GANAgI,EAAA7M,SAAAC,cAAA,gBACA4M,IACAA,EAAA9C,SAAA8C,EAAAhI,WACA8H,iBAAAE,GAGAG,EAAAG,kBAAA,CAGA,IAFAhL,eAAAoE,kBAEA2G,EAAAJ,EAAA,EAAAI,GAAAF,EAAA,EAAAE,IACAL,IACAA,EAAAF,kBAEAE,GAAAK,IAAAL,EACA1K,eAAA4E,mBACA,YACA,4BAAAmG,WAGA/K,eAAA4E,mBACA,YACA,qBAAAmG,WAKA,GAAAF,EAAAG,kBAAA,EAAA,CACAhL,eAAA4E,mBACA,YACA,+EAEA/G,SAAAC,cAAA,SACAoD,iBAAA,SAAA,KACA+J,4BAGAjL,eAAA4E,mBACA,YACA,iDAIA,GAAA+F,EAAA,EAAA,CACA3K,eAAA4E,mBACA,aACA,8EAEA/G,SAAAC,cAAA,SACAoD,iBAAA,SAAA,KACAuJ,4BAGAzK,eAAA4E,mBACA,aACA,iDAIAyF,eAAAxM,SAAA+C,iBAAA,SACAyJ,eAAA7H,SAAA8D,IACAA,EAAApF,iBAAA,SAAA8B,IACAmH,WAAAnH,EAAA1B,gBAOA,SAAA4J,WACA,OAAAnD,KAAAoD,IACAtN,SAAAuN,KAAAC,YACAxN,SAAAyN,gBAAAD,YACAxN,SAAAuN,KAAAG,YACA1N,SAAAyN,gBAAAC,YACA1N,SAAAyN,gBAAAE,aAIA,SAAAC,YACA,OAAA1D,KAAAoD,IACAtN,SAAAuN,KAAAM,aACA7N,SAAAyN,gBAAAI,aACA7N,SAAAuN,KAAAO,aACA9N,SAAAyN,gBAAAK,aACA9N,SAAAyN,gBAAAM,cAIA,IAAAZ,kBAEA,MAAAnC,SAAA9G,IAGA,GAFAiJ,kBAAAjD,KAAA8D,KAAA9J,EAAAC,eAEAgJ,kBAAAc,YAAA,CAGA,IAFA9L,eAAAoE,kBAEA2G,EAAA,EAAAA,GAAAe,YAAAf,IACA,IAAAA,EACA/K,eAAA4E,mBACA,YACA,4BAAAmG,WAGA/K,eAAA4E,mBACA,YACA,qBAAAmG,WAIA/K,eAAA4E,mBACA,YACA,+EAEA/G,SAAAC,cAAA,SACAoD,iBAAA,SAAA,KACA+J,2BAEA,CAGA,IAFAjL,eAAAoE,kBAEA2G,EAAA,EAAAA,GAAAC,kBAAAD,IACA,IAAAA,EACA/K,eAAA4E,mBACA,YACA,4BAAAmG,WAGA/K,eAAA4E,mBACA,YACA,qBAAAmG,WAKA/K,eAAA4E,mBACA,YACA,iDAIA5E,eAAA4E,mBACA,aACA,iDAGAyF,eAAAxM,SAAA+C,iBAAA,SACAyJ,eAAA7H,SAAA8D,IACAA,EAAApF,iBAAA,SAAA8B,IACAmH,WAAAnH,EAAA1B,eAKA,IAAAwK,YAEA,MAAAC,oBAAA,KAEAb,WAAA,MACAY,YAAA,GAEAZ,YAAA,KAAAA,WAAA,MACAY,YAAA,GAEAZ,YAAA,KAAAA,WAAA,MACAY,YAAA,GAEAZ,YAAA,KAAAA,WAAA,MACAY,YAAA,GAEAZ,YAAA,KAAAA,WAAA,OACAY,YAAA,IAEAZ,YAAA,OACAY,YAAA,IAGAjD,SAAA9G,gBAIAiK,OAAA9K,iBAAA,UAAA,KACA6K,yBAGAA,sBAKA,MAAAE,yBAAA,CAAA/H,EAAAvC,KAEA7B,kBAAAsE,kBAEA,IAAA8H,EAAAhI,EAAAiC,QAAA1D,GACAA,EAAA0J,UAGA,GAAAD,EAAA5I,OAAA,GA4BA,IA1BA3B,EAAAyK,gBACAF,EAAAA,EAAA/F,QAAA1D,GACAA,EAAA6C,UAIA3D,EAAAoF,gBAAAzD,OAAA,GACA+I,cAAA1K,EAAAoF,gBAAAmF,EAAA,QAGAvK,EAAAqE,eAAA1C,OAAA,GACA+I,cAAA1K,EAAAqE,eAAAkG,EAAA,WAGAvK,EAAA2K,wBAAAhJ,OAAA,GACA+I,cAAA1K,EAAA2K,wBAAAJ,EAAA,WAGAvK,EAAAwF,qBAAA7D,OAAA,GACA+I,cAAA1K,EAAAwF,qBAAA+E,EAAA,QAGAvK,EAAAiH,uBAAAtF,OAAA,GACA+I,cAAA1K,EAAAiH,uBAAAsD,EAAA,mBAGA7H,EAAAF,kBAAAE,EAAA,GAAAA,IACA,GAAA6H,EAAA7H,GAAA,CACA,IAAAC,EAAA,GACAC,EAAA,GAEA,OAAA2H,EAAA7H,GAAAI,kBACAH,EAAA,YACAC,EAAA,WAEA,OAAA2H,EAAA7H,GAAAI,kBACAH,EAAA,YACAC,EAAA,WAEA,QAAA2H,EAAA7H,GAAAI,kBACAH,EAAA,aACAC,EAAA,YAGA,IAAAG,EAAA,GAEAwH,EAAA7H,GAAAM,SACAuH,EAAA7H,GAAAM,QAAAnC,SAAA,SAAAC,GACAiC,EACAA,EAAA,MAAAjC,EAAA,UAIA3C,kBAAA8E,mBACA,YACA,YACAsH,EAAA7H,GAAAQ,2CACAP,wIAIA4H,EAAA7H,GAAAS,kJAIAoH,EAAA7H,GAAAU,QACAmH,EAAA7H,GAAAU,QACA,0DAEAR,MACA2H,EAAA7H,GAAAW,mQASAkH,EAAA7H,GAAAY,sGAIAiH,EAAA7H,GAAAiB,OACA,mCACA,+BAGA4G,EAAA7H,GAAAkB,WACA,2CACA,+BAGA2G,EAAA7H,GAAAa,QACA,wBACAgH,EAAA7H,GAAAa,QACA,SACA,+BAGAgH,EAAA7H,GAAAc,aACA+G,EAAA7H,GAAAe,YACA8G,EAAA7H,GAAAgB,SACA,uBACA6G,EAAA7H,GAAAe,WACA,MACA8G,EAAA7H,GAAAgB,SACA,SAEA,2DAEAX,6gBAqBA5E,kBAAAyM,MAAAC,OAAA,KAKAC,kBAAA1K,IACA2K,UAAAhK,UAAA,cAAAX,aACAA,EAGA4K,aAAAxL,UAAAK,OAAA,UAFAmL,aAAAxL,UAAAC,IAAA,WAOAwL,qBAAA,CACA7H,EACAJ,EACAO,EACAJ,EACAK,EACAC,EACAC,EACAwH,EACA5H,EACAoC,EACAC,MAGA,IAAApF,mBAAAkB,QAAA2B,SAAA+H,IAAA/H,IACApD,iBAAAqE,eAAA1C,QACA,IAAA3B,iBAAAqE,eAAA5C,QAAA2B,IACA7C,mBAAAgB,KAAA6B,GAGA7C,mBAAAgB,KAAA6B,IAKAJ,GACAA,EAAAnC,SAAA,SAAAC,IACA,IAAAN,kBAAAiB,QAAAX,IACAN,kBAAAe,KAAAT,OAKA,IAAAL,kBAAAgB,QAAA8B,SAAA4H,IAAA5H,GACA9C,kBAAAc,KAAAgC,IAGA,IAAA7C,eAAAe,QAAA0B,KAEAnD,iBAAAoF,gBAAAzD,QACA,IAAA3B,iBAAAoF,gBAAA3D,QAAA0B,IACAzC,eAAAa,KAAA4B,GAGAzC,eAAAa,KAAA4B,IAaAnD,iBAAA2K,wBAAAhJ,QAEA,IAAA3B,iBAAA2K,wBAAAlJ,QAAAyJ,KACAvK,oBAAAuK,IAIA,IAFAvK,oBAAAuK,GAAAE,WACAC,GAAAA,EAAA/H,OAAAA,MAGAtD,iBAAAwF,qBAAA7D,QACA,IAAA3B,iBAAAwF,qBAAA/D,QAAA6B,IACA3C,oBAAAuK,GAAA3J,KAAA,CACA+B,KAAAA,EACAoC,KAAAA,EACAC,MAAAA,IAIAhF,oBAAAuK,GAAA3J,KAAA,CACA+B,KAAAA,EACAoC,KAAAA,EACAC,MAAAA,MAKAhF,oBAAAuK,GAAA,GACAlL,iBAAAwF,qBAAA7D,QACA,IAAA3B,iBAAAwF,qBAAA/D,QAAA6B,IACA3C,oBAAAuK,GAAA3J,KAAA,CACA+B,KAAAA,EACAoC,KAAAA,EACAC,MAAAA,IAIAhF,oBAAAuK,GAAA3J,KAAA,CACA+B,KAAAA,EACAoC,KAAAA,EACAC,MAAAA,MAQAhF,oBAAAuK,IAIA,IAFAvK,oBAAAuK,GAAAE,WACAC,GAAAA,EAAA/H,OAAAA,KAGA3C,oBAAAuK,GAAA3J,KAAA,CACA+B,KAAAA,EACAoC,KAAAA,EACAC,MAAAA,KAIAhF,oBAAAuK,GAAA,GACAvK,oBAAAuK,GAAA3J,KAAA,CACA+B,KAAAA,EACAoC,KAAAA,EACAC,MAAAA,MAOA2F,WAAApL,IACAA,EAAAW,SAAA8D,IAjIA,IACAvB,EACAJ,EACAO,EACAJ,EAIA+H,EACA5H,EACAoC,EACAC,EAuHAhB,EAAA4G,QAAAC,eACAC,kBAAAC,KAAAC,MAAAhH,EAAA4G,QAAAC,eAGArL,gBAAAoB,KAAA,CACA2B,IAAAyB,EAAAzB,IACAG,KAAAsB,EAAAiH,OAAAvI,KACAD,QAAAuB,EAAA4G,QAAAM,SACA1I,KAAAwB,EAAAiH,OAAAE,SACAvI,QAAAoB,EAAA4G,QAAAQ,SACAvI,YAAAyC,SAAAtB,EAAA4G,QAAAS,kBACAvI,WAAAwC,SAAAtB,EAAA4G,QAAAU,+BACAvI,SAAAuC,SAAAtB,EAAA4G,QAAAW,+BACAvI,OAAAgB,EAAA4G,QAAA5H,OACAC,WAAAe,EAAA4G,QAAAY,WACArJ,gBAAA6B,EAAA4G,QAAAa,mBACApJ,QAAA2B,EAAA4G,QAAAc,oBACAnB,QAAAO,kBAAAP,QACA5H,KAAAmI,kBAAAa,SACA5G,KAAA6G,WAAAd,kBAAAe,UACA7G,MAAA4G,WAAAd,kBAAAgB,WACA7F,YAAAjC,EAAAiH,OAAAc,OACAlC,QAAA7F,EAAA6F,UAvJApH,EA2JAuB,EAAA4G,QAAAM,SA1JA7I,EA2JA2B,EAAA4G,QAAAc,oBA1JA9I,EA2JAoB,EAAA4G,QAAAQ,SA1JA5I,EA2JAwB,EAAAiH,OAAAE,SACA7F,SAAAtB,EAAA4G,QAAAS,kBACA/F,SAAAtB,EAAA4G,QAAAU,+BACAhG,SAAAtB,EAAA4G,QAAAW,+BA1JAhB,EA2JAO,kBAAAP,QA1JA5H,EA2JAmI,kBAAAa,SA1JA5G,EA2JA6G,WAAAd,kBAAAe,UA1JA7G,EA2JA4G,WAAAd,kBAAAgB,YAxJA,IAAAlM,mBAAAkB,QAAA2B,SAAA+H,IAAA/H,IACApD,iBAAAqE,eAAA1C,QACA,IAAA3B,iBAAAqE,eAAA5C,QAAA2B,IACA7C,mBAAAgB,KAAA6B,GAGA7C,mBAAAgB,KAAA6B,IAKAJ,GACAA,EAAAnC,SAAA,SAAAC,IACA,IAAAN,kBAAAiB,QAAAX,IACAN,kBAAAe,KAAAT,OAKA,IAAAL,kBAAAgB,QAAA8B,SAAA4H,IAAA5H,GACA9C,kBAAAc,KAAAgC,IAGA,IAAA7C,eAAAe,QAAA0B,KAEAnD,iBAAAoF,gBAAAzD,QACA,IAAA3B,iBAAAoF,gBAAA3D,QAAA0B,IACAzC,eAAAa,KAAA4B,GAGAzC,eAAAa,KAAA4B,IAaAnD,iBAAA2K,wBAAAhJ,QAEA,IAAA3B,iBAAA2K,wBAAAlJ,QAAAyJ,KACAvK,oBAAAuK,IAIA,IAFAvK,oBAAAuK,GAAAE,WACAC,GAAAA,EAAA/H,OAAAA,MAGAtD,iBAAAwF,qBAAA7D,QACA,IAAA3B,iBAAAwF,qBAAA/D,QAAA6B,IACA3C,oBAAAuK,GAAA3J,KAAA,CACA+B,KAAAA,EACAoC,KAAAA,EACAC,MAAAA,IAIAhF,oBAAAuK,GAAA3J,KAAA,CACA+B,KAAAA,EACAoC,KAAAA,EACAC,MAAAA,MAKAhF,oBAAAuK,GAAA,GACAlL,iBAAAwF,qBAAA7D,QACA,IAAA3B,iBAAAwF,qBAAA/D,QAAA6B,IACA3C,oBAAAuK,GAAA3J,KAAA,CACA+B,KAAAA,EACAoC,KAAAA,EACAC,MAAAA,IAIAhF,oBAAAuK,GAAA3J,KAAA,CACA+B,KAAAA,EACAoC,KAAAA,EACAC,MAAAA,MAQAhF,oBAAAuK,IAIA,IAFAvK,oBAAAuK,GAAAE,WACAC,GAAAA,EAAA/H,OAAAA,KAGA3C,oBAAAuK,GAAA3J,KAAA,CACA+B,KAAAA,EACAoC,KAAAA,EACAC,MAAAA,KAIAhF,oBAAAuK,GAAA,GACAvK,oBAAAuK,GAAA3J,KAAA,CACA+B,KAAAA,EACAoC,KAAAA,EACAC,MAAAA,SAmDAgH,OAAA1M,GACA2M,MACA,8DACA,CACAC,KAAA,OACAC,QAAA,CACA,eAAA,mBACA,sBAAA,MACA,yBAAA7M,EACA,iBAAA,2CAQA8M,UAAA,CAAAC,EAAAhN,KACAgN,EAAArL,OAAA,GACAzB,YAAAA,YAAAoI,OAAA0E,GACA/M,UACAgN,wBAAAhN,QAAAD,KAEAsL,WAAApL,aACAE,cAAAF,YAAAyB,OAEA2I,yBAAAnK,gBAAAH,GACAkH,SAAA9G,eACAoH,kBAAAxH,GAv7CA9D,SAAA+C,iBAAA,kBAAA4B,SAAAC,IACAA,EAAAvB,iBAAA,SAAA6B,gCAGAlF,SAAA+C,iBAAA,oBAAA4B,SAAAC,IACAA,EAAAvB,iBAAA,SAAAuC,kCAGA5F,SAAA+C,iBAAA,6BAAA4B,SAAAC,IACAA,EAAAvB,iBAAA,SAAAyC,0CAGA9F,SAAA+C,iBAAA,2BAAA4B,SAAAC,IACAA,EAAAvB,iBAAA,SAAA2C,wCAGAhG,SAAA+C,iBAAA,sBAAA4B,SAAAC,IACAA,EAAAvB,iBAAA,SAAA6C,oCA06CAyB,+BAMAqJ,eAAAD,wBAAAhN,EAAAD,GACA,MAAAmN,QAAAR,OAAA1M,GACA+M,QAAAG,EAAAC,OACAL,UAAAC,EAAAhN,GAIA,MAAAqN,gBAAA,IACAT,MAAA,wBAIAM,eAAAI,mBACA,IACA,MAAAH,QANAP,MAAA,wBAOA5M,uBAAAmN,EAAAC,OACAH,wBAAAhN,QAAAD,kBACA,MAAAqB,GACAkM,QAAAC,MAAAnM,GACA4L,wBAAAhN,UAIAqN,mBAGAlP,iBAAAmB,iBAAA,UAAA8B,IACAhB,cAAA4F,SAAA5E,EAAA1B,OAAAC,OAGA0C,kBADAhC,UACAP,wBACAI,gBADA,EAAAE,eAEA6G,SAAA9G,kBAMAjB,UAAAI,iBAAA,QAAAsE,4BAEAzE,kBAAAG,iBAAA,SAAA,KACAD,kBAAAE,UAAAM,OAAA,UACAT,kBAAAG,UAAAM,OAAA","file":"all.min.js","sourcesContent":["\r\nconst jobLoc = document.querySelector(\".job\");\r\nconst jobLabelLoc = document.querySelector(\".job label\");\r\nconst jobInputLoc = document.querySelector(\".job input\");\r\n\r\nconst cityLoc = document.querySelector(\".city\");\r\nconst cityListBtnLoc = document.querySelector(\".city .arrow-down\");\r\nconst cityListTitleLoc = document.querySelector(\".city .list-title\");\r\nconst citySelectedOptionsLoc = document.querySelector(\".city .selected-options\");\r\nconst cityListLoc = document.querySelector(\".city .list\");\r\n\r\nconst distanceLoc = document.querySelector(\".distance\");\r\nconst distanceListBtnLoc = document.querySelector(\".distance .arrow-down\");\r\nconst distanceListTitleLoc = document.querySelector(\".distance .list-title\");\r\nconst distanceListLoc = document.querySelector(\".distance .list\");\r\n\r\nconst sectorLoc = document.querySelector(\".sector\");\r\nconst sectorListBtnLoc = document.querySelector(\".sector .arrow-down\");\r\nconst sectorListTitleLoc = document.querySelector(\".sector .list-title\");\r\nconst sectorSelectedOptionsLoc = document.querySelector(\".sector .selected-options\");\r\nconst sectorListLoc = document.querySelector(\".sector .list\");\r\n\r\nconst employmentFormLoc = document.querySelector(\".employment-form\");\r\nconst employmentFormListBtnLoc = document.querySelector(\".employment-form .arrow-down\");\r\nconst employmentFormListTitleLoc = document.querySelector(\".employment-form .list-title\");\r\nconst employmentFormSelectedOptionsLoc = document.querySelector(\".employment-form .selected-options\");\r\nconst employmentFormListLoc = document.querySelector(\".employment-form .list\");\r\n\r\nconst workingHoursLoc = document.querySelector(\".working-hours\");\r\nconst workingHoursListBtnLoc = document.querySelector(\".working-hours .arrow-down\");\r\nconst workingHoursListTitleLoc = document.querySelector(\".working-hours .list-title\");\r\nconst workingHoursSelectedOptionsLoc = document.querySelector(\".working-hours .selected-options\");\r\nconst workingHoursListLoc = document.querySelector(\".working-hours .list\");\r\n\r\nconst languageLoc = document.querySelector(\".language\");\r\nconst languageListBtnLoc = document.querySelector(\".language .arrow-down\");\r\nconst languageListTitleLoc = document.querySelector(\".language .list-title\");\r\nconst languageSelectedOptionsLoc = document.querySelector(\".language .selected-options\");\r\nconst languageListLoc = document.querySelector(\".language .list\");\r\n\r\nconst awardedResultsLoc = document.querySelector(\".awarded\");\r\nconst recordsOnPageLoc = document.querySelector(\".records-on-page\");\r\nconst pagesSwitchLoc = document.querySelector(\".pages\");\r\n\r\nconst brancheWrapperLoc = document.querySelector(\".sector\");\r\nconst branchesLoc = document.querySelector(\".sector ul\");\r\nconst jobFormLoc = document.querySelector(\".employment-form ul\"); \r\nconst jobTypeLoc = document.querySelector(\".working-hours ul\"); \r\nconst langLoc = document.querySelector(\".language ul\");\r\nconst citiesLoc = document.querySelector(\".city ul\");\r\nconst resultsLoc = document.querySelector(\".results\");\r\n\r\nconst remoteLoc = document.querySelector(\"#remote\");\r\nconst relocationLoc = document.querySelector(\"#relocation\");\r\nconst searchInputLoc = document.querySelector(\".job input\");\r\n\r\nconst distanceInputsLoc = document.querySelectorAll(\".distance input\");\r\nconst distanceTitleLoc = document.querySelector(\".distance .list-title\");\r\n\r\nconst searchBtn = document.querySelector(\".search-btn\");\r\n\r\nconst advancedSearchBar = document.querySelector(\".wrapper.five\");\r\nconst advancedSearchBtn = document.querySelector(\".advanced-search-btn .arrow-down\");\r\nconst advancedContainer = document.querySelector(\".advanced-container\");\r\n\r\njobLoc.addEventListener(\"click\", () => {\r\n    jobLabelLoc.classList.add(\"mini\");\r\n    jobInputLoc.classList.add(\"active\")\r\n})\r\n\r\njobInputLoc.addEventListener(\"blur\", (event) => {\r\nif (!event.target.value) {\r\n    jobLabelLoc.classList.remove(\"mini\");\r\n    jobInputLoc.classList.remove(\"active\")\r\n}\r\n})\r\n\r\n\r\n\r\ncityListTitleLoc.addEventListener(\"click\", () => {\r\n    cityListLoc.classList.toggle(\"expand\");\r\n    cityListBtnLoc.classList.toggle(\"rotate180\");\r\n})\r\n\r\ndistanceListTitleLoc.addEventListener(\"click\", () => {\r\n    distanceListLoc.classList.toggle(\"expand\");\r\n    distanceListBtnLoc.classList.toggle(\"rotate180\");\r\n})\r\n\r\nsectorListTitleLoc.addEventListener(\"click\", () => {\r\n    sectorListLoc.classList.toggle(\"expand\");\r\n    sectorListBtnLoc.classList.toggle(\"rotate180\");\r\n})\r\n\r\nemploymentFormListTitleLoc.addEventListener(\"click\", () => {\r\n    employmentFormListLoc.classList.toggle(\"expand\");\r\n    employmentFormListBtnLoc.classList.toggle(\"rotate180\");\r\n})\r\n\r\nworkingHoursListTitleLoc.addEventListener(\"click\", () => {\r\n    workingHoursListLoc.classList.toggle(\"expand\");\r\n    workingHoursListBtnLoc.classList.toggle(\"rotate180\");\r\n})\r\n\r\nlanguageListTitleLoc.addEventListener(\"click\", () => {\r\n    languageListLoc.classList.toggle(\"expand\");\r\n    languageListBtnLoc.classList.toggle(\"rotate180\");\r\n})\r\n\r\n\r\n\r\ncityLoc.addEventListener(\"mouseleave\", () => {\r\n    cityListLoc.classList.remove(\"expand\");\r\n    cityListBtnLoc.classList.remove(\"rotate180\")\r\n})\r\n\r\ndistanceLoc.addEventListener(\"mouseleave\", () => {\r\n    distanceListLoc.classList.remove(\"expand\");\r\n    distanceListBtnLoc.classList.remove(\"rotate180\")\r\n})\r\n\r\n// sectorLoc.addEventListener(\"mouseleave\", () => {\r\n//     sectorListLoc.classList.remove(\"expand\");\r\n//     sectorListBtnLoc.classList.remove(\"rotate180\")\r\n// })\r\n\r\nemploymentFormLoc.addEventListener(\"mouseleave\", () => {\r\n    employmentFormListLoc.classList.remove(\"expand\");\r\n    employmentFormListBtnLoc.classList.remove(\"rotate180\")\r\n})\r\n\r\n// workingHoursLoc.addEventListener(\"mouseleave\", () => {\r\n//     workingHoursListLoc.classList.remove(\"expand\");\r\n//     workingHoursListBtnLoc.classList.remove(\"rotate180\")\r\n// })\r\n\r\nlanguageLoc.addEventListener(\"mouseleave\", () => {\r\n    languageListLoc.classList.remove(\"expand\");\r\n    languageListBtnLoc.classList.remove(\"rotate180\")\r\n})\r\n\r\n\r\nlet filterConfigData = {};\r\nlet apiPage = 1;\r\nlet rawAPIArray = [];\r\nlet allRecordsArray = [];\r\nlet recordsNumber = 0;\r\nlet recordsOnPage = 20;\r\nlet filtersON = false;\r\nlet filterBranchesList = [];\r\nlet filterJobFormList = [];\r\nlet filterJobTypeList = [];\r\nlet filterLangList = [];\r\nlet filterCountriesList = {};\r\nlet filterListMaxHeight = 0;\r\nlet filteredRecordsArray_11;\r\n\r\n\r\n// change distance label after choose\r\ndistanceInputsLoc.forEach((elem) => {\r\n    elem.addEventListener(\"change\", () => {\r\n        distanceTitleLoc.innerText = `+${Number(elem.value)} km`;\r\n        distanceTitleLoc.dataset.distance = Number(elem.value);\r\n    })\r\n})\r\n\r\nrecordsOnPageLoc.value = recordsOnPage;\r\n\r\nlet citySelectedFilterArray = [];\r\n\r\nconst actionAfterCityFilterChange = (e) => {\r\n\r\n    if (e.target.checked) {\r\n        citySelectedFilterArray.push(e.target.value)\r\n    } else {\r\n        const indexDeletedItem = citySelectedFilterArray.indexOf(e.target.value);\r\n        citySelectedFilterArray.splice(indexDeletedItem,1);\r\n    }\r\n\r\n    if (citySelectedFilterArray.length !== 0) {\r\n        cityListTitleLoc.classList.add(\"mini\");\r\n    } else {\r\n        cityListTitleLoc.classList.remove(\"mini\");\r\n    }\r\n\r\n    citySelectedOptionsLoc.innerText = citySelectedFilterArray.join(\", \");\r\n    \r\n}\r\n\r\nlet sectorSelectedFilterArray = [];\r\n\r\nconst actionAfterSectorFilterChange = (e) => {\r\n\r\n    if (e.target.checked) {\r\n        sectorSelectedFilterArray.push(e.target.value)\r\n    } else {\r\n        const indexDeletedItem = sectorSelectedFilterArray.indexOf(e.target.value);\r\n        sectorSelectedFilterArray.splice(indexDeletedItem,1);\r\n    }\r\n\r\n    if (sectorSelectedFilterArray.length !== 0) {\r\n        sectorListTitleLoc.classList.add(\"mini\");\r\n    } else {\r\n        sectorListTitleLoc.classList.remove(\"mini\");\r\n    }\r\n\r\n    sectorSelectedOptionsLoc.innerText = sectorSelectedFilterArray.join(\", \");\r\n    \r\n}\r\n\r\nlet employmentFormSelectedFilterArray = [];\r\n\r\nconst actionAfterEmploymentFormFilterChange = (e) => {\r\n\r\n    if (e.target.checked) {\r\n        employmentFormSelectedFilterArray.push(e.target.value)\r\n    } else {\r\n        const indexDeletedItem = employmentFormSelectedFilterArray.indexOf(e.target.value);\r\n        employmentFormSelectedFilterArray.splice(indexDeletedItem,1);\r\n    }\r\n\r\n    if (employmentFormSelectedFilterArray.length !== 0) {\r\n        employmentFormListTitleLoc.classList.add(\"mini\");\r\n    } else {\r\n        employmentFormListTitleLoc.classList.remove(\"mini\");\r\n    }\r\n\r\n    employmentFormSelectedOptionsLoc.innerText = employmentFormSelectedFilterArray.join(\", \");\r\n    \r\n}\r\n\r\nlet workingHoursSelectedFilterArray = [];\r\n\r\nconst actionAfterWorkingHoursFilterChange = (e) => {\r\n\r\n    if (e.target.checked) {\r\n        workingHoursSelectedFilterArray.push(e.target.value)\r\n    } else {\r\n        const indexDeletedItem = workingHoursSelectedFilterArray.indexOf(e.target.value);\r\n        workingHoursSelectedFilterArray.splice(indexDeletedItem,1);\r\n    }\r\n\r\n    if (workingHoursSelectedFilterArray.length !== 0) {\r\n        workingHoursListTitleLoc.classList.add(\"mini\");\r\n    } else {\r\n        workingHoursListTitleLoc.classList.remove(\"mini\");\r\n    }\r\n\r\n    workingHoursSelectedOptionsLoc.innerText = workingHoursSelectedFilterArray.join(\", \");\r\n    \r\n}\r\n\r\nlet languageSelectedFilterArray = [];\r\n\r\nconst actionAfterLanguageFilterChange = (e) => {\r\n\r\n    if (e.target.checked) {\r\n        languageSelectedFilterArray.push(e.target.value)\r\n    } else {\r\n        const indexDeletedItem = languageSelectedFilterArray.indexOf(e.target.value);\r\n        languageSelectedFilterArray.splice(indexDeletedItem,1);\r\n    }\r\n\r\n    if (languageSelectedFilterArray.length !== 0) {\r\n        languageListTitleLoc.classList.add(\"mini\");\r\n    } else {\r\n        languageListTitleLoc.classList.remove(\"mini\");\r\n    }\r\n\r\n    languageSelectedOptionsLoc.innerText = languageSelectedFilterArray.join(\", \");\r\n    \r\n}\r\n\r\nconst addListenerToFilterListsElements = () => {\r\n    \r\n    document.querySelectorAll(\".city ul input\").forEach((elem) => {\r\n        elem.addEventListener(\"change\", actionAfterCityFilterChange)\r\n    })\r\n    \r\n    document.querySelectorAll(\".sector ul input\").forEach((elem) => {\r\n        elem.addEventListener(\"change\", actionAfterSectorFilterChange)\r\n    })\r\n\r\n    document.querySelectorAll(\".employment-form ul input\").forEach((elem) => {\r\n        elem.addEventListener(\"change\", actionAfterEmploymentFormFilterChange)\r\n    })\r\n\r\n    document.querySelectorAll(\".working-hours ul input\").forEach((elem) => {\r\n        elem.addEventListener(\"change\", actionAfterWorkingHoursFilterChange)\r\n    })\r\n\r\n    document.querySelectorAll(\".language ul input\").forEach((elem) => {\r\n        elem.addEventListener(\"change\", actionAfterLanguageFilterChange)\r\n    })\r\n\r\n};\r\n\r\n// create RECORDS BOXES ///////////////////////////////////////////////\r\nconst createRecordBoxes = (recordsArray, firstRecordNumber, recordsOnPage) => {\r\n    resultsLoc.replaceChildren();\r\n\r\n    for (i = firstRecordNumber; i < recordsOnPage; i++) {\r\n        // colouring of records by type of recruitment\r\n\r\n        if (recordsArray[i]) {\r\n            let borderColorClass = \"\";\r\n            let textColorClass = \"\";\r\n\r\n            if (!filterConfigData.recruitmentType_colorOnly.length) {\r\n                if (recordsArray[i].recruitmentType === \"PT\") {\r\n                    borderColorClass = \"pt-border\";\r\n                    textColorClass = \"pt-text\";\r\n                }\r\n                if (recordsArray[i].recruitmentType === \"RS\") {\r\n                    borderColorClass = \"rs-border\";\r\n                    textColorClass = \"rs-text\";\r\n                }\r\n                if (recordsArray[i].recruitmentType === \"WEW\") {\r\n                    borderColorClass = \"wew-border\";\r\n                    textColorClass = \"wew-text\";\r\n                }\r\n            } else {\r\n                if (\r\n                    filterConfigData.recruitmentType_colorOnly.indexOf(\"PT\") !==\r\n                    -1\r\n                ) {\r\n                    if (recordsArray[i].recruitmentType === \"PT\") {\r\n                        borderColorClass = \"pt-border\";\r\n                        textColorClass = \"pt-text\";\r\n                    }\r\n                }\r\n\r\n                if (\r\n                    filterConfigData.recruitmentType_colorOnly.indexOf(\"RS\") !==\r\n                    -1\r\n                ) {\r\n                    if (recordsArray[i].recruitmentType === \"RS\") {\r\n                        borderColorClass = \"rs-border\";\r\n                        textColorClass = \"rs-text\";\r\n                    }\r\n                }\r\n\r\n                if (\r\n                    filterConfigData.recruitmentType_colorOnly.indexOf(\r\n                        \"WEW\"\r\n                    ) !== -1\r\n                ) {\r\n                    if (recordsArray[i].recruitmentType === \"WEW\") {\r\n                        borderColorClass = \"wew-border\";\r\n                        textColorClass = \"wew-text\";\r\n                    }\r\n                }\r\n            }\r\n\r\n            let formaZatrudnienia = \"\";\r\n\r\n            if (recordsArray[i].jobForm) {\r\n                recordsArray[i].jobForm.forEach(function (elem) {\r\n                    formaZatrudnienia =\r\n                        formaZatrudnienia + \"<p>\" + elem + \"</p>\";\r\n                });\r\n            }\r\n\r\n            resultsLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<a href=\"${\r\n                    recordsArray[i].url\r\n                }\" target=\"_blank\"><div class=\"result ${borderColorClass}\">\r\n            <div class=\"top\">\r\n              \r\n                    <div class=\"lang\"><p>${recordsArray[i].lang}</p></div>\r\n                    <div class=\"branche-name\">\r\n                        <div class=\"branche\">${\r\n                            recordsArray[i].branche\r\n                                ? recordsArray[i].branche\r\n                                : \"\"\r\n                        }</div>\r\n                        <div class=\"name ${textColorClass}\">${\r\n                    recordsArray[i].name\r\n                }</div>\r\n                   \r\n                </div>\r\n              \r\n            </div>\r\n\r\n            <div class=\"bottom\">\r\n                <div class=\"city-container\">\r\n                    <div class=\"city\"><img src=\"./img/location_dot.svg\">${\r\n                        recordsArray[i].city\r\n                    }</div>\r\n                    </div>\r\n                    <div class=\"details-container\">\r\n                    ${\r\n                        recordsArray[i].jobType\r\n                            ? \"<div class='jobtype'>\" +\r\n                              recordsArray[i].jobType +\r\n                              \"</div>\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        recordsArray[i].visibleRate\r\n                            ? recordsArray[i].salaryFrom &&\r\n                              recordsArray[i].salaryTo\r\n                                ? \"<div class='salary'>\" +\r\n                                  recordsArray[i].salaryFrom +\r\n                                  \" - \" +\r\n                                  recordsArray[i].salaryTo +\r\n                                  \"</div>\"\r\n                                : \"\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        recordsArray[i].remote\r\n                            ? \"<div class='remote'>zdalna</div>\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        recordsArray[i].relocation\r\n                            ? \"<div class='relocation'>relocation</div>\"\r\n                            : \"\"\r\n                    }\r\n                    <div class=\"employmentform\">${formaZatrudnienia}</div>\r\n                    </div>\r\n                </div>\r\n                   \r\n                </div>\r\n          \r\n\r\n        </div></a>`\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\n// filter the data to create FILTERED OBJECTS ARRAY ///////////////////////////////\r\nconst createFilteredRecordsArray = () => {\r\n    const branchesChildrenLoc = branchesLoc.querySelectorAll(\"li input\");\r\n    const jobFormChildrenLoc = jobFormLoc.querySelectorAll(\"li input\");\r\n    const jobTypeChildrenLoc = jobTypeLoc.querySelectorAll(\"li input\");\r\n    const langChildrenLoc = langLoc.querySelectorAll(\"li input\");\r\n    // const countriesChildrenLoc = document.querySelectorAll(\".countries option\");\r\n    const citiesChildrenLoc = citiesLoc.querySelectorAll(\"li input\");\r\n\r\n    let filteredRecordsArray = allRecordsArray;\r\n\r\n    // selectedBranches ////////////////\r\n\r\n    let selectedBranches = [];\r\n\r\n    if (filterConfigData.branche_filter.length) {\r\n        selectedBranches = filterConfigData.branche_filter;\r\n    } else {\r\n        selectedBranches = Array.from(branchesChildrenLoc)\r\n            .filter(function (elem) {\r\n                return elem.checked;\r\n            })\r\n            .map(function (elem) {\r\n                return elem.value;\r\n            });\r\n    }\r\n\r\n    let filteredRecordsArray_1 = [];\r\n\r\n    if (selectedBranches.length !== 0) {\r\n        filteredRecordsArray.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedBranches.forEach((selectedFiltr) => {\r\n                if (el.branche === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_1.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_1 = filteredRecordsArray;\r\n    }\r\n\r\n    // selectedJobForms ////////////////\r\n\r\n    let selectedJobForms = [];\r\n\r\n    selectedJobForms = Array.from(jobFormChildrenLoc)\r\n        .filter(function (elem) {\r\n            return elem.checked;\r\n        })\r\n        .map(function (elem) {\r\n            return elem.value;\r\n        });\r\n\r\n    let filteredRecordsArray_2 = [];\r\n\r\n    if (selectedJobForms.length !== 0) {\r\n        filteredRecordsArray_1.forEach((el, index) => {\r\n            if (el.jobForm) {\r\n                let addFlag = false;\r\n\r\n                selectedJobForms.forEach((selectedFiltr) => {\r\n                    if (el.jobForm.indexOf(selectedFiltr) !== -1) {\r\n                        addFlag = true;\r\n                    }\r\n                });\r\n\r\n                if (addFlag) {\r\n                    filteredRecordsArray_2.push(el);\r\n                }\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_2 = filteredRecordsArray_1;\r\n    }\r\n\r\n    // selectedJobTypes ////////////////\r\n\r\n    let selectedjobTypes = Array.from(jobTypeChildrenLoc)\r\n        .filter(function (elem) {\r\n            return elem.checked;\r\n        })\r\n        .map(function (elem) {\r\n            return elem.value;\r\n        });\r\n\r\n    let filteredRecordsArray_3 = [];\r\n\r\n    if (selectedjobTypes.length !== 0) {\r\n        filteredRecordsArray_2.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedjobTypes.forEach((selectedFiltr) => {\r\n                if (el.jobType === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_3.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_3 = filteredRecordsArray_2;\r\n    }\r\n\r\n    // selectedLangs ////////////////\r\n    let selectedLangs = [];\r\n\r\n    if (\r\n        filterConfigData.language_filter.length \r\n    ) {\r\n        selectedLangs = filterConfigData.language_filter;\r\n    } else {\r\n        selectedLangs = Array.from(langChildrenLoc)\r\n            .filter(function (elem) {\r\n                return elem.checked;\r\n            })\r\n            .map(function (elem) {\r\n                return elem.value;\r\n            });\r\n    }\r\n\r\n    let filteredRecordsArray_4 = [];\r\n\r\n    if (selectedLangs.length !== 0) {\r\n        filteredRecordsArray_3.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedLangs.forEach((selectedFiltr) => {\r\n                if (el.lang === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_4.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_4 = filteredRecordsArray_3;\r\n    }\r\n\r\n    // // selectedSalary ////////////////\r\n\r\n    // let selectedValOne;\r\n    // let selectedValTwo;\r\n    // if (salaryMarkLoc.checked) {\r\n    //     selectedValOne = parseInt(displayValOne.innerText);\r\n    //     selectedValTwo = parseInt(displayValTwo.innerText);\r\n    // }\r\n\r\n    // let filteredRecordsArray_5 = [];\r\n\r\n    // if (salaryMarkLoc.checked) {\r\n    //     filteredRecordsArray_4.forEach((el, index) => {\r\n    //         let addFlag = false;\r\n\r\n    //         if (el.visibleRate) {\r\n    //             if (el.salaryTo && el.salaryFrom) {\r\n    //                 if (\r\n    //                     el.salaryTo >= selectedValOne &&\r\n    //                     el.salaryFrom <= selectedValTwo\r\n    //                 ) {\r\n    //                     addFlag = true;\r\n    //                 }\r\n    //             }\r\n    //             if (el.salaryTo && !el.salaryFrom) {\r\n    //                 if (el.salaryTo >= selectedValOne) {\r\n    //                     addFlag = true;\r\n    //                 }\r\n    //             }\r\n    //             if (!el.salaryTo && el.salaryFrom) {\r\n    //                 if (el.salaryFrom <= selectedValTwo) {\r\n    //                     addFlag = true;\r\n    //                 }\r\n    //             }\r\n    //         }\r\n\r\n    //         if (addFlag) {\r\n    //             filteredRecordsArray_5.push(el);\r\n    //         }\r\n    //     });\r\n    // } else {\r\n    //     filteredRecordsArray_5 = filteredRecordsArray_4;\r\n    // }\r\n\r\n    // // selectedCountry ////////////////\r\n\r\n    // let selectedCountry = [];\r\n\r\n    // if (\r\n    //     filterConfigData.location_country_filter.length \r\n    //     // && !filterConfigData.location_visible\r\n    // ) {\r\n    //     selectedCountry = filterConfigData.location_country_filter;\r\n    // } else {\r\n    //     if (locationMarkLoc.checked) {\r\n    //         selectedCountry = Array.from(countriesChildrenLoc)\r\n    //             .filter(function (elem) {\r\n    //                 if (elem.value) {\r\n    //                     return elem.selected;\r\n    //                 }\r\n    //             })\r\n    //             .map(function (elem) {\r\n    //                 if (elem.value) {\r\n    //                     return elem.value;\r\n    //                 }\r\n    //             });\r\n    //     }\r\n    // }\r\n\r\n    // let filteredRecordsArray_6 = [];\r\n\r\n    // if (\r\n    //     locationMarkLoc.checked ||\r\n    //     (filterConfigData.location_country_filter.length \r\n    //         // && !filterConfigData.location_visible\r\n    //         )\r\n    // ) {\r\n    //     if (selectedCountry.length) {\r\n    //         filteredRecordsArray_5.forEach((el, index) => {\r\n    //             let addFlag = false;\r\n\r\n    //             selectedCountry.forEach((selectedFiltr) => {\r\n    //                 if (el.country === selectedFiltr) {\r\n    //                     addFlag = true;\r\n    //                 }\r\n    //             });\r\n\r\n    //             if (addFlag) {\r\n    //                 filteredRecordsArray_6.push(el);\r\n    //             }\r\n    //         });\r\n    //     } else {\r\n    //         filteredRecordsArray_6 = filteredRecordsArray_5;\r\n    //     }\r\n    // } else {\r\n    //     filteredRecordsArray_6 = filteredRecordsArray_5;\r\n    // }\r\n\r\n    let filteredRecordsArray_6 = filteredRecordsArray_4;\r\n\r\n    // selectedCity & selectedDistance ////////////////\r\n    let selectedCity = [];\r\n\r\n    if (filterConfigData.location_city_filter.length) {\r\n        selectedCity = filterConfigData.location_city_filter;\r\n    } else {\r\n\r\n        selectedCity = Array.from(citiesChildrenLoc)\r\n            .filter(function (elem) {\r\n                if (elem.value) {\r\n                    return elem.checked;\r\n                }\r\n            })\r\n            .map(function (elem) {\r\n                if (elem.value) {\r\n                    return elem.value;\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    let filteredRecordsArray_7 = [];\r\n\r\n    if (selectedCity.length) {\r\n        \r\n        let selectedDistance = parseInt(distanceTitleLoc.dataset.distance);\r\n\r\n        let lati;\r\n        let longi;\r\n        let min_lati;\r\n        let max_lati;\r\n        let min_longi;\r\n        let max_longi;\r\n\r\n        selectedCity.forEach((el_city) => {\r\n            filteredRecordsArray_6.forEach((el_record, index) => {\r\n                if (el_city === el_record.city) {\r\n\r\n                    lati = el_record.lati;\r\n                    longi = el_record.longi;\r\n\r\n                    min_lati = lati - selectedDistance * 0.009044;\r\n                    max_lati = lati + selectedDistance * 0.009044;\r\n                    min_longi = longi - (selectedDistance * 0.0089831) / Math.cos((lati * Math.PI) / 180);\r\n                    max_longi = longi + (selectedDistance * 0.0089831) / Math.cos((lati * Math.PI) / 180);\r\n                }\r\n            });\r\n\r\n            filteredRecordsArray_6.forEach((el_record, index) => {\r\n                if (\r\n                    el_record.lati <= max_lati &&\r\n                    el_record.lati >= min_lati &&\r\n                    el_record.longi <= max_longi &&\r\n                    el_record.longi >= min_longi\r\n                ) {\r\n                    filteredRecordsArray_7.push(el_record);\r\n                }\r\n            })\r\n        })\r\n        \r\n    } else {\r\n        filteredRecordsArray_7 = filteredRecordsArray_6;\r\n    }\r\n   \r\n    // selectedRemote ////////////////\r\n\r\n    let filteredRecordsArray_8 = [];\r\n\r\n    if (remoteLoc.checked || (filterConfigData.remote_filter)) {\r\n        filteredRecordsArray_7.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            if (el.remote) {\r\n                addFlag = true;\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_8.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_8 = filteredRecordsArray_7;\r\n    }\r\n\r\n    // selectedRelocation ////////////////\r\n\r\n    let filteredRecordsArray_9 = [];\r\n\r\n    if (relocationLoc.checked) {\r\n        filteredRecordsArray_8.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            if (el.relocation) {\r\n                addFlag = true;\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_9.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_9 = filteredRecordsArray_8;\r\n    }\r\n\r\n    // searchText ////////////////\r\n\r\n    let filteredRecordsArray_10 = [];\r\n\r\n    let searchText = searchInputLoc.value;\r\n\r\n    if (searchText) {\r\n        filteredRecordsArray_9.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            let position;\r\n\r\n            el.description.forEach(function (elem) {\r\n                if (elem.value && elem.field_id !== \"geolocation\") {\r\n                    position = elem.value\r\n                        .toLowerCase()\r\n                        .search(searchText.toLowerCase());\r\n                    if (position !== -1) {\r\n                        addFlag = true;\r\n                    }\r\n                }\r\n            });\r\n\r\n            position = el.name.toLowerCase().search(searchText.toLowerCase());\r\n            if (position !== -1) {\r\n                addFlag = true;\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_10.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_10 = filteredRecordsArray_9;\r\n    }\r\n\r\n    // selectedRecruitmentType (coloring of records) ////////////////\r\n    filteredRecordsArray_11 = [];\r\n    \r\n    let selectedRecruitmentType = [];\r\n\r\n    if (filterConfigData.recruitmentType_filter.length) {\r\n        selectedRecruitmentType = filterConfigData.recruitmentType_filter;\r\n    }\r\n\r\n    if (selectedRecruitmentType.length !== 0) {\r\n        filteredRecordsArray_10.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedRecruitmentType.forEach((selectedFiltr) => {\r\n                if (el.recruitmentType === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_11.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_11 = filteredRecordsArray_10;\r\n    }\r\n\r\n    recordsNumber = filteredRecordsArray_11.length;\r\n\r\n    // summariseDownload(recordsNumber);\r\n    createRecordBoxes(filteredRecordsArray_11, 0, recordsOnPage);\r\n  \r\n    setPages(recordsNumber);\r\n    filtersON = true;\r\n    // hideFilter();\r\n    \r\n    // setTimeout(setParentIframeHeight, 1000);\r\n    \r\n};\r\n\r\nconst pagesContainerStart = () => {\r\n    pagesContainer.classList.add(\"active\");\r\n};\r\n\r\nconst dropDownBtnStart = () => {\r\n    dropDownLoc.addEventListener(\"click\", showHideFilters);\r\n\r\n    dropDownLoc.classList.add(\"active\");\r\n};\r\n\r\n// create HTML FILTERS LISTS //////////////////////////////////////////////////////\r\nconst createFilterLists = (filterConfigData) => {\r\n\r\n    // if (!filterConfigData.salary_visible) {\r\n    //     salaryLoc.classList.add(\"unactive\");\r\n    // }\r\n\r\n    // if (!filterConfigData.relocation_visible) {\r\n    //     relocationWrapperLoc.classList.add(\"unactive\");\r\n    // }\r\n\r\n    // if (!filterConfigData.language_visible) {\r\n    //     langWrapperLoc.classList.add(\"unactive\");\r\n    // }\r\n\r\n    // if (!filterConfigData.remote_visible) {\r\n    //     remoteWrapperLoc.classList.add(\"unactive\");\r\n    // }\r\n\r\n    // if (!filterConfigData.location_visible) {\r\n    //     locWrapperLoc.classList.add(\"unactive\");\r\n    // }\r\n\r\n    if (!filterConfigData.branche_visible) {\r\n        brancheWrapperLoc.classList.add(\"unactive\");\r\n    }\r\n\r\n    // let isSamsungBrowser = navigator.userAgent.match(/SamsungBrowser/i);\r\n    // let isChromeBrowser = navigator.userAgent.match(/Chrome/i);\r\n\r\n    if (filterBranchesList.length > 0) {\r\n        filterBranchesList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterBranchesList.length * 21 + 3;\r\n        filterListMaxHeight = rowHeight;\r\n        // if (getMobileOperatingSystem() === \"unknown\") {\r\n            // brancheListLoc.style.height = String(rowHeight) + \"px\";\r\n        // } else if (isSamsungBrowser || isChromeBrowser) {\r\n        //     branchesLoc.style.height = \"50px\";\r\n        // } else {\r\n        //     branchesLoc.style.height = String(rowHeight) + \"px\";\r\n        // }\r\n        \r\n        filterBranchesList.forEach(function (el) {\r\n            branchesLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<li>\r\n                <div class=\"checkbox-container-small\">\r\n                    <label class=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"${el}\" name=\"${el}\" value=\"${el}\">\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                    <label class=\"label-text\" for=\"${el}\">${el}</label>\r\n                </div>\r\n            </li>`\r\n            );\r\n            \r\n        });\r\n    }\r\n\r\n    if (filterJobFormList.length > 0) {\r\n        filterJobFormList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterJobFormList.length * 21 + 3;\r\n        // if (getMobileOperatingSystem() === \"unknown\") {\r\n            // jobFormLoc.style.height = String(rowHeight) + \"px\";\r\n        // } else if (isSamsungBrowser || isChromeBrowser) {\r\n        //     jobFormLoc.style.height = \"50px\";\r\n        // } else {\r\n        //     jobFormLoc.style.height = String(rowHeight) + \"px\";\r\n        // }\r\n        filterJobFormList.forEach(function (el) {\r\n            jobFormLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<li>\r\n                <div class=\"checkbox-container-small\">\r\n                    <label class=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"${el}\" name=\"${el}\" value=\"${el}\">\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                    <label class=\"label-text\" for=\"${el}\">${el}</label>\r\n                </div>\r\n            </li>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (filterJobTypeList.length > 0) {\r\n        filterJobTypeList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterJobTypeList.length * 21 + 3;\r\n        // if (getMobileOperatingSystem() === \"unknown\") {\r\n            // jobTypeLoc.style.height = String(rowHeight) + \"px\";\r\n        // } else if (isSamsungBrowser || isChromeBrowser) {\r\n        //     jobTypeLoc.style.height = \"50px\";\r\n        // } else {\r\n        //     jobTypeLoc.style.height = String(rowHeight) + \"px\";\r\n        // }\r\n        filterJobTypeList.forEach(function (el) {\r\n            jobTypeLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<li>\r\n                <div class=\"checkbox-container-small\">\r\n                    <label class=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"${el}\" name=\"${el}\" value=\"${el}\">\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                    <label class=\"label-text\" for=\"${el}\">${el}</label>\r\n                </div>\r\n            </li>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (filterLangList.length > 0) {\r\n        filterLangList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterLangList.length * 21 + 3;\r\n        // if (getMobileOperatingSystem() === \"unknown\") {\r\n            // langLoc.style.height = String(rowHeight) + \"px\";\r\n        // } else if (isSamsungBrowser || isChromeBrowser) {\r\n        //     langLoc.style.height = \"50px\";\r\n        // } else {\r\n        //     langLoc.style.height = String(rowHeight) + \"px\";\r\n        // }\r\n        filterLangList.forEach(function (el) {\r\n            langLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<li>\r\n                <div class=\"checkbox-container-small\">\r\n                    <label class=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"${el}\" name=\"${el}\" value=\"${el}\">\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                    <label class=\"label-text\" for=\"${el}\">${el}</label>\r\n                </div>\r\n            </li>`\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n    if (Object.keys(filterCountriesList).length > 0) {\r\n        // countriesLoc.insertAdjacentHTML(\r\n        //     \"beforeend\",\r\n        //     `<option value=\"\" class=\"placeholder\">Państwo</option>`\r\n        // );\r\n\r\n        // citiesLoc.insertAdjacentHTML(\r\n        //     \"beforeend\",\r\n        //     `<option value=\"\" class=\"placeholder\">Miasto</option>`\r\n        // );\r\n\r\n        function compare(a, b) {\r\n            return a.city.localeCompare(b.city);\r\n        }\r\n\r\n        for (let key in filterCountriesList) {\r\n            filterCountriesList[key].sort(compare);\r\n        }\r\n\r\n        filterCountriesList = Object.keys(filterCountriesList)\r\n            .sort()\r\n            .reduce((accumulator, key) => {\r\n                accumulator[key] = filterCountriesList[key];\r\n                return accumulator;\r\n            }, {});\r\n\r\n        let allCitiesObj = [];\r\n        for (let key in filterCountriesList) {\r\n            // countriesLoc.insertAdjacentHTML(\r\n            //     \"beforeend\",\r\n            //     `<option value=\"${key}\">${key}</option>`\r\n            // );\r\n            allCitiesObj = allCitiesObj.concat(filterCountriesList[key]);\r\n        }\r\n\r\n        let allCitiesArray = [];\r\n        allCitiesObj.forEach((el) => {\r\n            allCitiesArray.push(el.city);\r\n        });\r\n\r\n        allCitiesArray.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n\r\n        allCitiesArray.forEach(function (el) {\r\n            citiesLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<li>\r\n                <div class=\"checkbox-container-small\">\r\n                    <label class=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"${el}\" name=\"${el}\" value=\"${el}\">\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                    <label class=\"label-text\" for=\"${el}\">${el}</label>\r\n                </div>\r\n            </li>`\r\n            );\r\n        });\r\n    }\r\n\r\n    // sliderOne.min = filterMinSalary.toString();\r\n    // sliderTwo.min = filterMinSalary.toString();\r\n    // sliderOne.max = filterMaxSalary.toString();\r\n    // sliderTwo.max = filterMaxSalary.toString();\r\n    // sliderOne.value = filterMinSalary.toString();\r\n    // sliderTwo.value = filterMaxSalary.toString();\r\n    // slideOne();\r\n    // slideTwo();\r\n};\r\n\r\n// PAGES /////////////////////////////////////////////////////////////\r\nconst changePage = (pageBtn) => {\r\n    pageButtonsLoc.forEach((el) => {\r\n        el.classList.remove(\"active\");\r\n    });\r\n    pageBtn.classList.add(\"active\");\r\n    let firstRecord =\r\n        recordsOnPage * parseInt(pageBtn.innerText) - recordsOnPage;\r\n    let lastRecord = recordsOnPage * parseInt(pageBtn.innerText);\r\n\r\n    filtersON\r\n        ? createRecordBoxes(filteredRecordsArray_11, firstRecord, lastRecord)\r\n        : createRecordBoxes(allRecordsArray, firstRecord, lastRecord);\r\n    globActivePageNo = parseInt(pageBtn.innerText);\r\n    // setTimeout(setParentIframeHeight(), 500);\r\n};\r\n\r\nlet globActivePageNo;\r\n\r\nconst movePrevPagesBtns = () => {\r\n    let firstDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).shift().innerText\r\n    );\r\n    let lastDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).pop().innerText\r\n    );\r\n\r\n    let activePageNo;\r\n    activePageNo = document.querySelector(\".page.active\");\r\n\r\n    if (activePageNo) {\r\n        activePageNo = parseInt(activePageNo.innerText);\r\n    }\r\n\r\n    if (firstDispalyedPageNo > 1) {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (n = firstDispalyedPageNo - 1; n <= lastDispalyedPageNo - 1; n++) {\r\n            if (!activePageNo) {\r\n                activePageNo = globActivePageNo;\r\n            }\r\n            if (activePageNo && n === activePageNo) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n\r\n        if (lastDispalyedPageNo < pagesQuantityCalc + 1) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next active\"><img src=\"./img/chevron-right.svg\" alt=\"\" /></div>`\r\n            );\r\n            let nextBtnLoc = document.querySelector(\".next\");\r\n            nextBtnLoc.addEventListener(\"click\", () => {\r\n                moveNextPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        if (firstDispalyedPageNo > 2) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev active\"><img src=\"./img/chevron-left.svg\" alt=\"\" /></div>`\r\n            );\r\n            let prevBtnLoc = document.querySelector(\".prev\");\r\n            prevBtnLoc.addEventListener(\"click\", () => {\r\n                movePrevPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        pageButtonsLoc = document.querySelectorAll(\".page\");\r\n        pageButtonsLoc.forEach((el) => {\r\n            el.addEventListener(\"click\", (e) => {\r\n                changePage(e.target);\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nconst moveNextPagesBtns = () => {\r\n    let firstDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).shift().innerText\r\n    );\r\n    let lastDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).pop().innerText\r\n    );\r\n\r\n    let activePageNo;\r\n    activePageNo = document.querySelector(\".page.active\");\r\n    if (activePageNo) {\r\n        activePageNo = parseInt(activePageNo.innerText);\r\n        globActivePageNo = activePageNo;\r\n    }\r\n\r\n    if (lastDispalyedPageNo < pagesQuantityCalc) {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (n = firstDispalyedPageNo + 1; n <= lastDispalyedPageNo + 1; n++) {\r\n            if (!activePageNo) {\r\n                activePageNo = globActivePageNo;\r\n            }\r\n            if (activePageNo && n === activePageNo) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n\r\n        if (lastDispalyedPageNo < pagesQuantityCalc - 1) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next active\"><img src=\"./img/chevron-right.svg\" alt=\"\" /></div>`\r\n            );\r\n            let nextBtnLoc = document.querySelector(\".next\");\r\n            nextBtnLoc.addEventListener(\"click\", () => {\r\n                moveNextPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        if (firstDispalyedPageNo > 0) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev active\"><img src=\"./img/chevron-left.svg\" alt=\"\" /></div>`\r\n            );\r\n            let prevBtnLoc = document.querySelector(\".prev\");\r\n            prevBtnLoc.addEventListener(\"click\", () => {\r\n                movePrevPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        pageButtonsLoc = document.querySelectorAll(\".page\");\r\n        pageButtonsLoc.forEach((el) => {\r\n            el.addEventListener(\"click\", (e) => {\r\n                changePage(e.target);\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\n// RWD /////////////////////////////////////////////////////////////\r\nfunction getWidth() {\r\n    return Math.max(\r\n        document.body.scrollWidth,\r\n        document.documentElement.scrollWidth,\r\n        document.body.offsetWidth,\r\n        document.documentElement.offsetWidth,\r\n        document.documentElement.clientWidth\r\n    );\r\n}\r\n\r\nfunction getHeight() {\r\n    return Math.max(\r\n        document.body.scrollHeight,\r\n        document.documentElement.scrollHeight,\r\n        document.body.offsetHeight,\r\n        document.documentElement.offsetHeight,\r\n        document.documentElement.clientHeight\r\n    );\r\n}\r\n\r\nlet pagesQuantityCalc;\r\n\r\nconst setPages = (recordsNumber) => {\r\n    pagesQuantityCalc = Math.ceil(recordsNumber / recordsOnPage);\r\n\r\n    if (pagesQuantityCalc > maxPageBtns) {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (n = 1; n <= maxPageBtns; n++) {\r\n            if (n === 1) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n        pagesSwitchLoc.insertAdjacentHTML(\r\n            \"beforeend\",\r\n            `<div class=\"next active\"><img src=\"./img/chevron-right.svg\" alt=\"\" /></div>`\r\n        );\r\n        let nextBtnLoc = document.querySelector(\".next\");\r\n        nextBtnLoc.addEventListener(\"click\", () => {\r\n            moveNextPagesBtns();\r\n        });\r\n    } else {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (n = 1; n <= pagesQuantityCalc; n++) {\r\n            if (n === 1) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n\r\n        pagesSwitchLoc.insertAdjacentHTML(\r\n            \"beforeend\",\r\n            `<div class=\"next\"><img src=\"\" alt=\"\" /></div>`\r\n        );\r\n    }\r\n\r\n    pagesSwitchLoc.insertAdjacentHTML(\r\n        \"afterbegin\",\r\n        `<div class=\"prev\"><img src=\"\" alt=\"\" /></div>`\r\n    );\r\n\r\n    pageButtonsLoc = document.querySelectorAll(\".page\");\r\n    pageButtonsLoc.forEach((el) => {\r\n        el.addEventListener(\"click\", (e) => {\r\n            changePage(e.target);\r\n        });\r\n    });\r\n};\r\n\r\nlet maxPageBtns;\r\n\r\nconst setPagesBtnQuantity = () => {\r\n   \r\n    if (getWidth() < 500) {\r\n        maxPageBtns = 3;\r\n    }\r\n    if (getWidth() >= 500 && getWidth() < 650) {\r\n        maxPageBtns = 3;\r\n    }\r\n    if (getWidth() >= 650 && getWidth() < 750) {\r\n        maxPageBtns = 4;\r\n    }\r\n    if (getWidth() >= 750 && getWidth() < 950) {\r\n        maxPageBtns = 7;\r\n    }\r\n    if (getWidth() >= 950 && getWidth() < 1200) {\r\n        maxPageBtns = 12;\r\n    }\r\n    if (getWidth() >= 1200) {\r\n        maxPageBtns = 15;\r\n    }\r\n\r\n    setPages(recordsNumber);\r\n\r\n}\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n    setPagesBtnQuantity();\r\n});\r\n\r\nsetPagesBtnQuantity();\r\n\r\n\r\n\r\n// create AWARDED RECORDS BOXES ///////////////////////////////////////////////\r\nconst createAwardedRecordBoxes = (recordsArray, filterConfigData) => {\r\n\r\n    awardedResultsLoc.replaceChildren();\r\n\r\n    let awardedRecordsArray = recordsArray.filter((elem) => {\r\n        return elem.awarded;  \r\n    });\r\n\r\n    if (awardedRecordsArray.length > 0) {\r\n\r\n        if (filterConfigData.remote_filter) {\r\n            awardedRecordsArray = awardedRecordsArray.filter((elem) => {\r\n                return elem.remote;\r\n            });\r\n        }\r\n        \r\n        if (filterConfigData.language_filter.length > 0) {\r\n            filterAwarded(filterConfigData.language_filter, awardedRecordsArray, \"lang\");\r\n        }\r\n\r\n        if (filterConfigData.branche_filter.length > 0) {\r\n            filterAwarded(filterConfigData.branche_filter, awardedRecordsArray, \"branche\");\r\n        }\r\n\r\n        if (filterConfigData.location_country_filter.length > 0) {\r\n            filterAwarded(filterConfigData.location_country_filter, awardedRecordsArray, \"country\");\r\n        }\r\n\r\n        if (filterConfigData.location_city_filter.length > 0) {\r\n            filterAwarded(filterConfigData.location_city_filter, awardedRecordsArray, \"city\");\r\n        }\r\n\r\n        if (filterConfigData.recruitmentType_filter.length > 0) {\r\n            filterAwarded(filterConfigData.recruitmentType_filter, awardedRecordsArray, \"recruitmentType\");\r\n        }\r\n\r\n        for (i = firstRecordNumber; i < 10; i++) {\r\n            if (awardedRecordsArray[i]) {\r\n                let borderColorClass = \"\";\r\n                let textColorClass = \"\";\r\n\r\n                if (awardedRecordsArray[i].recruitmentType === \"PT\") {\r\n                    borderColorClass = \"pt-border\";\r\n                    textColorClass = \"pt-text\";\r\n                }\r\n                if (awardedRecordsArray[i].recruitmentType === \"RS\") {\r\n                    borderColorClass = \"rs-border\";\r\n                    textColorClass = \"rs-text\";\r\n                }\r\n                if (awardedRecordsArray[i].recruitmentType === \"WEW\") {\r\n                    borderColorClass = \"wew-border\";\r\n                    textColorClass = \"wew-text\";\r\n                }\r\n\r\n                let formaZatrudnienia = \"\";\r\n\r\n                if (awardedRecordsArray[i].jobForm) {\r\n                    awardedRecordsArray[i].jobForm.forEach(function (elem) {\r\n                        formaZatrudnienia =\r\n                            formaZatrudnienia + \"<p>\" + elem + \"</p>\";\r\n                    });\r\n                }\r\n\r\n                awardedResultsLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<a href=\"${\r\n                        awardedRecordsArray[i].url\r\n                    }\" target=\"_blank\"><div class=\"result ${borderColorClass}\">\r\n                <div class=\"top\">\r\n                \r\n                        <div class=\"lang\">\r\n                            <p>${awardedRecordsArray[i].lang}</p>\r\n                        </div>\r\n                        <div class=\"branche-name\">\r\n                            <div class=\"branche\">${\r\n                                awardedRecordsArray[i].branche\r\n                                    ? awardedRecordsArray[i].branche\r\n                                    : \"\"\r\n                            }</div>\r\n                            <div class=\"name ${textColorClass}\">${\r\n                        awardedRecordsArray[i].name\r\n                    }</div>\r\n                        </div>\r\n                    \r\n                </div>\r\n\r\n                <div class=\"bottom\">\r\n                    <div class=\"city-container\">\r\n                        <div class=\"city\"><img src=\"./img/location_dot.svg\">${\r\n                            awardedRecordsArray[i].city\r\n                        }</div></div>\r\n                        <div class=\"details-container\">\r\n                        ${\r\n                            awardedRecordsArray[i].remote\r\n                                ? \"<div class='remote'>zdalna</div>\"\r\n                                : \"\"\r\n                        }\r\n                        ${\r\n                            awardedRecordsArray[i].relocation\r\n                                ? \"<div class='relocation'>relocation</div>\"\r\n                                : \"\"\r\n                        }\r\n                        ${\r\n                            awardedRecordsArray[i].jobType\r\n                                ? \"<div class='jobtype'>\" +\r\n                                awardedRecordsArray[i].jobType +\r\n                                \"</div>\"\r\n                                : \"\"\r\n                        }\r\n                        ${\r\n                            awardedRecordsArray[i].visibleRate\r\n                                ? awardedRecordsArray[i].salaryFrom &&\r\n                                awardedRecordsArray[i].salaryTo\r\n                                    ? \"<div class='salary'>\" +\r\n                                    awardedRecordsArray[i].salaryFrom +\r\n                                    \" - \" +\r\n                                    awardedRecordsArray[i].salaryTo +\r\n                                    \"</div>\"\r\n                                    : \"\"\r\n                                : \"\"\r\n                        }\r\n                        <div class=\"employmentform\">${formaZatrudnienia}</div>\r\n                        </div>\r\n                    \r\n                </div>\r\n\r\n                <div class=\"ribbon-wrap\">\r\n                        <div class=\"ribbon\">\r\n                                <img src=\"./img/star.svg\" alt=\"\">\r\n                                <img src=\"./img/star.svg\" alt=\"\">\r\n                                <img src=\"./img/star.svg\" alt=\"\">\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n\r\n                \r\n\r\n            </div></a>`\r\n                );\r\n            }\r\n        }\r\n    } else {\r\n        awardedResultsLoc.style.margin = \"0\"\r\n    }\r\n};\r\n\r\n// show RECORDS NUMBER ///////////////////////////////////////////////\r\nconst summariseDownload = (recordsNumber) => {\r\n    recNumLoc.innerText = `Znaleziono ${recordsNumber} ogłoszeń`;\r\n    if (!recordsNumber) {\r\n        noResultsLoc.classList.add(\"active\");\r\n    } else {\r\n        noResultsLoc.classList.remove(\"active\");\r\n    }\r\n};\r\n\r\n// create FILTER DATA from API data ///////////////////////////////////////////////\r\nconst createDataForFilters = (\r\n    branche,\r\n    jobForm,\r\n    jobType,\r\n    lang,\r\n    visibleRate,\r\n    salaryFrom,\r\n    salaryTo,\r\n    country,\r\n    city,\r\n    lati,\r\n    longi\r\n) => {\r\n   \r\n    if (filterBranchesList.indexOf(branche) === -1 && branche !== undefined) {\r\n        if (filterConfigData.branche_filter.length) {\r\n            if (filterConfigData.branche_filter.indexOf(branche) !== -1) {\r\n                filterBranchesList.push(branche);\r\n            }\r\n        } else {\r\n            filterBranchesList.push(branche);\r\n        }\r\n       \r\n    }\r\n\r\n    if (jobForm) {\r\n        jobForm.forEach(function (elem) {\r\n            if (filterJobFormList.indexOf(elem) === -1) {\r\n                filterJobFormList.push(elem);\r\n            }\r\n        });\r\n    }\r\n\r\n    if (filterJobTypeList.indexOf(jobType) === -1 && jobType !== undefined) {\r\n        filterJobTypeList.push(jobType);\r\n    }\r\n\r\n    if (filterLangList.indexOf(lang) === -1) {\r\n\r\n        if (filterConfigData.language_filter.length) {\r\n            if (filterConfigData.language_filter.indexOf(lang) !== -1) {\r\n                filterLangList.push(lang);\r\n            }\r\n        } else {\r\n            filterLangList.push(lang);\r\n        }\r\n    }\r\n\r\n    // if (visibleRate) {\r\n    //     if (salaryFrom < filterMinSalary) {\r\n    //         filterMinSalary = salaryFrom;\r\n    //     }\r\n    //     if (salaryTo > filterMaxSalary) {\r\n    //         filterMaxSalary = salaryTo;\r\n    //     }\r\n    // }\r\n\r\n    if (filterConfigData.location_country_filter.length) {\r\n        \r\n        if (filterConfigData.location_country_filter.indexOf(country) !== -1) {\r\n            if (filterCountriesList[country]) {\r\n                if (\r\n                    filterCountriesList[country].findIndex(\r\n                        (arr_el) => arr_el.city === city\r\n                    ) === -1\r\n                ) {\r\n                    if (filterConfigData.location_city_filter.length) {\r\n                        if (filterConfigData.location_city_filter.indexOf(city) !== -1) {\r\n                            filterCountriesList[country].push({\r\n                                city: city,\r\n                                lati: lati,\r\n                                longi: longi,\r\n                            });\r\n                        }\r\n                    } else {\r\n                        filterCountriesList[country].push({\r\n                            city: city,\r\n                            lati: lati,\r\n                            longi: longi,\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                filterCountriesList[country] = [];\r\n                if (filterConfigData.location_city_filter.length) {\r\n                    if (filterConfigData.location_city_filter.indexOf(city) !== -1) {\r\n                        filterCountriesList[country].push({\r\n                            city: city,\r\n                            lati: lati,\r\n                            longi: longi,\r\n                        });\r\n                    }\r\n                } else {\r\n                    filterCountriesList[country].push({\r\n                        city: city,\r\n                        lati: lati,\r\n                        longi: longi,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    } else {\r\n        \r\n        if (filterCountriesList[country]) {\r\n            if (\r\n                filterCountriesList[country].findIndex(\r\n                    (arr_el) => arr_el.city === city\r\n                ) === -1\r\n            ) {\r\n                filterCountriesList[country].push({\r\n                    city: city,\r\n                    lati: lati,\r\n                    longi: longi,\r\n                });\r\n            }\r\n        } else {\r\n            filterCountriesList[country] = [];\r\n            filterCountriesList[country].push({\r\n                city: city,\r\n                lati: lati,\r\n                longi: longi,\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n// create OBJECTS ARRAY from Raw API JSON ///////////////////////////////////////////////\r\nconst reworkData = (rawAPIArray) => {\r\n    rawAPIArray.forEach((el) => {\r\n        if (el.options.job_location) {\r\n            parsedJobLocation = JSON.parse(el.options.job_location);\r\n        }\r\n\r\n        allRecordsArray.push({\r\n            url: el.url,\r\n            name: el.advert.name,\r\n            branche: el.options.branches,\r\n            lang: el.advert.language,\r\n            jobType: el.options.job_type,\r\n            visibleRate: parseInt(el.options._Widoczna_stawka),\r\n            salaryFrom: parseInt(el.options._spodziewane_wynagrodzenie_od),\r\n            salaryTo: parseInt(el.options._spodziewane_wynagrodzenie_do),\r\n            remote: el.options.remote,\r\n            relocation: el.options._relokacja,\r\n            recruitmentType: el.options._rekrutacja_rodzaj,\r\n            jobForm: el.options._forma_zatrudnienia,\r\n            country: parsedJobLocation.country,\r\n            city: parsedJobLocation.locality,\r\n            lati: parseFloat(parsedJobLocation.latitude),\r\n            longi: parseFloat(parsedJobLocation.longitude),\r\n            description: el.advert.values,\r\n            awarded: el.awarded,\r\n        });\r\n\r\n        createDataForFilters(\r\n            el.options.branches,\r\n            el.options._forma_zatrudnienia,\r\n            el.options.job_type,\r\n            el.advert.language,\r\n            parseInt(el.options._Widoczna_stawka),\r\n            parseInt(el.options._spodziewane_wynagrodzenie_od),\r\n            parseInt(el.options._spodziewane_wynagrodzenie_do),\r\n            parsedJobLocation.country,\r\n            parsedJobLocation.locality,\r\n            parseFloat(parsedJobLocation.latitude),\r\n            parseFloat(parsedJobLocation.longitude)\r\n        );\r\n    });\r\n};\r\n\r\n// gets DATA FROM API ///////////////////////////////////////////////\r\nconst getAPI = (apiPage) => {\r\n    const response = fetch(\r\n        \"https://grupaprogres.traffit.com/public/job_posts/published\",\r\n        {\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-Request-Page-Size\": \"100\",\r\n                \"X-Request-Current-Page\": apiPage,\r\n                \"X-Request-Sort\": '{\"sort_by\": \"id\", \"direction\": \"ASC\"}',\r\n            },\r\n        }\r\n    );\r\n\r\n    return response;\r\n};\r\n\r\nconst loopOnAPI = (jsonData, filterConfigData) => {\r\n    if (jsonData.length > 0) {\r\n        rawAPIArray = rawAPIArray.concat(jsonData);\r\n        apiPage++;\r\n        createRecordsObjFromAPI(apiPage, filterConfigData);\r\n    } else {\r\n        reworkData(rawAPIArray);\r\n        recordsNumber = rawAPIArray.length;\r\n        // summariseDownload(recordsNumber);\r\n        createAwardedRecordBoxes(allRecordsArray, filterConfigData);\r\n        setPages(recordsNumber);\r\n        createFilterLists(filterConfigData);\r\n        addListenerToFilterListsElements();\r\n        // dropDownBtnStart();\r\n        // pagesContainerStart();\r\n        createFilteredRecordsArray();\r\n\r\n        \r\n    }\r\n};\r\n\r\nasync function createRecordsObjFromAPI(apiPage, filterConfigData) {\r\n    const rawData = await getAPI(apiPage);\r\n    const jsonData = await rawData.json();\r\n    loopOnAPI(jsonData, filterConfigData);\r\n}\r\n\r\n// consider configuration filters ////////////////////////\r\nconst getConfigFilter = () => {\r\n    const response = fetch(\"./config/config.json\");\r\n    return response;\r\n};\r\n\r\nasync function readConfigFilter() {\r\n    try {\r\n        const rawData = await getConfigFilter();\r\n        filterConfigData = await rawData.json();\r\n        createRecordsObjFromAPI(apiPage, filterConfigData);\r\n    } catch (e) {\r\n        console.error(e);\r\n        createRecordsObjFromAPI(apiPage);\r\n    }\r\n}\r\n\r\nreadConfigFilter();\r\n\r\n// change RECORDS QUANTITY ON PAGE //////////////////////////////////////////////////\r\nrecordsOnPageLoc.addEventListener(\"change\", (e) => {\r\n    recordsOnPage = parseInt(e.target.value);\r\n\r\n    filtersON\r\n        ? createRecordBoxes(filteredRecordsArray_11, 0, recordsOnPage)\r\n        : createRecordBoxes(allRecordsArray, 0, recordsOnPage);\r\n    setPages(recordsNumber);\r\n\r\n    // setParentIframeHeight();\r\n});\r\n\r\n// SEARCH LISTENER /////////////////////////////////////////////////////////////\r\nsearchBtn.addEventListener(\"click\", createFilteredRecordsArray);\r\n\r\nadvancedSearchBar.addEventListener(\"click\", () => {\r\n    advancedContainer.classList.toggle(\"showed\");\r\n    advancedSearchBtn.classList.toggle(\"rotate180\");\r\n   \r\n})"]}