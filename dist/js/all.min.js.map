{"version":3,"sources":["main.js"],"names":["cityLoc","document","querySelector","cityListBtnLoc","cityListLoc","distanceLoc","distanceListBtnLoc","distanceListLoc","sectorLoc","sectorListBtnLoc","sectorListLoc","employmentFormLoc","employmentFormListBtnLoc","employmentFormListLoc","workingHoursLoc","workingHoursListBtnLoc","workingHoursListLoc","languageLoc","languageListBtnLoc","languageListLoc","awardedResultsLoc","recordsOnPageLoc","pagesSwitchLoc","brancheWrapperLoc","branchesLoc","jobFormLoc","jobTypeLoc","langLoc","citiesLoc","resultsLoc","remoteLoc","relocationLoc","searchInputLoc","distanceInputsLoc","querySelectorAll","distanceTitleLoc","searchBtn","advancedSearchBtn","advancedContainer","addEventListener","classList","toggle","remove","filteredRecordsArray_11","filterConfigData","apiPage","rawAPIArray","allRecordsArray","recordsNumber","recordsOnPage","filtersON","filterBranchesList","filterJobFormList","filterJobTypeList","filterLangList","filterCountriesList","filterListMaxHeight","forEach","elem","innerText","Number","value","dataset","distance","createRecordBoxes","recordsArray","firstRecordNumber","replaceChildren","i","borderColorClass","textColorClass","recruitmentType_colorOnly","length","indexOf","recruitmentType","formaZatrudnienia","jobForm","insertAdjacentHTML","url","lang","branche","name","city","jobType","visibleRate","salaryFrom","salaryTo","remote","relocation","createFilteredRecordsArray","branchesChildrenLoc","jobFormChildrenLoc","jobTypeChildrenLoc","langChildrenLoc","citiesChildrenLoc","filteredRecordsArray","selectedBranches","branche_filter","Array","from","filter","checked","map","filteredRecordsArray_1","el","index","addFlag","selectedFiltr","push","selectedJobForms","filteredRecordsArray_2","selectedjobTypes","filteredRecordsArray_3","selectedLangs","language_filter","filteredRecordsArray_4","filteredRecordsArray_6","selectedCity","location_city_filter","filteredRecordsArray_7","lati","longi","min_lati","max_lati","min_longi","max_longi","selectedDistance","parseInt","el_city","el_record","Math","cos","PI","filteredRecordsArray_8","filteredRecordsArray_9","filteredRecordsArray_10","searchText","position","description","field_id","toLowerCase","search","selectedRecruitmentType","recruitmentType_filter","setPages","pagesContainerStart","pagesContainer","add","dropDownBtnStart","dropDownLoc","showHideFilters","createFilterLists","branche_visible","sort","a","b","localeCompare","rowHeight","Object","keys","compare","key","reduce","accumulator","allCitiesObj","concat","allCitiesArray","changePage","pageBtn","pageButtonsLoc","firstRecord","lastRecord","globActivePageNo","movePrevPagesBtns","activePageNo","firstDispalyedPageNo","shift","lastDispalyedPageNo","pop","n","pagesQuantityCalc","moveNextPagesBtns","e","target","getWidth","max","body","scrollWidth","documentElement","offsetWidth","clientWidth","getHeight","scrollHeight","offsetHeight","clientHeight","ceil","maxPageBtns","setPagesBtnQuantity","window","createAwardedRecordBoxes","awardedRecordsArray","awarded","remote_filter","filterAwarded","location_country_filter","style","margin","summariseDownload","recNumLoc","noResultsLoc","createDataForFilters","country","undefined","findIndex","arr_el","reworkData","options","job_location","parsedJobLocation","JSON","parse","advert","branches","language","job_type","_Widoczna_stawka","_spodziewane_wynagrodzenie_od","_spodziewane_wynagrodzenie_do","_relokacja","_rekrutacja_rodzaj","_forma_zatrudnienia","locality","parseFloat","latitude","longitude","values","getAPI","fetch","mode","headers","loopOnAPI","jsonData","createRecordsObjFromAPI","async","rawData","json","getConfigFilter","readConfigFilter","console","error"],"mappings":"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","file":"all.min.js","sourcesContent":["const cityLoc = document.querySelector(\".city\");\r\nconst cityListBtnLoc = document.querySelector(\".city .arrow-down\");\r\nconst cityListLoc = document.querySelector(\".city .list\");\r\nconst distanceLoc = document.querySelector(\".distance\");\r\nconst distanceListBtnLoc = document.querySelector(\".distance .arrow-down\");\r\nconst distanceListLoc = document.querySelector(\".distance .list\");\r\nconst sectorLoc = document.querySelector(\".sector\");\r\nconst sectorListBtnLoc = document.querySelector(\".sector .arrow-down\");\r\nconst sectorListLoc = document.querySelector(\".sector .list\");\r\nconst employmentFormLoc = document.querySelector(\".employment-form\");\r\nconst employmentFormListBtnLoc = document.querySelector(\".employment-form .arrow-down\");\r\nconst employmentFormListLoc = document.querySelector(\".employment-form .list\");\r\nconst workingHoursLoc = document.querySelector(\".working-hours\");\r\nconst workingHoursListBtnLoc = document.querySelector(\".working-hours .arrow-down\");\r\nconst workingHoursListLoc = document.querySelector(\".working-hours .list\");\r\nconst languageLoc = document.querySelector(\".language\");\r\nconst languageListBtnLoc = document.querySelector(\".language .arrow-down\");\r\nconst languageListLoc = document.querySelector(\".language .list\");\r\n\r\nconst awardedResultsLoc = document.querySelector(\".awarded\");\r\nconst recordsOnPageLoc = document.querySelector(\".records-on-page\");\r\nconst pagesSwitchLoc = document.querySelector(\".pages\");\r\n\r\nconst brancheWrapperLoc = document.querySelector(\".sector\");\r\nconst branchesLoc = document.querySelector(\".sector ul\");\r\nconst jobFormLoc = document.querySelector(\".employment-form ul\"); \r\nconst jobTypeLoc = document.querySelector(\".working-hours ul\"); \r\nconst langLoc = document.querySelector(\".language ul\");\r\nconst citiesLoc = document.querySelector(\".city ul\");\r\nconst resultsLoc = document.querySelector(\".results\");\r\n\r\nconst remoteLoc = document.querySelector(\"#remote\");\r\nconst relocationLoc = document.querySelector(\"#relocation\");\r\nconst searchInputLoc = document.querySelector(\".job input\");\r\n\r\nconst distanceInputsLoc = document.querySelectorAll(\".distance input\");\r\nconst distanceTitleLoc = document.querySelector(\".distance .list-title\");\r\n\r\nconst searchBtn = document.querySelector(\".search-btn\");\r\n\r\nconst advancedSearchBtn = document.querySelector(\".advanced-search-btn .arrow-down\");\r\nconst advancedContainer = document.querySelector(\".advanced-container\");\r\n\r\ncityLoc.addEventListener(\"click\", () => {\r\n    cityListLoc.classList.toggle(\"expand\");\r\n    cityListBtnLoc.classList.toggle(\"rotate180\")\r\n})\r\n\r\ndistanceLoc.addEventListener(\"click\", () => {\r\n    distanceListLoc.classList.toggle(\"expand\");\r\n    distanceListBtnLoc.classList.toggle(\"rotate180\")\r\n})\r\n\r\nsectorLoc.addEventListener(\"click\", () => {\r\n    sectorListLoc.classList.toggle(\"expand\");\r\n    sectorListBtnLoc.classList.toggle(\"rotate180\")\r\n})\r\n\r\nemploymentFormLoc.addEventListener(\"click\", () => {\r\n    employmentFormListLoc.classList.toggle(\"expand\");\r\n    employmentFormListBtnLoc.classList.toggle(\"rotate180\")\r\n})\r\n\r\nworkingHoursLoc.addEventListener(\"click\", () => {\r\n    workingHoursListLoc.classList.toggle(\"expand\");\r\n    workingHoursListBtnLoc.classList.toggle(\"rotate180\")\r\n})\r\n\r\nlanguageLoc.addEventListener(\"click\", () => {\r\n    languageListLoc.classList.toggle(\"expand\");\r\n    languageListBtnLoc.classList.toggle(\"rotate180\")\r\n})\r\n\r\n\r\n\r\n\r\ncityLoc.addEventListener(\"mouseleave\", () => {\r\n    cityListLoc.classList.remove(\"expand\");\r\n    cityListBtnLoc.classList.remove(\"rotate180\")\r\n})\r\n\r\ndistanceLoc.addEventListener(\"mouseleave\", () => {\r\n    distanceListLoc.classList.remove(\"expand\");\r\n    distanceListBtnLoc.classList.remove(\"rotate180\")\r\n})\r\n\r\nsectorLoc.addEventListener(\"mouseleave\", () => {\r\n    sectorListLoc.classList.remove(\"expand\");\r\n    sectorListBtnLoc.classList.remove(\"rotate180\")\r\n})\r\n\r\nemploymentFormLoc.addEventListener(\"mouseleave\", () => {\r\n    employmentFormListLoc.classList.remove(\"expand\");\r\n    employmentFormListBtnLoc.classList.remove(\"rotate180\")\r\n})\r\n\r\nworkingHoursLoc.addEventListener(\"mouseleave\", () => {\r\n    workingHoursListLoc.classList.remove(\"expand\");\r\n    workingHoursListBtnLoc.classList.remove(\"rotate180\")\r\n})\r\n\r\nlanguageLoc.addEventListener(\"mouseleave\", () => {\r\n    languageListLoc.classList.remove(\"expand\");\r\n    languageListBtnLoc.classList.remove(\"rotate180\")\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet filterConfigData = {};\r\nlet apiPage = 1;\r\nlet rawAPIArray = [];\r\nlet allRecordsArray = [];\r\nlet recordsNumber = 0;\r\nlet recordsOnPage = 20;\r\nlet filtersON = false;\r\nlet filterBranchesList = [];\r\nlet filterJobFormList = [];\r\nlet filterJobTypeList = [];\r\nlet filterLangList = [];\r\nlet filterCountriesList = {};\r\nlet filterListMaxHeight = 0;\r\nlet filteredRecordsArray_11;\r\n\r\n\r\n// change distance label after choose\r\ndistanceInputsLoc.forEach((elem) => {\r\n    elem.addEventListener(\"change\", () => {\r\n        distanceTitleLoc.innerText = `+${Number(elem.value)} km`;\r\n        distanceTitleLoc.dataset.distance = Number(elem.value);\r\n    })\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nrecordsOnPageLoc.value = recordsOnPage;\r\n\r\n// create RECORDS BOXES ///////////////////////////////////////////////\r\nconst createRecordBoxes = (recordsArray, firstRecordNumber, recordsOnPage) => {\r\n    resultsLoc.replaceChildren();\r\n\r\n    for (i = firstRecordNumber; i < recordsOnPage; i++) {\r\n        // colouring of records by type of recruitment\r\n\r\n        if (recordsArray[i]) {\r\n            let borderColorClass = \"\";\r\n            let textColorClass = \"\";\r\n\r\n            if (!filterConfigData.recruitmentType_colorOnly.length) {\r\n                if (recordsArray[i].recruitmentType === \"PT\") {\r\n                    borderColorClass = \"pt-border\";\r\n                    textColorClass = \"pt-text\";\r\n                }\r\n                if (recordsArray[i].recruitmentType === \"RS\") {\r\n                    borderColorClass = \"rs-border\";\r\n                    textColorClass = \"rs-text\";\r\n                }\r\n                if (recordsArray[i].recruitmentType === \"WEW\") {\r\n                    borderColorClass = \"wew-border\";\r\n                    textColorClass = \"wew-text\";\r\n                }\r\n            } else {\r\n                if (\r\n                    filterConfigData.recruitmentType_colorOnly.indexOf(\"PT\") !==\r\n                    -1\r\n                ) {\r\n                    if (recordsArray[i].recruitmentType === \"PT\") {\r\n                        borderColorClass = \"pt-border\";\r\n                        textColorClass = \"pt-text\";\r\n                    }\r\n                }\r\n\r\n                if (\r\n                    filterConfigData.recruitmentType_colorOnly.indexOf(\"RS\") !==\r\n                    -1\r\n                ) {\r\n                    if (recordsArray[i].recruitmentType === \"RS\") {\r\n                        borderColorClass = \"rs-border\";\r\n                        textColorClass = \"rs-text\";\r\n                    }\r\n                }\r\n\r\n                if (\r\n                    filterConfigData.recruitmentType_colorOnly.indexOf(\r\n                        \"WEW\"\r\n                    ) !== -1\r\n                ) {\r\n                    if (recordsArray[i].recruitmentType === \"WEW\") {\r\n                        borderColorClass = \"wew-border\";\r\n                        textColorClass = \"wew-text\";\r\n                    }\r\n                }\r\n            }\r\n\r\n            let formaZatrudnienia = \"\";\r\n\r\n            if (recordsArray[i].jobForm) {\r\n                recordsArray[i].jobForm.forEach(function (elem) {\r\n                    formaZatrudnienia =\r\n                        formaZatrudnienia + \"<p>\" + elem + \"</p>\";\r\n                });\r\n            }\r\n\r\n            resultsLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<a href=\"${\r\n                    recordsArray[i].url\r\n                }\" target=\"_blank\"><div class=\"result ${borderColorClass}\">\r\n            <div class=\"top\">\r\n              \r\n                    <div class=\"lang\"><p>${recordsArray[i].lang}</p></div>\r\n                    <div class=\"branche-name\">\r\n                        <div class=\"branche\">${\r\n                            recordsArray[i].branche\r\n                                ? recordsArray[i].branche\r\n                                : \"\"\r\n                        }</div>\r\n                        <div class=\"name ${textColorClass}\">${\r\n                    recordsArray[i].name\r\n                }</div>\r\n                   \r\n                </div>\r\n              \r\n            </div>\r\n\r\n            <div class=\"bottom\">\r\n                <div class=\"city-container\">\r\n                    <div class=\"city\"><img src=\"./img/location_dot.svg\">${\r\n                        recordsArray[i].city\r\n                    }</div>\r\n                    </div>\r\n                    <div class=\"details-container\">\r\n                    ${\r\n                        recordsArray[i].jobType\r\n                            ? \"<div class='jobtype'>\" +\r\n                              recordsArray[i].jobType +\r\n                              \"</div>\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        recordsArray[i].visibleRate\r\n                            ? recordsArray[i].salaryFrom &&\r\n                              recordsArray[i].salaryTo\r\n                                ? \"<div class='salary'>\" +\r\n                                  recordsArray[i].salaryFrom +\r\n                                  \" - \" +\r\n                                  recordsArray[i].salaryTo +\r\n                                  \"</div>\"\r\n                                : \"\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        recordsArray[i].remote\r\n                            ? \"<div class='remote'>zdalna</div>\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        recordsArray[i].relocation\r\n                            ? \"<div class='relocation'>relocation</div>\"\r\n                            : \"\"\r\n                    }\r\n                    <div class=\"employmentform\">${formaZatrudnienia}</div>\r\n                    </div>\r\n                </div>\r\n                   \r\n                </div>\r\n          \r\n\r\n        </div></a>`\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\n// filter the data to create FILTERED OBJECTS ARRAY ///////////////////////////////\r\nconst createFilteredRecordsArray = () => {\r\n    const branchesChildrenLoc = branchesLoc.querySelectorAll(\"li input\");\r\n    const jobFormChildrenLoc = jobFormLoc.querySelectorAll(\"li input\");\r\n    const jobTypeChildrenLoc = jobTypeLoc.querySelectorAll(\"li input\");\r\n    const langChildrenLoc = langLoc.querySelectorAll(\"li input\");\r\n    // const countriesChildrenLoc = document.querySelectorAll(\".countries option\");\r\n    const citiesChildrenLoc = citiesLoc.querySelectorAll(\"li input\");\r\n\r\n    let filteredRecordsArray = allRecordsArray;\r\n\r\n    // selectedBranches ////////////////\r\n\r\n    let selectedBranches = [];\r\n\r\n    if (filterConfigData.branche_filter.length) {\r\n        selectedBranches = filterConfigData.branche_filter;\r\n    } else {\r\n        selectedBranches = Array.from(branchesChildrenLoc)\r\n            .filter(function (elem) {\r\n                return elem.checked;\r\n            })\r\n            .map(function (elem) {\r\n                return elem.value;\r\n            });\r\n    }\r\n\r\n    let filteredRecordsArray_1 = [];\r\n\r\n    if (selectedBranches.length !== 0) {\r\n        filteredRecordsArray.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedBranches.forEach((selectedFiltr) => {\r\n                if (el.branche === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_1.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_1 = filteredRecordsArray;\r\n    }\r\n\r\n    // selectedJobForms ////////////////\r\n\r\n    let selectedJobForms = [];\r\n\r\n    selectedJobForms = Array.from(jobFormChildrenLoc)\r\n        .filter(function (elem) {\r\n            return elem.checked;\r\n        })\r\n        .map(function (elem) {\r\n            return elem.value;\r\n        });\r\n\r\n    let filteredRecordsArray_2 = [];\r\n\r\n    if (selectedJobForms.length !== 0) {\r\n        filteredRecordsArray_1.forEach((el, index) => {\r\n            if (el.jobForm) {\r\n                let addFlag = false;\r\n\r\n                selectedJobForms.forEach((selectedFiltr) => {\r\n                    if (el.jobForm.indexOf(selectedFiltr) !== -1) {\r\n                        addFlag = true;\r\n                    }\r\n                });\r\n\r\n                if (addFlag) {\r\n                    filteredRecordsArray_2.push(el);\r\n                }\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_2 = filteredRecordsArray_1;\r\n    }\r\n\r\n    // selectedJobTypes ////////////////\r\n\r\n    let selectedjobTypes = Array.from(jobTypeChildrenLoc)\r\n        .filter(function (elem) {\r\n            return elem.checked;\r\n        })\r\n        .map(function (elem) {\r\n            return elem.value;\r\n        });\r\n\r\n    let filteredRecordsArray_3 = [];\r\n\r\n    if (selectedjobTypes.length !== 0) {\r\n        filteredRecordsArray_2.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedjobTypes.forEach((selectedFiltr) => {\r\n                if (el.jobType === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_3.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_3 = filteredRecordsArray_2;\r\n    }\r\n\r\n    // selectedLangs ////////////////\r\n    let selectedLangs = [];\r\n\r\n    if (\r\n        filterConfigData.language_filter.length \r\n    ) {\r\n        selectedLangs = filterConfigData.language_filter;\r\n    } else {\r\n        selectedLangs = Array.from(langChildrenLoc)\r\n            .filter(function (elem) {\r\n                return elem.checked;\r\n            })\r\n            .map(function (elem) {\r\n                return elem.value;\r\n            });\r\n    }\r\n\r\n    let filteredRecordsArray_4 = [];\r\n\r\n    if (selectedLangs.length !== 0) {\r\n        filteredRecordsArray_3.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedLangs.forEach((selectedFiltr) => {\r\n                if (el.lang === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_4.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_4 = filteredRecordsArray_3;\r\n    }\r\n\r\n    // // selectedSalary ////////////////\r\n\r\n    // let selectedValOne;\r\n    // let selectedValTwo;\r\n    // if (salaryMarkLoc.checked) {\r\n    //     selectedValOne = parseInt(displayValOne.innerText);\r\n    //     selectedValTwo = parseInt(displayValTwo.innerText);\r\n    // }\r\n\r\n    // let filteredRecordsArray_5 = [];\r\n\r\n    // if (salaryMarkLoc.checked) {\r\n    //     filteredRecordsArray_4.forEach((el, index) => {\r\n    //         let addFlag = false;\r\n\r\n    //         if (el.visibleRate) {\r\n    //             if (el.salaryTo && el.salaryFrom) {\r\n    //                 if (\r\n    //                     el.salaryTo >= selectedValOne &&\r\n    //                     el.salaryFrom <= selectedValTwo\r\n    //                 ) {\r\n    //                     addFlag = true;\r\n    //                 }\r\n    //             }\r\n    //             if (el.salaryTo && !el.salaryFrom) {\r\n    //                 if (el.salaryTo >= selectedValOne) {\r\n    //                     addFlag = true;\r\n    //                 }\r\n    //             }\r\n    //             if (!el.salaryTo && el.salaryFrom) {\r\n    //                 if (el.salaryFrom <= selectedValTwo) {\r\n    //                     addFlag = true;\r\n    //                 }\r\n    //             }\r\n    //         }\r\n\r\n    //         if (addFlag) {\r\n    //             filteredRecordsArray_5.push(el);\r\n    //         }\r\n    //     });\r\n    // } else {\r\n    //     filteredRecordsArray_5 = filteredRecordsArray_4;\r\n    // }\r\n\r\n    // // selectedCountry ////////////////\r\n\r\n    // let selectedCountry = [];\r\n\r\n    // if (\r\n    //     filterConfigData.location_country_filter.length \r\n    //     // && !filterConfigData.location_visible\r\n    // ) {\r\n    //     selectedCountry = filterConfigData.location_country_filter;\r\n    // } else {\r\n    //     if (locationMarkLoc.checked) {\r\n    //         selectedCountry = Array.from(countriesChildrenLoc)\r\n    //             .filter(function (elem) {\r\n    //                 if (elem.value) {\r\n    //                     return elem.selected;\r\n    //                 }\r\n    //             })\r\n    //             .map(function (elem) {\r\n    //                 if (elem.value) {\r\n    //                     return elem.value;\r\n    //                 }\r\n    //             });\r\n    //     }\r\n    // }\r\n\r\n    // let filteredRecordsArray_6 = [];\r\n\r\n    // if (\r\n    //     locationMarkLoc.checked ||\r\n    //     (filterConfigData.location_country_filter.length \r\n    //         // && !filterConfigData.location_visible\r\n    //         )\r\n    // ) {\r\n    //     if (selectedCountry.length) {\r\n    //         filteredRecordsArray_5.forEach((el, index) => {\r\n    //             let addFlag = false;\r\n\r\n    //             selectedCountry.forEach((selectedFiltr) => {\r\n    //                 if (el.country === selectedFiltr) {\r\n    //                     addFlag = true;\r\n    //                 }\r\n    //             });\r\n\r\n    //             if (addFlag) {\r\n    //                 filteredRecordsArray_6.push(el);\r\n    //             }\r\n    //         });\r\n    //     } else {\r\n    //         filteredRecordsArray_6 = filteredRecordsArray_5;\r\n    //     }\r\n    // } else {\r\n    //     filteredRecordsArray_6 = filteredRecordsArray_5;\r\n    // }\r\n\r\n    let filteredRecordsArray_6 = filteredRecordsArray_4;\r\n\r\n    // selectedCity & selectedDistance ////////////////\r\n    let selectedCity = [];\r\n\r\n    if (filterConfigData.location_city_filter.length) {\r\n        selectedCity = filterConfigData.location_city_filter;\r\n    } else {\r\n\r\n        selectedCity = Array.from(citiesChildrenLoc)\r\n            .filter(function (elem) {\r\n                if (elem.value) {\r\n                    return elem.checked;\r\n                }\r\n            })\r\n            .map(function (elem) {\r\n                if (elem.value) {\r\n                    return elem.value;\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    let filteredRecordsArray_7 = [];\r\n\r\n    if (selectedCity.length) {\r\n        \r\n        let selectedDistance = parseInt(distanceTitleLoc.dataset.distance);\r\n\r\n        let lati;\r\n        let longi;\r\n        let min_lati;\r\n        let max_lati;\r\n        let min_longi;\r\n        let max_longi;\r\n\r\n        selectedCity.forEach((el_city) => {\r\n            filteredRecordsArray_6.forEach((el_record, index) => {\r\n                if (el_city === el_record.city) {\r\n\r\n                    lati = el_record.lati;\r\n                    longi = el_record.longi;\r\n\r\n                    min_lati = lati - selectedDistance * 0.009044;\r\n                    max_lati = lati + selectedDistance * 0.009044;\r\n                    min_longi = longi - (selectedDistance * 0.0089831) / Math.cos((lati * Math.PI) / 180);\r\n                    max_longi = longi + (selectedDistance * 0.0089831) / Math.cos((lati * Math.PI) / 180);\r\n                }\r\n            });\r\n\r\n            filteredRecordsArray_6.forEach((el_record, index) => {\r\n                if (\r\n                    el_record.lati <= max_lati &&\r\n                    el_record.lati >= min_lati &&\r\n                    el_record.longi <= max_longi &&\r\n                    el_record.longi >= min_longi\r\n                ) {\r\n                    filteredRecordsArray_7.push(el_record);\r\n                }\r\n            })\r\n        })\r\n        \r\n    } else {\r\n        filteredRecordsArray_7 = filteredRecordsArray_6;\r\n    }\r\n   \r\n    // selectedRemote ////////////////\r\n\r\n    let filteredRecordsArray_8 = [];\r\n\r\n    if (remoteLoc.checked || (filterConfigData.remote_filter)) {\r\n        filteredRecordsArray_7.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            if (el.remote) {\r\n                addFlag = true;\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_8.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_8 = filteredRecordsArray_7;\r\n    }\r\n\r\n    // selectedRelocation ////////////////\r\n\r\n    let filteredRecordsArray_9 = [];\r\n\r\n    if (relocationLoc.checked) {\r\n        filteredRecordsArray_8.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            if (el.relocation) {\r\n                addFlag = true;\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_9.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_9 = filteredRecordsArray_8;\r\n    }\r\n\r\n    // searchText ////////////////\r\n\r\n    let filteredRecordsArray_10 = [];\r\n\r\n    let searchText = searchInputLoc.value;\r\n\r\n    if (searchText) {\r\n        filteredRecordsArray_9.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            let position;\r\n\r\n            el.description.forEach(function (elem) {\r\n                if (elem.value && elem.field_id !== \"geolocation\") {\r\n                    position = elem.value\r\n                        .toLowerCase()\r\n                        .search(searchText.toLowerCase());\r\n                    if (position !== -1) {\r\n                        addFlag = true;\r\n                    }\r\n                }\r\n            });\r\n\r\n            position = el.name.toLowerCase().search(searchText.toLowerCase());\r\n            if (position !== -1) {\r\n                addFlag = true;\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_10.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_10 = filteredRecordsArray_9;\r\n    }\r\n\r\n    // selectedRecruitmentType (coloring of records) ////////////////\r\n    filteredRecordsArray_11 = [];\r\n    \r\n    let selectedRecruitmentType = [];\r\n\r\n    if (filterConfigData.recruitmentType_filter.length) {\r\n        selectedRecruitmentType = filterConfigData.recruitmentType_filter;\r\n    }\r\n\r\n    if (selectedRecruitmentType.length !== 0) {\r\n        filteredRecordsArray_10.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedRecruitmentType.forEach((selectedFiltr) => {\r\n                if (el.recruitmentType === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_11.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_11 = filteredRecordsArray_10;\r\n    }\r\n\r\n    recordsNumber = filteredRecordsArray_11.length;\r\n\r\n    // summariseDownload(recordsNumber);\r\n    createRecordBoxes(filteredRecordsArray_11, 0, recordsOnPage);\r\n  \r\n    setPages(recordsNumber);\r\n    filtersON = true;\r\n    // hideFilter();\r\n    \r\n    // setTimeout(setParentIframeHeight, 1000);\r\n    \r\n};\r\n\r\nconst pagesContainerStart = () => {\r\n    pagesContainer.classList.add(\"active\");\r\n};\r\n\r\nconst dropDownBtnStart = () => {\r\n    dropDownLoc.addEventListener(\"click\", showHideFilters);\r\n\r\n    dropDownLoc.classList.add(\"active\");\r\n};\r\n\r\n// create HTML FILTERS LISTS //////////////////////////////////////////////////////\r\nconst createFilterLists = (filterConfigData) => {\r\n\r\n    // if (!filterConfigData.salary_visible) {\r\n    //     salaryLoc.classList.add(\"unactive\");\r\n    // }\r\n\r\n    // if (!filterConfigData.relocation_visible) {\r\n    //     relocationWrapperLoc.classList.add(\"unactive\");\r\n    // }\r\n\r\n    // if (!filterConfigData.language_visible) {\r\n    //     langWrapperLoc.classList.add(\"unactive\");\r\n    // }\r\n\r\n    // if (!filterConfigData.remote_visible) {\r\n    //     remoteWrapperLoc.classList.add(\"unactive\");\r\n    // }\r\n\r\n    // if (!filterConfigData.location_visible) {\r\n    //     locWrapperLoc.classList.add(\"unactive\");\r\n    // }\r\n\r\n    if (!filterConfigData.branche_visible) {\r\n        brancheWrapperLoc.classList.add(\"unactive\");\r\n    }\r\n\r\n    // let isSamsungBrowser = navigator.userAgent.match(/SamsungBrowser/i);\r\n    // let isChromeBrowser = navigator.userAgent.match(/Chrome/i);\r\n\r\n    if (filterBranchesList.length > 0) {\r\n        filterBranchesList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterBranchesList.length * 21 + 3;\r\n        filterListMaxHeight = rowHeight;\r\n        // if (getMobileOperatingSystem() === \"unknown\") {\r\n            // brancheListLoc.style.height = String(rowHeight) + \"px\";\r\n        // } else if (isSamsungBrowser || isChromeBrowser) {\r\n        //     branchesLoc.style.height = \"50px\";\r\n        // } else {\r\n        //     branchesLoc.style.height = String(rowHeight) + \"px\";\r\n        // }\r\n        \r\n        filterBranchesList.forEach(function (el) {\r\n            branchesLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<li>\r\n                <div class=\"checkbox-container-small\">\r\n                    <label class=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"${el}\" name=\"${el}\" value=\"${el}\">\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                    <label class=\"label-text\" for=\"${el}\">${el}</label>\r\n                </div>\r\n            </li>`\r\n            );\r\n            \r\n        });\r\n    }\r\n\r\n    if (filterJobFormList.length > 0) {\r\n        filterJobFormList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterJobFormList.length * 21 + 3;\r\n        // if (getMobileOperatingSystem() === \"unknown\") {\r\n            // jobFormLoc.style.height = String(rowHeight) + \"px\";\r\n        // } else if (isSamsungBrowser || isChromeBrowser) {\r\n        //     jobFormLoc.style.height = \"50px\";\r\n        // } else {\r\n        //     jobFormLoc.style.height = String(rowHeight) + \"px\";\r\n        // }\r\n        filterJobFormList.forEach(function (el) {\r\n            jobFormLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<li>\r\n                <div class=\"checkbox-container-small\">\r\n                    <label class=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"${el}\" name=\"${el}\" value=\"${el}\">\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                    <label class=\"label-text\" for=\"${el}\">${el}</label>\r\n                </div>\r\n            </li>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (filterJobTypeList.length > 0) {\r\n        filterJobTypeList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterJobTypeList.length * 21 + 3;\r\n        // if (getMobileOperatingSystem() === \"unknown\") {\r\n            // jobTypeLoc.style.height = String(rowHeight) + \"px\";\r\n        // } else if (isSamsungBrowser || isChromeBrowser) {\r\n        //     jobTypeLoc.style.height = \"50px\";\r\n        // } else {\r\n        //     jobTypeLoc.style.height = String(rowHeight) + \"px\";\r\n        // }\r\n        filterJobTypeList.forEach(function (el) {\r\n            jobTypeLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<li>\r\n                <div class=\"checkbox-container-small\">\r\n                    <label class=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"${el}\" name=\"${el}\" value=\"${el}\">\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                    <label class=\"label-text\" for=\"${el}\">${el}</label>\r\n                </div>\r\n            </li>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (filterLangList.length > 0) {\r\n        filterLangList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterLangList.length * 21 + 3;\r\n        // if (getMobileOperatingSystem() === \"unknown\") {\r\n            // langLoc.style.height = String(rowHeight) + \"px\";\r\n        // } else if (isSamsungBrowser || isChromeBrowser) {\r\n        //     langLoc.style.height = \"50px\";\r\n        // } else {\r\n        //     langLoc.style.height = String(rowHeight) + \"px\";\r\n        // }\r\n        filterLangList.forEach(function (el) {\r\n            langLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<li>\r\n                <div class=\"checkbox-container-small\">\r\n                    <label class=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"${el}\" name=\"${el}\" value=\"${el}\">\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                    <label class=\"label-text\" for=\"${el}\">${el}</label>\r\n                </div>\r\n            </li>`\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n    if (Object.keys(filterCountriesList).length > 0) {\r\n        // countriesLoc.insertAdjacentHTML(\r\n        //     \"beforeend\",\r\n        //     `<option value=\"\" class=\"placeholder\">Państwo</option>`\r\n        // );\r\n\r\n        // citiesLoc.insertAdjacentHTML(\r\n        //     \"beforeend\",\r\n        //     `<option value=\"\" class=\"placeholder\">Miasto</option>`\r\n        // );\r\n\r\n        function compare(a, b) {\r\n            return a.city.localeCompare(b.city);\r\n        }\r\n\r\n        for (let key in filterCountriesList) {\r\n            filterCountriesList[key].sort(compare);\r\n        }\r\n\r\n        filterCountriesList = Object.keys(filterCountriesList)\r\n            .sort()\r\n            .reduce((accumulator, key) => {\r\n                accumulator[key] = filterCountriesList[key];\r\n                return accumulator;\r\n            }, {});\r\n\r\n        let allCitiesObj = [];\r\n        for (let key in filterCountriesList) {\r\n            // countriesLoc.insertAdjacentHTML(\r\n            //     \"beforeend\",\r\n            //     `<option value=\"${key}\">${key}</option>`\r\n            // );\r\n            allCitiesObj = allCitiesObj.concat(filterCountriesList[key]);\r\n        }\r\n\r\n        let allCitiesArray = [];\r\n        allCitiesObj.forEach((el) => {\r\n            allCitiesArray.push(el.city);\r\n        });\r\n\r\n        allCitiesArray.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n\r\n        allCitiesArray.forEach(function (el) {\r\n            citiesLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<li>\r\n                <div class=\"checkbox-container-small\">\r\n                    <label class=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"${el}\" name=\"${el}\" value=\"${el}\">\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                    <label class=\"label-text\" for=\"${el}\">${el}</label>\r\n                </div>\r\n            </li>`\r\n            );\r\n        });\r\n    }\r\n\r\n    // sliderOne.min = filterMinSalary.toString();\r\n    // sliderTwo.min = filterMinSalary.toString();\r\n    // sliderOne.max = filterMaxSalary.toString();\r\n    // sliderTwo.max = filterMaxSalary.toString();\r\n    // sliderOne.value = filterMinSalary.toString();\r\n    // sliderTwo.value = filterMaxSalary.toString();\r\n    // slideOne();\r\n    // slideTwo();\r\n};\r\n\r\n// PAGES /////////////////////////////////////////////////////////////\r\nconst changePage = (pageBtn) => {\r\n    pageButtonsLoc.forEach((el) => {\r\n        el.classList.remove(\"active\");\r\n    });\r\n    pageBtn.classList.add(\"active\");\r\n    let firstRecord =\r\n        recordsOnPage * parseInt(pageBtn.innerText) - recordsOnPage;\r\n    let lastRecord = recordsOnPage * parseInt(pageBtn.innerText);\r\n\r\n    filtersON\r\n        ? createRecordBoxes(filteredRecordsArray_11, firstRecord, lastRecord)\r\n        : createRecordBoxes(allRecordsArray, firstRecord, lastRecord);\r\n    globActivePageNo = parseInt(pageBtn.innerText);\r\n    // setTimeout(setParentIframeHeight(), 500);\r\n};\r\n\r\nlet globActivePageNo;\r\n\r\nconst movePrevPagesBtns = () => {\r\n    let firstDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).shift().innerText\r\n    );\r\n    let lastDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).pop().innerText\r\n    );\r\n\r\n    let activePageNo;\r\n    activePageNo = document.querySelector(\".page.active\");\r\n\r\n    if (activePageNo) {\r\n        activePageNo = parseInt(activePageNo.innerText);\r\n    }\r\n\r\n    if (firstDispalyedPageNo > 1) {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (n = firstDispalyedPageNo - 1; n <= lastDispalyedPageNo - 1; n++) {\r\n            if (!activePageNo) {\r\n                activePageNo = globActivePageNo;\r\n            }\r\n            if (activePageNo && n === activePageNo) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n\r\n        if (lastDispalyedPageNo < pagesQuantityCalc + 1) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next active\"><img src=\"./img/chevron-right.svg\" alt=\"\" /></div>`\r\n            );\r\n            let nextBtnLoc = document.querySelector(\".next\");\r\n            nextBtnLoc.addEventListener(\"click\", () => {\r\n                moveNextPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        if (firstDispalyedPageNo > 2) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev active\"><img src=\"./img/chevron-left.svg\" alt=\"\" /></div>`\r\n            );\r\n            let prevBtnLoc = document.querySelector(\".prev\");\r\n            prevBtnLoc.addEventListener(\"click\", () => {\r\n                movePrevPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        pageButtonsLoc = document.querySelectorAll(\".page\");\r\n        pageButtonsLoc.forEach((el) => {\r\n            el.addEventListener(\"click\", (e) => {\r\n                changePage(e.target);\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nconst moveNextPagesBtns = () => {\r\n    let firstDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).shift().innerText\r\n    );\r\n    let lastDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).pop().innerText\r\n    );\r\n\r\n    let activePageNo;\r\n    activePageNo = document.querySelector(\".page.active\");\r\n    if (activePageNo) {\r\n        activePageNo = parseInt(activePageNo.innerText);\r\n        globActivePageNo = activePageNo;\r\n    }\r\n\r\n    if (lastDispalyedPageNo < pagesQuantityCalc) {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (n = firstDispalyedPageNo + 1; n <= lastDispalyedPageNo + 1; n++) {\r\n            if (!activePageNo) {\r\n                activePageNo = globActivePageNo;\r\n            }\r\n            if (activePageNo && n === activePageNo) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n\r\n        if (lastDispalyedPageNo < pagesQuantityCalc - 1) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next active\"><img src=\"./img/chevron-right.svg\" alt=\"\" /></div>`\r\n            );\r\n            let nextBtnLoc = document.querySelector(\".next\");\r\n            nextBtnLoc.addEventListener(\"click\", () => {\r\n                moveNextPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        if (firstDispalyedPageNo > 0) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev active\"><img src=\"./img/chevron-left.svg\" alt=\"\" /></div>`\r\n            );\r\n            let prevBtnLoc = document.querySelector(\".prev\");\r\n            prevBtnLoc.addEventListener(\"click\", () => {\r\n                movePrevPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        pageButtonsLoc = document.querySelectorAll(\".page\");\r\n        pageButtonsLoc.forEach((el) => {\r\n            el.addEventListener(\"click\", (e) => {\r\n                changePage(e.target);\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\n// RWD /////////////////////////////////////////////////////////////\r\nfunction getWidth() {\r\n    return Math.max(\r\n        document.body.scrollWidth,\r\n        document.documentElement.scrollWidth,\r\n        document.body.offsetWidth,\r\n        document.documentElement.offsetWidth,\r\n        document.documentElement.clientWidth\r\n    );\r\n}\r\n\r\nfunction getHeight() {\r\n    return Math.max(\r\n        document.body.scrollHeight,\r\n        document.documentElement.scrollHeight,\r\n        document.body.offsetHeight,\r\n        document.documentElement.offsetHeight,\r\n        document.documentElement.clientHeight\r\n    );\r\n}\r\n\r\nlet pagesQuantityCalc;\r\n\r\nconst setPages = (recordsNumber) => {\r\n    pagesQuantityCalc = Math.ceil(recordsNumber / recordsOnPage);\r\n\r\n    if (pagesQuantityCalc > maxPageBtns) {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (n = 1; n <= maxPageBtns; n++) {\r\n            if (n === 1) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n        pagesSwitchLoc.insertAdjacentHTML(\r\n            \"beforeend\",\r\n            `<div class=\"next active\"><img src=\"./img/chevron-right.svg\" alt=\"\" /></div>`\r\n        );\r\n        let nextBtnLoc = document.querySelector(\".next\");\r\n        nextBtnLoc.addEventListener(\"click\", () => {\r\n            moveNextPagesBtns();\r\n        });\r\n    } else {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (n = 1; n <= pagesQuantityCalc; n++) {\r\n            if (n === 1) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n\r\n        pagesSwitchLoc.insertAdjacentHTML(\r\n            \"beforeend\",\r\n            `<div class=\"next\"><img src=\"\" alt=\"\" /></div>`\r\n        );\r\n    }\r\n\r\n    pagesSwitchLoc.insertAdjacentHTML(\r\n        \"afterbegin\",\r\n        `<div class=\"prev\"><img src=\"\" alt=\"\" /></div>`\r\n    );\r\n\r\n    pageButtonsLoc = document.querySelectorAll(\".page\");\r\n    pageButtonsLoc.forEach((el) => {\r\n        el.addEventListener(\"click\", (e) => {\r\n            changePage(e.target);\r\n        });\r\n    });\r\n};\r\n\r\nlet maxPageBtns;\r\n\r\nconst setPagesBtnQuantity = () => {\r\n   \r\n    if (getWidth() < 500) {\r\n        maxPageBtns = 3;\r\n    }\r\n    if (getWidth() >= 500 && getWidth() < 650) {\r\n        maxPageBtns = 3;\r\n    }\r\n    if (getWidth() >= 650 && getWidth() < 750) {\r\n        maxPageBtns = 4;\r\n    }\r\n    if (getWidth() >= 750 && getWidth() < 950) {\r\n        maxPageBtns = 7;\r\n    }\r\n    if (getWidth() >= 950 && getWidth() < 1200) {\r\n        maxPageBtns = 12;\r\n    }\r\n    if (getWidth() >= 1200) {\r\n        maxPageBtns = 15;\r\n    }\r\n\r\n    setPages(recordsNumber);\r\n\r\n}\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n    setPagesBtnQuantity();\r\n});\r\n\r\nsetPagesBtnQuantity();\r\n\r\n\r\n\r\n// create AWARDED RECORDS BOXES ///////////////////////////////////////////////\r\nconst createAwardedRecordBoxes = (recordsArray, filterConfigData) => {\r\n\r\n    awardedResultsLoc.replaceChildren();\r\n\r\n    let awardedRecordsArray = recordsArray.filter((elem) => {\r\n        return elem.awarded;  \r\n    });\r\n\r\n    if (awardedRecordsArray.length > 0) {\r\n\r\n        if (filterConfigData.remote_filter) {\r\n            awardedRecordsArray = awardedRecordsArray.filter((elem) => {\r\n                return elem.remote;\r\n            });\r\n        }\r\n        \r\n        if (filterConfigData.language_filter.length > 0) {\r\n            filterAwarded(filterConfigData.language_filter, awardedRecordsArray, \"lang\");\r\n        }\r\n\r\n        if (filterConfigData.branche_filter.length > 0) {\r\n            filterAwarded(filterConfigData.branche_filter, awardedRecordsArray, \"branche\");\r\n        }\r\n\r\n        if (filterConfigData.location_country_filter.length > 0) {\r\n            filterAwarded(filterConfigData.location_country_filter, awardedRecordsArray, \"country\");\r\n        }\r\n\r\n        if (filterConfigData.location_city_filter.length > 0) {\r\n            filterAwarded(filterConfigData.location_city_filter, awardedRecordsArray, \"city\");\r\n        }\r\n\r\n        if (filterConfigData.recruitmentType_filter.length > 0) {\r\n            filterAwarded(filterConfigData.recruitmentType_filter, awardedRecordsArray, \"recruitmentType\");\r\n        }\r\n\r\n        for (i = firstRecordNumber; i < 10; i++) {\r\n            if (awardedRecordsArray[i]) {\r\n                let borderColorClass = \"\";\r\n                let textColorClass = \"\";\r\n\r\n                if (awardedRecordsArray[i].recruitmentType === \"PT\") {\r\n                    borderColorClass = \"pt-border\";\r\n                    textColorClass = \"pt-text\";\r\n                }\r\n                if (awardedRecordsArray[i].recruitmentType === \"RS\") {\r\n                    borderColorClass = \"rs-border\";\r\n                    textColorClass = \"rs-text\";\r\n                }\r\n                if (awardedRecordsArray[i].recruitmentType === \"WEW\") {\r\n                    borderColorClass = \"wew-border\";\r\n                    textColorClass = \"wew-text\";\r\n                }\r\n\r\n                let formaZatrudnienia = \"\";\r\n\r\n                if (awardedRecordsArray[i].jobForm) {\r\n                    awardedRecordsArray[i].jobForm.forEach(function (elem) {\r\n                        formaZatrudnienia =\r\n                            formaZatrudnienia + \"<p>\" + elem + \"</p>\";\r\n                    });\r\n                }\r\n\r\n                awardedResultsLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<a href=\"${\r\n                        awardedRecordsArray[i].url\r\n                    }\" target=\"_blank\"><div class=\"result ${borderColorClass}\">\r\n                <div class=\"top\">\r\n                \r\n                        <div class=\"lang\">\r\n                            <p>${awardedRecordsArray[i].lang}</p>\r\n                        </div>\r\n                        <div class=\"branche-name\">\r\n                            <div class=\"branche\">${\r\n                                awardedRecordsArray[i].branche\r\n                                    ? awardedRecordsArray[i].branche\r\n                                    : \"\"\r\n                            }</div>\r\n                            <div class=\"name ${textColorClass}\">${\r\n                        awardedRecordsArray[i].name\r\n                    }</div>\r\n                        </div>\r\n                    \r\n                </div>\r\n\r\n                <div class=\"bottom\">\r\n                    <div class=\"city-container\">\r\n                        <div class=\"city\"><img src=\"./img/location_dot.svg\">${\r\n                            awardedRecordsArray[i].city\r\n                        }</div></div>\r\n                        <div class=\"details-container\">\r\n                        ${\r\n                            awardedRecordsArray[i].remote\r\n                                ? \"<div class='remote'>zdalna</div>\"\r\n                                : \"\"\r\n                        }\r\n                        ${\r\n                            awardedRecordsArray[i].relocation\r\n                                ? \"<div class='relocation'>relocation</div>\"\r\n                                : \"\"\r\n                        }\r\n                        ${\r\n                            awardedRecordsArray[i].jobType\r\n                                ? \"<div class='jobtype'>\" +\r\n                                awardedRecordsArray[i].jobType +\r\n                                \"</div>\"\r\n                                : \"\"\r\n                        }\r\n                        ${\r\n                            awardedRecordsArray[i].visibleRate\r\n                                ? awardedRecordsArray[i].salaryFrom &&\r\n                                awardedRecordsArray[i].salaryTo\r\n                                    ? \"<div class='salary'>\" +\r\n                                    awardedRecordsArray[i].salaryFrom +\r\n                                    \" - \" +\r\n                                    awardedRecordsArray[i].salaryTo +\r\n                                    \"</div>\"\r\n                                    : \"\"\r\n                                : \"\"\r\n                        }\r\n                        <div class=\"employmentform\">${formaZatrudnienia}</div>\r\n                        </div>\r\n                    \r\n                </div>\r\n\r\n                <div class=\"ribbon-wrap\">\r\n                        <div class=\"ribbon\">\r\n                                <img src=\"./img/star.svg\" alt=\"\">\r\n                                <img src=\"./img/star.svg\" alt=\"\">\r\n                                <img src=\"./img/star.svg\" alt=\"\">\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n\r\n                \r\n\r\n            </div></a>`\r\n                );\r\n            }\r\n        }\r\n    } else {\r\n        awardedResultsLoc.style.margin = \"0\"\r\n    }\r\n};\r\n\r\n// show RECORDS NUMBER ///////////////////////////////////////////////\r\nconst summariseDownload = (recordsNumber) => {\r\n    recNumLoc.innerText = `Znaleziono ${recordsNumber} ogłoszeń`;\r\n    if (!recordsNumber) {\r\n        noResultsLoc.classList.add(\"active\");\r\n    } else {\r\n        noResultsLoc.classList.remove(\"active\");\r\n    }\r\n};\r\n\r\n// create FILTER DATA from API data ///////////////////////////////////////////////\r\nconst createDataForFilters = (\r\n    branche,\r\n    jobForm,\r\n    jobType,\r\n    lang,\r\n    visibleRate,\r\n    salaryFrom,\r\n    salaryTo,\r\n    country,\r\n    city,\r\n    lati,\r\n    longi\r\n) => {\r\n   \r\n    if (filterBranchesList.indexOf(branche) === -1 && branche !== undefined) {\r\n        if (filterConfigData.branche_filter.length) {\r\n            if (filterConfigData.branche_filter.indexOf(branche) !== -1) {\r\n                filterBranchesList.push(branche);\r\n            }\r\n        } else {\r\n            filterBranchesList.push(branche);\r\n        }\r\n       \r\n    }\r\n\r\n    if (jobForm) {\r\n        jobForm.forEach(function (elem) {\r\n            if (filterJobFormList.indexOf(elem) === -1) {\r\n                filterJobFormList.push(elem);\r\n            }\r\n        });\r\n    }\r\n\r\n    if (filterJobTypeList.indexOf(jobType) === -1 && jobType !== undefined) {\r\n        filterJobTypeList.push(jobType);\r\n    }\r\n\r\n    if (filterLangList.indexOf(lang) === -1) {\r\n\r\n        if (filterConfigData.language_filter.length) {\r\n            if (filterConfigData.language_filter.indexOf(lang) !== -1) {\r\n                filterLangList.push(lang);\r\n            }\r\n        } else {\r\n            filterLangList.push(lang);\r\n        }\r\n    }\r\n\r\n    // if (visibleRate) {\r\n    //     if (salaryFrom < filterMinSalary) {\r\n    //         filterMinSalary = salaryFrom;\r\n    //     }\r\n    //     if (salaryTo > filterMaxSalary) {\r\n    //         filterMaxSalary = salaryTo;\r\n    //     }\r\n    // }\r\n\r\n    if (filterConfigData.location_country_filter.length) {\r\n        \r\n        if (filterConfigData.location_country_filter.indexOf(country) !== -1) {\r\n            if (filterCountriesList[country]) {\r\n                if (\r\n                    filterCountriesList[country].findIndex(\r\n                        (arr_el) => arr_el.city === city\r\n                    ) === -1\r\n                ) {\r\n                    if (filterConfigData.location_city_filter.length) {\r\n                        if (filterConfigData.location_city_filter.indexOf(city) !== -1) {\r\n                            filterCountriesList[country].push({\r\n                                city: city,\r\n                                lati: lati,\r\n                                longi: longi,\r\n                            });\r\n                        }\r\n                    } else {\r\n                        filterCountriesList[country].push({\r\n                            city: city,\r\n                            lati: lati,\r\n                            longi: longi,\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                filterCountriesList[country] = [];\r\n                if (filterConfigData.location_city_filter.length) {\r\n                    if (filterConfigData.location_city_filter.indexOf(city) !== -1) {\r\n                        filterCountriesList[country].push({\r\n                            city: city,\r\n                            lati: lati,\r\n                            longi: longi,\r\n                        });\r\n                    }\r\n                } else {\r\n                    filterCountriesList[country].push({\r\n                        city: city,\r\n                        lati: lati,\r\n                        longi: longi,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    } else {\r\n        \r\n        if (filterCountriesList[country]) {\r\n            if (\r\n                filterCountriesList[country].findIndex(\r\n                    (arr_el) => arr_el.city === city\r\n                ) === -1\r\n            ) {\r\n                filterCountriesList[country].push({\r\n                    city: city,\r\n                    lati: lati,\r\n                    longi: longi,\r\n                });\r\n            }\r\n        } else {\r\n            filterCountriesList[country] = [];\r\n            filterCountriesList[country].push({\r\n                city: city,\r\n                lati: lati,\r\n                longi: longi,\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n// create OBJECTS ARRAY from Raw API JSON ///////////////////////////////////////////////\r\nconst reworkData = (rawAPIArray) => {\r\n    rawAPIArray.forEach((el) => {\r\n        if (el.options.job_location) {\r\n            parsedJobLocation = JSON.parse(el.options.job_location);\r\n        }\r\n\r\n        allRecordsArray.push({\r\n            url: el.url,\r\n            name: el.advert.name,\r\n            branche: el.options.branches,\r\n            lang: el.advert.language,\r\n            jobType: el.options.job_type,\r\n            visibleRate: parseInt(el.options._Widoczna_stawka),\r\n            salaryFrom: parseInt(el.options._spodziewane_wynagrodzenie_od),\r\n            salaryTo: parseInt(el.options._spodziewane_wynagrodzenie_do),\r\n            remote: el.options.remote,\r\n            relocation: el.options._relokacja,\r\n            recruitmentType: el.options._rekrutacja_rodzaj,\r\n            jobForm: el.options._forma_zatrudnienia,\r\n            country: parsedJobLocation.country,\r\n            city: parsedJobLocation.locality,\r\n            lati: parseFloat(parsedJobLocation.latitude),\r\n            longi: parseFloat(parsedJobLocation.longitude),\r\n            description: el.advert.values,\r\n            awarded: el.awarded,\r\n        });\r\n\r\n        createDataForFilters(\r\n            el.options.branches,\r\n            el.options._forma_zatrudnienia,\r\n            el.options.job_type,\r\n            el.advert.language,\r\n            parseInt(el.options._Widoczna_stawka),\r\n            parseInt(el.options._spodziewane_wynagrodzenie_od),\r\n            parseInt(el.options._spodziewane_wynagrodzenie_do),\r\n            parsedJobLocation.country,\r\n            parsedJobLocation.locality,\r\n            parseFloat(parsedJobLocation.latitude),\r\n            parseFloat(parsedJobLocation.longitude)\r\n        );\r\n    });\r\n};\r\n\r\n// gets DATA FROM API ///////////////////////////////////////////////\r\nconst getAPI = (apiPage) => {\r\n    const response = fetch(\r\n        \"https://grupaprogres.traffit.com/public/job_posts/published\",\r\n        {\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-Request-Page-Size\": \"100\",\r\n                \"X-Request-Current-Page\": apiPage,\r\n                \"X-Request-Sort\": '{\"sort_by\": \"id\", \"direction\": \"ASC\"}',\r\n            },\r\n        }\r\n    );\r\n\r\n    return response;\r\n};\r\n\r\nconst loopOnAPI = (jsonData, filterConfigData) => {\r\n    if (jsonData.length > 0) {\r\n        rawAPIArray = rawAPIArray.concat(jsonData);\r\n        apiPage++;\r\n        createRecordsObjFromAPI(apiPage, filterConfigData);\r\n    } else {\r\n        reworkData(rawAPIArray);\r\n        recordsNumber = rawAPIArray.length;\r\n        // summariseDownload(recordsNumber);\r\n        createAwardedRecordBoxes(allRecordsArray, filterConfigData);\r\n        setPages(recordsNumber);\r\n        createFilterLists(filterConfigData);\r\n        // dropDownBtnStart();\r\n        // pagesContainerStart();\r\n        createFilteredRecordsArray();\r\n\r\n        \r\n    }\r\n};\r\n\r\nasync function createRecordsObjFromAPI(apiPage, filterConfigData) {\r\n    const rawData = await getAPI(apiPage);\r\n    const jsonData = await rawData.json();\r\n    loopOnAPI(jsonData, filterConfigData);\r\n}\r\n\r\n// consider configuration filters ////////////////////////\r\nconst getConfigFilter = () => {\r\n    const response = fetch(\"./config/config.json\");\r\n    return response;\r\n};\r\n\r\nasync function readConfigFilter() {\r\n    try {\r\n        const rawData = await getConfigFilter();\r\n        filterConfigData = await rawData.json();\r\n        createRecordsObjFromAPI(apiPage, filterConfigData);\r\n    } catch (e) {\r\n        console.error(e);\r\n        createRecordsObjFromAPI(apiPage);\r\n    }\r\n}\r\n\r\nreadConfigFilter();\r\n\r\n// change RECORDS QUANTITY ON PAGE //////////////////////////////////////////////////\r\nrecordsOnPageLoc.addEventListener(\"change\", (e) => {\r\n    recordsOnPage = parseInt(e.target.value);\r\n\r\n    filtersON\r\n        ? createRecordBoxes(filteredRecordsArray_11, 0, recordsOnPage)\r\n        : createRecordBoxes(allRecordsArray, 0, recordsOnPage);\r\n    setPages(recordsNumber);\r\n\r\n    // setParentIframeHeight();\r\n});\r\n\r\n// SEARCH LISTENER /////////////////////////////////////////////////////////////\r\nsearchBtn.addEventListener(\"click\", createFilteredRecordsArray);\r\n\r\nadvancedSearchBtn.addEventListener(\"click\", () => {\r\n    advancedContainer.classList.toggle(\"showed\");\r\n    advancedSearchBtn.classList.toggle(\"rotate180\");\r\n   \r\n})"]}