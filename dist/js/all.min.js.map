{"version":3,"sources":["main.js"],"names":["jobLoc","document","querySelector","jobLabelLoc","jobInputLoc","jobClearBtnLoc","cityLoc","cityListBtnLoc","cityListTitleLoc","citySelectedOptionsLoc","cityListLoc","distanceLoc","distanceListBtnLoc","distanceListTitleLoc","distanceListLoc","sectorLoc","sectorListBtnLoc","sectorListTitleLoc","sectorSelectedOptionsLoc","sectorListLoc","employmentFormLoc","employmentFormListBtnLoc","employmentFormListTitleLoc","employmentFormSelectedOptionsLoc","employmentFormListLoc","workingHoursLoc","workingHoursListBtnLoc","workingHoursListTitleLoc","workingHoursSelectedOptionsLoc","workingHoursListLoc","languageLoc","languageListBtnLoc","languageListTitleLoc","languageSelectedOptionsLoc","languageListLoc","awardedResultsLoc","recordsOnPageLoc","pagesSwitchLoc","pagesContainer","pageButtonsLoc","querySelectorAll","brancheWrapperLoc","branchesLoc","jobFormLoc","jobTypeLoc","langLoc","citiesLoc","resultsLoc","remoteLoc","relocationLoc","searchInputLoc","distanceInputsLoc","distanceTitleLoc","searchBtn","advancedSearchBar","advancedSearchBtn","advancedContainer","addEventListener","e","classList","add","style","opacity","display","event","target","value","remove","stopPropagation","removePaddingBottomToFilterList","filterList","closest","paddingBottom","boxShadow","addPaddingBottomToFilterList","dropDownListArray","forEach","elem","toggle","filteredRecordsArray_11","filterConfigData","apiPage","rawAPIArray","allRecordsArray","recordsNumber","firstRecordNumber","recordsOnPage","filtersON","filterBranchesList","filterJobFormList","filterJobTypeList","filterLangList","filterCountriesList","innerText","Number","dataset","distance","filterListLocArray","selectedOptionsInFilterArray","setClearBtn","index","clearBtn","filtersQuantityBtn","filtersSelectedOptions","filtersListTitle","length","el","checked","actionAfterFilterInputChange","filterParentLoc","filtersListTitleLoc","filtersSelectedOptionsLoc","indexFilter","indexOf","push","indexDeletedItem","splice","join","addListenerToFilterListsElements","createRecordBoxes","recordsArray","replaceChildren","i","borderColorClass","textColorClass","recruitmentType_colorOnly","recruitmentType","formaZatrudnienia","jobForm","insertAdjacentHTML","url","lang","branche","name","city","jobType","visibleRate","salaryFrom","salaryTo","remote","relocation","createFilteredRecordsArray","branchesChildrenLoc","jobFormChildrenLoc","jobTypeChildrenLoc","langChildrenLoc","citiesChildrenLoc","filteredRecordsArray","selectedBranches","branche_filter","Array","from","filter","map","filteredRecordsArray_1","addFlag","selectedFiltr","selectedJobForms","filteredRecordsArray_2","selectedjobTypes","filteredRecordsArray_3","selectedLangs","language_filter","filteredRecordsArray_4","filteredRecordsArray_6","selectedCity","location_city_filter","filteredRecordsArray_7","lati","longi","min_lati","max_lati","min_longi","max_longi","selectedDistance","parseInt","el_city","el_record","Math","cos","PI","filteredRecordsArray_8","filteredRecordsArray_9","filteredRecordsArray_10","searchText","position","description","field_id","toLowerCase","search","selectedRecruitmentType","recruitmentType_filter","setPages","pagesContainerStart","dropDownBtnStart","dropDownLoc","showHideFilters","createFilterLists","branche_visible","sort","a","b","localeCompare","Object","keys","compare","key","reduce","accumulator","allCitiesObj","concat","allCitiesArray","changePage","pageBtn","firstRecord","lastRecord","globActivePageNo","movePrevPagesBtns","activePageNo","firstDispalyedPageNo","shift","lastDispalyedPageNo","pop","n","pagesQuantityCalc","moveNextPagesBtns","getWidth","max","body","scrollWidth","documentElement","offsetWidth","clientWidth","getHeight","scrollHeight","offsetHeight","clientHeight","ceil","maxPageBtns","setPagesBtnQuantity","window","createAwardedRecordBoxes","awardedRecordsArray","awarded","remote_filter","filterAwarded","location_country_filter","margin","summariseDownload","recNumLoc","noResultsLoc","createDataForFilters","country","undefined","findIndex","arr_el","reworkData","parsedJobLocation","options","job_location","JSON","parse","advert","branches","language","job_type","_Widoczna_stawka","_spodziewane_wynagrodzenie_od","_spodziewane_wynagrodzenie_do","_relokacja","_rekrutacja_rodzaj","_forma_zatrudnienia","locality","parseFloat","latitude","longitude","values","getAPI","fetch","mode","headers","loopOnAPI","jsonData","createRecordsObjFromAPI","async","rawData","json","getConfigFilter","readConfigFilter","console","error","clearAllFiltersLoc"],"mappings":"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","file":"all.min.js","sourcesContent":["\"use strict\"\r\n\r\nconst jobLoc = document.querySelector(\".job\");\r\nconst jobLabelLoc = document.querySelector(\".job label\");\r\nconst jobInputLoc = document.querySelector(\".job input\");\r\nconst jobClearBtnLoc = jobLoc.querySelector(\".clear-btn\")\r\n\r\nconst cityLoc = document.querySelector(\".city\");\r\nconst cityListBtnLoc = document.querySelector(\".city .arrow-down\");\r\nconst cityListTitleLoc = document.querySelector(\".city .list-title\");\r\nconst citySelectedOptionsLoc = document.querySelector(\".city .selected-options\");\r\nconst cityListLoc = document.querySelector(\".city .list\");\r\n\r\nconst distanceLoc = document.querySelector(\".distance\");\r\nconst distanceListBtnLoc = document.querySelector(\".distance .arrow-down\");\r\nconst distanceListTitleLoc = document.querySelector(\".distance .list-title\");\r\nconst distanceListLoc = document.querySelector(\".distance .list\");\r\n\r\nconst sectorLoc = document.querySelector(\".sector\");\r\nconst sectorListBtnLoc = document.querySelector(\".sector .arrow-down\");\r\nconst sectorListTitleLoc = document.querySelector(\".sector .list-title\");\r\nconst sectorSelectedOptionsLoc = document.querySelector(\".sector .selected-options\");\r\nconst sectorListLoc = document.querySelector(\".sector .list\");\r\n\r\nconst employmentFormLoc = document.querySelector(\".employment-form\");\r\nconst employmentFormListBtnLoc = document.querySelector(\".employment-form .arrow-down\");\r\nconst employmentFormListTitleLoc = document.querySelector(\".employment-form .list-title\");\r\nconst employmentFormSelectedOptionsLoc = document.querySelector(\".employment-form .selected-options\");\r\nconst employmentFormListLoc = document.querySelector(\".employment-form .list\");\r\n\r\nconst workingHoursLoc = document.querySelector(\".working-hours\");\r\nconst workingHoursListBtnLoc = document.querySelector(\".working-hours .arrow-down\");\r\nconst workingHoursListTitleLoc = document.querySelector(\".working-hours .list-title\");\r\nconst workingHoursSelectedOptionsLoc = document.querySelector(\".working-hours .selected-options\");\r\nconst workingHoursListLoc = document.querySelector(\".working-hours .list\");\r\n\r\nconst languageLoc = document.querySelector(\".language\");\r\nconst languageListBtnLoc = document.querySelector(\".language .arrow-down\");\r\nconst languageListTitleLoc = document.querySelector(\".language .list-title\");\r\nconst languageSelectedOptionsLoc = document.querySelector(\".language .selected-options\");\r\nconst languageListLoc = document.querySelector(\".language .list\");\r\n\r\nconst awardedResultsLoc = document.querySelector(\".awarded\");\r\nconst recordsOnPageLoc = document.querySelector(\".records-on-page\");\r\nconst pagesSwitchLoc = document.querySelector(\".pages\");\r\nconst pagesContainer = document.querySelector(\".pages-container\");\r\nlet pageButtonsLoc = document.querySelectorAll(\".page\");\r\n\r\nconst brancheWrapperLoc = document.querySelector(\".sector\");\r\nconst branchesLoc = document.querySelector(\".sector ul\");\r\nconst jobFormLoc = document.querySelector(\".employment-form ul\"); \r\nconst jobTypeLoc = document.querySelector(\".working-hours ul\"); \r\nconst langLoc = document.querySelector(\".language ul\");\r\nconst citiesLoc = document.querySelector(\".city ul\");\r\nconst resultsLoc = document.querySelector(\".results\");\r\n\r\nconst remoteLoc = document.querySelector(\"#remote\");\r\nconst relocationLoc = document.querySelector(\"#relocation\");\r\nconst searchInputLoc = document.querySelector(\".job input\");\r\n\r\nconst distanceInputsLoc = document.querySelectorAll(\".distance input\");\r\nconst distanceTitleLoc = document.querySelector(\".distance .list-title\");\r\n\r\nconst searchBtn = document.querySelector(\".search-btn\");\r\n\r\nconst advancedSearchBar = document.querySelector(\".wrapper.five\");\r\nconst advancedSearchBtn = document.querySelector(\".advanced-search-btn .arrow-down\");\r\nconst advancedContainer = document.querySelector(\".advanced-container\");\r\n\r\njobLoc.addEventListener(\"click\", (e) => {\r\n    jobLabelLoc.classList.add(\"mini\");\r\n    jobInputLoc.classList.add(\"active\");\r\n    jobClearBtnLoc.style.opacity = \"0.5\";\r\n    jobClearBtnLoc.style.display = \"flex\";\r\n})\r\n\r\njobInputLoc.addEventListener(\"blur\", (event) => {\r\n    if (!event.target.value) {\r\n        jobLabelLoc.classList.remove(\"mini\");\r\n        jobInputLoc.classList.remove(\"active\");\r\n        jobClearBtnLoc.style.opacity = \"0\";\r\n        jobClearBtnLoc.style.display = \"none\";\r\n    }\r\n})\r\n\r\njobClearBtnLoc.addEventListener(\"click\", (e) => {\r\n    e.stopPropagation()\r\n    jobInputLoc.value = \"\";\r\n    jobLabelLoc.classList.remove(\"mini\");\r\n    jobInputLoc.classList.remove(\"active\");\r\n    jobClearBtnLoc.style.opacity = \"0\";\r\n    jobClearBtnLoc.style.display = \"none\";\r\n})\r\n\r\nconst removePaddingBottomToFilterList = (filterList) => {\r\n    filterList.closest(\".element\").style.paddingBottom = \"\";\r\n    filterList.closest(\".element\").style.boxShadow = \"\";\r\n}\r\n\r\nconst addPaddingBottomToFilterList = (filterList) => {\r\n    if (filterList.closest(\".element\").style.paddingBottom === \"\" ) {\r\n        filterList.closest(\".element\").style.paddingBottom = \"15px\";\r\n        filterList.closest(\".element\").style.boxShadow = \"0px 0px 3px rgba(0,0,0,0.1)\";\r\n    } else {\r\n        removePaddingBottomToFilterList(filterList);\r\n    }\r\n}\r\n\r\nconst dropDownListArray = [cityLoc, distanceLoc, sectorLoc, employmentFormLoc, workingHoursLoc, languageLoc]\r\n\r\ndropDownListArray.forEach((elem) => {\r\n    elem.querySelector(\".list-title\").addEventListener(\"click\", () => {\r\n        elem.querySelector(\".list\").classList.toggle(\"expand\");\r\n        elem.querySelector(\".arrow-down\").classList.toggle(\"rotate180\");\r\n        addPaddingBottomToFilterList(elem.querySelector(\".list-title\"));\r\n    })\r\n})\r\n\r\ndropDownListArray.forEach((elem) => {\r\n    elem.addEventListener(\"mouseleave\", () => {\r\n        elem.querySelector(\".list\").classList.remove(\"expand\");\r\n        elem.querySelector(\".arrow-down\").classList.remove(\"rotate180\");\r\n        removePaddingBottomToFilterList(elem.querySelector(\".list-title\"));\r\n    })\r\n})\r\n\r\nlet filterConfigData = {};\r\nlet apiPage = 1;\r\nlet rawAPIArray = [];\r\nlet allRecordsArray = [];\r\nlet recordsNumber = 0;\r\nlet firstRecordNumber = 0;\r\nlet recordsOnPage = 20;\r\nlet filtersON = false;\r\nlet filterBranchesList = [];\r\nlet filterJobFormList = [];\r\nlet filterJobTypeList = [];\r\nlet filterLangList = [];\r\nlet filterCountriesList = {};\r\nlet filteredRecordsArray_11;\r\n\r\n// change distance label after choose\r\ndistanceInputsLoc.forEach((elem) => {\r\n    elem.addEventListener(\"change\", () => {\r\n        distanceTitleLoc.innerText = `+${Number(elem.value)} km`;\r\n        distanceTitleLoc.dataset.distance = Number(elem.value);\r\n    })\r\n})\r\n\r\nrecordsOnPageLoc.value = recordsOnPage;\r\n\r\nconst filterListLocArray = [cityLoc, sectorLoc, employmentFormLoc, workingHoursLoc, languageLoc];\r\nlet selectedOptionsInFilterArray = [[],[],[],[],[],[]];\r\n\r\nconst setClearBtn = () => {\r\n    filterListLocArray.forEach((elem, index) => {\r\n\r\n        // selectedOptionsInFilterArray.push([]);\r\n    \r\n        const clearBtn = elem.querySelector(\".clear-btn\");\r\n        const filtersQuantityBtn = elem.querySelector(\".filters-quantity\");\r\n        const filtersSelectedOptions = elem.querySelector(\".selected-options\");\r\n        const filtersListTitle = elem.querySelector(\".list-title\");\r\n    \r\n        clearBtn.addEventListener(\"mouseenter\", () => {\r\n            if (selectedOptionsInFilterArray[index].length !== 0) {\r\n                filtersQuantityBtn.style.opacity = \"0\";\r\n                clearBtn.style.opacity = \"1\";\r\n            }\r\n        });\r\n        \r\n        clearBtn.addEventListener(\"mouseleave\", () => {\r\n            if (selectedOptionsInFilterArray[index].length !== 0) {\r\n                filtersQuantityBtn.style.opacity = \"1\";\r\n                clearBtn.style.opacity = \"0\";\r\n            }\r\n        });\r\n    \r\n        clearBtn.addEventListener(\"click\", () => {\r\n            if (selectedOptionsInFilterArray[index].length !== 0) {\r\n                selectedOptionsInFilterArray[index] = [];\r\n                clearBtn.style.opacity = \"0\";\r\n                elem.querySelectorAll(\"input\").forEach((el) => {\r\n                    el.checked = false;\r\n                })\r\n                filtersSelectedOptions.innerText = \"\";\r\n                filtersListTitle.classList.remove(\"mini\");\r\n                filtersQuantityBtn.style.opacity = \"0\";\r\n            }\r\n        });\r\n    })\r\n}\r\n\r\nsetClearBtn()\r\n\r\nconst actionAfterFilterInputChange = (e) => {\r\n    const filterParentLoc = e.target.closest(\".drop-down-container\");\r\n    const filtersQuantityBtn = filterParentLoc.querySelector(\".filters-quantity\");\r\n    const filtersListTitleLoc = filterParentLoc.querySelector(\".list-title\");\r\n    const filtersSelectedOptionsLoc = filterParentLoc.querySelector(\".selected-options\");\r\n   \r\n    const indexFilter = filterListLocArray.indexOf(filterParentLoc);\r\n\r\n    if (e.target.checked) {\r\n        selectedOptionsInFilterArray[indexFilter].push(e.target.value);\r\n    } else {\r\n        const indexDeletedItem = selectedOptionsInFilterArray[indexFilter].indexOf(e.target.value);\r\n        selectedOptionsInFilterArray[indexFilter].splice(indexDeletedItem,1);\r\n    }\r\n\r\n    selectedOptionsInFilterArray[indexFilter]\r\n\r\n    if (selectedOptionsInFilterArray[indexFilter].length !== 0) {\r\n        filtersListTitleLoc.classList.add(\"mini\");\r\n        filtersQuantityBtn.style.opacity = \"1\";\r\n        filtersQuantityBtn.innerText = selectedOptionsInFilterArray[indexFilter].length;\r\n    } else {\r\n        filtersListTitleLoc.classList.remove(\"mini\");\r\n        filtersQuantityBtn.style.opacity = \"0\";\r\n    }\r\n\r\n    filtersSelectedOptionsLoc.innerText = selectedOptionsInFilterArray[indexFilter].join(\", \");\r\n}\r\n\r\nconst addListenerToFilterListsElements = () => {\r\n    \r\n    document.querySelectorAll(\".city ul input\").forEach((elem) => {\r\n        elem.addEventListener(\"change\", actionAfterFilterInputChange);\r\n    })\r\n    \r\n    document.querySelectorAll(\".sector ul input\").forEach((elem) => {\r\n        elem.addEventListener(\"change\", actionAfterFilterInputChange);\r\n    })\r\n\r\n    document.querySelectorAll(\".employment-form ul input\").forEach((elem) => {\r\n        elem.addEventListener(\"change\", actionAfterFilterInputChange);\r\n    })\r\n\r\n    document.querySelectorAll(\".working-hours ul input\").forEach((elem) => {\r\n        elem.addEventListener(\"change\", actionAfterFilterInputChange);\r\n    })\r\n\r\n    document.querySelectorAll(\".language ul input\").forEach((elem) => {\r\n        elem.addEventListener(\"change\", actionAfterFilterInputChange);\r\n    })\r\n\r\n};\r\n\r\n// create RECORDS BOXES ///////////////////////////////////////////////\r\nconst createRecordBoxes = (recordsArray, firstRecordNumber, recordsOnPage) => {\r\n    resultsLoc.replaceChildren();\r\n\r\n    for (let i = firstRecordNumber; i < recordsOnPage; i++) {\r\n        // colouring of records by type of recruitment\r\n\r\n        if (recordsArray[i]) {\r\n            let borderColorClass = \"\";\r\n            let textColorClass = \"\";\r\n\r\n            if (!filterConfigData.recruitmentType_colorOnly.length) {\r\n                if (recordsArray[i].recruitmentType === \"PT\") {\r\n                    borderColorClass = \"pt-border\";\r\n                    textColorClass = \"pt-text\";\r\n                }\r\n                if (recordsArray[i].recruitmentType === \"RS\") {\r\n                    borderColorClass = \"rs-border\";\r\n                    textColorClass = \"rs-text\";\r\n                }\r\n                if (recordsArray[i].recruitmentType === \"WEW\") {\r\n                    borderColorClass = \"wew-border\";\r\n                    textColorClass = \"wew-text\";\r\n                }\r\n            } else {\r\n                if (\r\n                    filterConfigData.recruitmentType_colorOnly.indexOf(\"PT\") !==\r\n                    -1\r\n                ) {\r\n                    if (recordsArray[i].recruitmentType === \"PT\") {\r\n                        borderColorClass = \"pt-border\";\r\n                        textColorClass = \"pt-text\";\r\n                    }\r\n                }\r\n\r\n                if (\r\n                    filterConfigData.recruitmentType_colorOnly.indexOf(\"RS\") !==\r\n                    -1\r\n                ) {\r\n                    if (recordsArray[i].recruitmentType === \"RS\") {\r\n                        borderColorClass = \"rs-border\";\r\n                        textColorClass = \"rs-text\";\r\n                    }\r\n                }\r\n\r\n                if (\r\n                    filterConfigData.recruitmentType_colorOnly.indexOf(\r\n                        \"WEW\"\r\n                    ) !== -1\r\n                ) {\r\n                    if (recordsArray[i].recruitmentType === \"WEW\") {\r\n                        borderColorClass = \"wew-border\";\r\n                        textColorClass = \"wew-text\";\r\n                    }\r\n                }\r\n            }\r\n\r\n            let formaZatrudnienia = \"\";\r\n\r\n            if (recordsArray[i].jobForm) {\r\n                recordsArray[i].jobForm.forEach(function (elem) {\r\n                    formaZatrudnienia =\r\n                        formaZatrudnienia + \"<p>\" + elem + \"</p>\";\r\n                });\r\n            }\r\n\r\n            resultsLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<a href=\"${\r\n                    recordsArray[i].url\r\n                }\" target=\"_blank\"><div class=\"result ${borderColorClass}\">\r\n            <div class=\"top\">\r\n              \r\n                    <div class=\"lang\"><p>${recordsArray[i].lang}</p></div>\r\n                    <div class=\"branche-name\">\r\n                        <div class=\"branche\">${\r\n                            recordsArray[i].branche\r\n                                ? recordsArray[i].branche\r\n                                : \"\"\r\n                        }</div>\r\n                        <div class=\"name ${textColorClass}\">${\r\n                    recordsArray[i].name\r\n                }</div>\r\n                   \r\n                </div>\r\n              \r\n            </div>\r\n\r\n            <div class=\"bottom\">\r\n                <div class=\"city-container\">\r\n                    <div class=\"city\"><img src=\"./img/location_dot.svg\">${\r\n                        recordsArray[i].city\r\n                    }</div>\r\n                    </div>\r\n                    <div class=\"details-container\">\r\n                    ${\r\n                        recordsArray[i].jobType\r\n                            ? \"<div class='jobtype'>\" +\r\n                              recordsArray[i].jobType +\r\n                              \"</div>\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        recordsArray[i].visibleRate\r\n                            ? recordsArray[i].salaryFrom &&\r\n                              recordsArray[i].salaryTo\r\n                                ? \"<div class='salary'>\" +\r\n                                  recordsArray[i].salaryFrom +\r\n                                  \" - \" +\r\n                                  recordsArray[i].salaryTo +\r\n                                  \"</div>\"\r\n                                : \"\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        recordsArray[i].remote\r\n                            ? \"<div class='remote'>zdalna</div>\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        recordsArray[i].relocation\r\n                            ? \"<div class='relocation'>relocation</div>\"\r\n                            : \"\"\r\n                    }\r\n                    <div class=\"employmentform\">${formaZatrudnienia}</div>\r\n                    </div>\r\n                </div>\r\n                   \r\n                </div>\r\n          \r\n\r\n        </div></a>`\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\n// filter the data to create FILTERED OBJECTS ARRAY ///////////////////////////////\r\nconst createFilteredRecordsArray = () => {\r\n    const branchesChildrenLoc = branchesLoc.querySelectorAll(\"li input\");\r\n    const jobFormChildrenLoc = jobFormLoc.querySelectorAll(\"li input\");\r\n    const jobTypeChildrenLoc = jobTypeLoc.querySelectorAll(\"li input\");\r\n    const langChildrenLoc = langLoc.querySelectorAll(\"li input\");\r\n    const citiesChildrenLoc = citiesLoc.querySelectorAll(\"li input\");\r\n\r\n    let filteredRecordsArray = allRecordsArray;\r\n\r\n    // selectedBranches ////////////////\r\n    let selectedBranches = [];\r\n\r\n    if (filterConfigData.branche_filter.length) {\r\n        selectedBranches = filterConfigData.branche_filter;\r\n    } else {\r\n        selectedBranches = Array.from(branchesChildrenLoc)\r\n            .filter(function (elem) {\r\n                return elem.checked;\r\n            })\r\n            .map(function (elem) {\r\n                return elem.value;\r\n            });\r\n    }\r\n\r\n    let filteredRecordsArray_1 = [];\r\n\r\n    if (selectedBranches.length !== 0) {\r\n        filteredRecordsArray.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedBranches.forEach((selectedFiltr) => {\r\n                if (el.branche === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_1.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_1 = filteredRecordsArray;\r\n    }\r\n\r\n    // selectedJobForms ////////////////\r\n    let selectedJobForms = [];\r\n\r\n    selectedJobForms = Array.from(jobFormChildrenLoc)\r\n        .filter(function (elem) {\r\n            return elem.checked;\r\n        })\r\n        .map(function (elem) {\r\n            return elem.value;\r\n        });\r\n\r\n    let filteredRecordsArray_2 = [];\r\n\r\n    if (selectedJobForms.length !== 0) {\r\n        filteredRecordsArray_1.forEach((el, index) => {\r\n            if (el.jobForm) {\r\n                let addFlag = false;\r\n\r\n                selectedJobForms.forEach((selectedFiltr) => {\r\n                    if (el.jobForm.indexOf(selectedFiltr) !== -1) {\r\n                        addFlag = true;\r\n                    }\r\n                });\r\n\r\n                if (addFlag) {\r\n                    filteredRecordsArray_2.push(el);\r\n                }\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_2 = filteredRecordsArray_1;\r\n    }\r\n\r\n    // selectedJobTypes ////////////////\r\n    let selectedjobTypes = Array.from(jobTypeChildrenLoc)\r\n        .filter(function (elem) {\r\n            return elem.checked;\r\n        })\r\n        .map(function (elem) {\r\n            return elem.value;\r\n        });\r\n\r\n    let filteredRecordsArray_3 = [];\r\n\r\n    if (selectedjobTypes.length !== 0) {\r\n        filteredRecordsArray_2.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedjobTypes.forEach((selectedFiltr) => {\r\n                if (el.jobType === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_3.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_3 = filteredRecordsArray_2;\r\n    }\r\n\r\n    // selectedLangs ////////////////\r\n    let selectedLangs = [];\r\n\r\n    if (\r\n        filterConfigData.language_filter.length \r\n    ) {\r\n        selectedLangs = filterConfigData.language_filter;\r\n    } else {\r\n        selectedLangs = Array.from(langChildrenLoc)\r\n            .filter(function (elem) {\r\n                return elem.checked;\r\n            })\r\n            .map(function (elem) {\r\n                return elem.value;\r\n            });\r\n    }\r\n\r\n    let filteredRecordsArray_4 = [];\r\n\r\n    if (selectedLangs.length !== 0) {\r\n        filteredRecordsArray_3.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedLangs.forEach((selectedFiltr) => {\r\n                if (el.lang === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_4.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_4 = filteredRecordsArray_3;\r\n    }\r\n\r\n    // // selectedSalary ////////////////\r\n\r\n    // let selectedValOne;\r\n    // let selectedValTwo;\r\n    // if (salaryMarkLoc.checked) {\r\n    //     selectedValOne = parseInt(displayValOne.innerText);\r\n    //     selectedValTwo = parseInt(displayValTwo.innerText);\r\n    // }\r\n\r\n    // let filteredRecordsArray_5 = [];\r\n\r\n    // if (salaryMarkLoc.checked) {\r\n    //     filteredRecordsArray_4.forEach((el, index) => {\r\n    //         let addFlag = false;\r\n\r\n    //         if (el.visibleRate) {\r\n    //             if (el.salaryTo && el.salaryFrom) {\r\n    //                 if (\r\n    //                     el.salaryTo >= selectedValOne &&\r\n    //                     el.salaryFrom <= selectedValTwo\r\n    //                 ) {\r\n    //                     addFlag = true;\r\n    //                 }\r\n    //             }\r\n    //             if (el.salaryTo && !el.salaryFrom) {\r\n    //                 if (el.salaryTo >= selectedValOne) {\r\n    //                     addFlag = true;\r\n    //                 }\r\n    //             }\r\n    //             if (!el.salaryTo && el.salaryFrom) {\r\n    //                 if (el.salaryFrom <= selectedValTwo) {\r\n    //                     addFlag = true;\r\n    //                 }\r\n    //             }\r\n    //         }\r\n\r\n    //         if (addFlag) {\r\n    //             filteredRecordsArray_5.push(el);\r\n    //         }\r\n    //     });\r\n    // } else {\r\n    //     filteredRecordsArray_5 = filteredRecordsArray_4;\r\n    // }\r\n\r\n    // // selectedCountry ////////////////\r\n\r\n    // let selectedCountry = [];\r\n\r\n    // if (\r\n    //     filterConfigData.location_country_filter.length \r\n    //     // && !filterConfigData.location_visible\r\n    // ) {\r\n    //     selectedCountry = filterConfigData.location_country_filter;\r\n    // } else {\r\n    //     if (locationMarkLoc.checked) {\r\n    //         selectedCountry = Array.from(countriesChildrenLoc)\r\n    //             .filter(function (elem) {\r\n    //                 if (elem.value) {\r\n    //                     return elem.selected;\r\n    //                 }\r\n    //             })\r\n    //             .map(function (elem) {\r\n    //                 if (elem.value) {\r\n    //                     return elem.value;\r\n    //                 }\r\n    //             });\r\n    //     }\r\n    // }\r\n\r\n    // let filteredRecordsArray_6 = [];\r\n\r\n    // if (\r\n    //     locationMarkLoc.checked ||\r\n    //     (filterConfigData.location_country_filter.length \r\n    //         // && !filterConfigData.location_visible\r\n    //         )\r\n    // ) {\r\n    //     if (selectedCountry.length) {\r\n    //         filteredRecordsArray_5.forEach((el, index) => {\r\n    //             let addFlag = false;\r\n\r\n    //             selectedCountry.forEach((selectedFiltr) => {\r\n    //                 if (el.country === selectedFiltr) {\r\n    //                     addFlag = true;\r\n    //                 }\r\n    //             });\r\n\r\n    //             if (addFlag) {\r\n    //                 filteredRecordsArray_6.push(el);\r\n    //             }\r\n    //         });\r\n    //     } else {\r\n    //         filteredRecordsArray_6 = filteredRecordsArray_5;\r\n    //     }\r\n    // } else {\r\n    //     filteredRecordsArray_6 = filteredRecordsArray_5;\r\n    // }\r\n\r\n    let filteredRecordsArray_6 = filteredRecordsArray_4;\r\n\r\n    // selectedCity & selectedDistance ////////////////\r\n    let selectedCity = [];\r\n\r\n    if (filterConfigData.location_city_filter.length) {\r\n        selectedCity = filterConfigData.location_city_filter;\r\n    } else {\r\n\r\n        selectedCity = Array.from(citiesChildrenLoc)\r\n            .filter(function (elem) {\r\n                if (elem.value) {\r\n                    return elem.checked;\r\n                }\r\n            })\r\n            .map(function (elem) {\r\n                if (elem.value) {\r\n                    return elem.value;\r\n                }\r\n            });\r\n    }\r\n\r\n    let filteredRecordsArray_7 = [];\r\n\r\n    if (selectedCity.length) {\r\n        \r\n        let selectedDistance = parseInt(distanceTitleLoc.dataset.distance);\r\n\r\n        let lati;\r\n        let longi;\r\n        let min_lati;\r\n        let max_lati;\r\n        let min_longi;\r\n        let max_longi;\r\n\r\n        selectedCity.forEach((el_city) => {\r\n            filteredRecordsArray_6.forEach((el_record, index) => {\r\n                if (el_city === el_record.city) {\r\n\r\n                    lati = el_record.lati;\r\n                    longi = el_record.longi;\r\n\r\n                    min_lati = lati - selectedDistance * 0.009044;\r\n                    max_lati = lati + selectedDistance * 0.009044;\r\n                    min_longi = longi - (selectedDistance * 0.0089831) / Math.cos((lati * Math.PI) / 180);\r\n                    max_longi = longi + (selectedDistance * 0.0089831) / Math.cos((lati * Math.PI) / 180);\r\n                }\r\n            });\r\n\r\n            filteredRecordsArray_6.forEach((el_record, index) => {\r\n                if (\r\n                    el_record.lati <= max_lati &&\r\n                    el_record.lati >= min_lati &&\r\n                    el_record.longi <= max_longi &&\r\n                    el_record.longi >= min_longi\r\n                ) {\r\n                    filteredRecordsArray_7.push(el_record);\r\n                }\r\n            })\r\n        })\r\n        \r\n    } else {\r\n        filteredRecordsArray_7 = filteredRecordsArray_6;\r\n    }\r\n   \r\n    // selectedRemote ////////////////\r\n    let filteredRecordsArray_8 = [];\r\n\r\n    if (remoteLoc.checked || (filterConfigData.remote_filter)) {\r\n        filteredRecordsArray_7.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            if (el.remote) {\r\n                addFlag = true;\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_8.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_8 = filteredRecordsArray_7;\r\n    }\r\n\r\n    // selectedRelocation ////////////////\r\n    let filteredRecordsArray_9 = [];\r\n\r\n    if (relocationLoc.checked) {\r\n        filteredRecordsArray_8.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            if (el.relocation) {\r\n                addFlag = true;\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_9.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_9 = filteredRecordsArray_8;\r\n    }\r\n\r\n    // searchText ////////////////\r\n    let filteredRecordsArray_10 = [];\r\n\r\n    let searchText = searchInputLoc.value;\r\n\r\n    if (searchText) {\r\n        filteredRecordsArray_9.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            let position;\r\n\r\n            el.description.forEach(function (elem) {\r\n                if (elem.value && elem.field_id !== \"geolocation\") {\r\n                    position = elem.value\r\n                        .toLowerCase()\r\n                        .search(searchText.toLowerCase());\r\n                    if (position !== -1) {\r\n                        addFlag = true;\r\n                    }\r\n                }\r\n            });\r\n\r\n            position = el.name.toLowerCase().search(searchText.toLowerCase());\r\n            if (position !== -1) {\r\n                addFlag = true;\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_10.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_10 = filteredRecordsArray_9;\r\n    }\r\n\r\n    // selectedRecruitmentType (coloring of records) ////////////////\r\n    filteredRecordsArray_11 = [];\r\n    \r\n    let selectedRecruitmentType = [];\r\n\r\n    if (filterConfigData.recruitmentType_filter.length) {\r\n        selectedRecruitmentType = filterConfigData.recruitmentType_filter;\r\n    }\r\n\r\n    if (selectedRecruitmentType.length !== 0) {\r\n        filteredRecordsArray_10.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedRecruitmentType.forEach((selectedFiltr) => {\r\n                if (el.recruitmentType === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_11.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_11 = filteredRecordsArray_10;\r\n    }\r\n\r\n    recordsNumber = filteredRecordsArray_11.length;\r\n\r\n    // summariseDownload(recordsNumber);\r\n    createRecordBoxes(filteredRecordsArray_11, 0, recordsOnPage);\r\n  \r\n    setPages(recordsNumber);\r\n    filtersON = true;\r\n    // hideFilter();\r\n    \r\n    // setTimeout(setParentIframeHeight, 1000);\r\n    \r\n};\r\n\r\nconst pagesContainerStart = () => {\r\n    pagesContainer.classList.add(\"active\");\r\n};\r\n\r\nconst dropDownBtnStart = () => {\r\n    dropDownLoc.addEventListener(\"click\", showHideFilters);\r\n\r\n    dropDownLoc.classList.add(\"active\");\r\n};\r\n\r\n// create HTML FILTERS LISTS //////////////////////////////////////////////////////\r\nconst createFilterLists = (filterConfigData) => {\r\n\r\n    // if (!filterConfigData.salary_visible) {\r\n    //     salaryLoc.classList.add(\"unactive\");\r\n    // }\r\n\r\n    // if (!filterConfigData.relocation_visible) {\r\n    //     relocationWrapperLoc.classList.add(\"unactive\");\r\n    // }\r\n\r\n    // if (!filterConfigData.language_visible) {\r\n    //     langWrapperLoc.classList.add(\"unactive\");\r\n    // }\r\n\r\n    // if (!filterConfigData.remote_visible) {\r\n    //     remoteWrapperLoc.classList.add(\"unactive\");\r\n    // }\r\n\r\n    // if (!filterConfigData.location_visible) {\r\n    //     locWrapperLoc.classList.add(\"unactive\");\r\n    // }\r\n\r\n    if (!filterConfigData.branche_visible) {\r\n        brancheWrapperLoc.classList.add(\"unactive\");\r\n    }\r\n\r\n    // let isSamsungBrowser = navigator.userAgent.match(/SamsungBrowser/i);\r\n    // let isChromeBrowser = navigator.userAgent.match(/Chrome/i);\r\n\r\n    if (filterBranchesList.length > 0) {\r\n        filterBranchesList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        \r\n        // filterListMaxHeight = filterBranchesList.length * 21 + 3;\r\n        // if (getMobileOperatingSystem() === \"unknown\") {\r\n            // brancheListLoc.style.height = String(rowHeight) + \"px\";\r\n        // } else if (isSamsungBrowser || isChromeBrowser) {\r\n        //     branchesLoc.style.height = \"50px\";\r\n        // } else {\r\n        //     branchesLoc.style.height = String(rowHeight) + \"px\";\r\n        // }\r\n        \r\n        filterBranchesList.forEach(function (el) {\r\n            branchesLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<li>\r\n                <div class=\"checkbox-container-small\">\r\n                    <label class=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"${el}\" name=\"${el}\" value=\"${el}\">\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                    <label class=\"label-text\" for=\"${el}\">${el}</label>\r\n                </div>\r\n            </li>`\r\n            );\r\n            \r\n        });\r\n    }\r\n\r\n    if (filterJobFormList.length > 0) {\r\n        filterJobFormList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        // rowHeight = filterJobFormList.length * 21 + 3;\r\n        // if (getMobileOperatingSystem() === \"unknown\") {\r\n            // jobFormLoc.style.height = String(rowHeight) + \"px\";\r\n        // } else if (isSamsungBrowser || isChromeBrowser) {\r\n        //     jobFormLoc.style.height = \"50px\";\r\n        // } else {\r\n        //     jobFormLoc.style.height = String(rowHeight) + \"px\";\r\n        // }\r\n        filterJobFormList.forEach(function (el) {\r\n            jobFormLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<li>\r\n                <div class=\"checkbox-container-small\">\r\n                    <label class=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"${el}\" name=\"${el}\" value=\"${el}\">\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                    <label class=\"label-text\" for=\"${el}\">${el}</label>\r\n                </div>\r\n            </li>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (filterJobTypeList.length > 0) {\r\n        filterJobTypeList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        // rowHeight = filterJobTypeList.length * 21 + 3;\r\n        // if (getMobileOperatingSystem() === \"unknown\") {\r\n            // jobTypeLoc.style.height = String(rowHeight) + \"px\";\r\n        // } else if (isSamsungBrowser || isChromeBrowser) {\r\n        //     jobTypeLoc.style.height = \"50px\";\r\n        // } else {\r\n        //     jobTypeLoc.style.height = String(rowHeight) + \"px\";\r\n        // }\r\n        filterJobTypeList.forEach(function (el) {\r\n            jobTypeLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<li>\r\n                <div class=\"checkbox-container-small\">\r\n                    <label class=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"${el}\" name=\"${el}\" value=\"${el}\">\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                    <label class=\"label-text\" for=\"${el}\">${el}</label>\r\n                </div>\r\n            </li>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (filterLangList.length > 0) {\r\n        filterLangList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        // rowHeight = filterLangList.length * 21 + 3;\r\n        // if (getMobileOperatingSystem() === \"unknown\") {\r\n            // langLoc.style.height = String(rowHeight) + \"px\";\r\n        // } else if (isSamsungBrowser || isChromeBrowser) {\r\n        //     langLoc.style.height = \"50px\";\r\n        // } else {\r\n        //     langLoc.style.height = String(rowHeight) + \"px\";\r\n        // }\r\n        filterLangList.forEach(function (el) {\r\n            langLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<li>\r\n                <div class=\"checkbox-container-small\">\r\n                    <label class=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"${el}\" name=\"${el}\" value=\"${el}\">\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                    <label class=\"label-text\" for=\"${el}\">${el}</label>\r\n                </div>\r\n            </li>`\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n    if (Object.keys(filterCountriesList).length > 0) {\r\n        // countriesLoc.insertAdjacentHTML(\r\n        //     \"beforeend\",\r\n        //     `<option value=\"\" class=\"placeholder\">Państwo</option>`\r\n        // );\r\n\r\n        // citiesLoc.insertAdjacentHTML(\r\n        //     \"beforeend\",\r\n        //     `<option value=\"\" class=\"placeholder\">Miasto</option>`\r\n        // );\r\n\r\n        function compare(a, b) {\r\n            return a.city.localeCompare(b.city);\r\n        }\r\n\r\n        for (let key in filterCountriesList) {\r\n            filterCountriesList[key].sort(compare);\r\n        }\r\n\r\n        filterCountriesList = Object.keys(filterCountriesList)\r\n            .sort()\r\n            .reduce((accumulator, key) => {\r\n                accumulator[key] = filterCountriesList[key];\r\n                return accumulator;\r\n            }, {});\r\n\r\n        let allCitiesObj = [];\r\n        for (let key in filterCountriesList) {\r\n            // countriesLoc.insertAdjacentHTML(\r\n            //     \"beforeend\",\r\n            //     `<option value=\"${key}\">${key}</option>`\r\n            // );\r\n            allCitiesObj = allCitiesObj.concat(filterCountriesList[key]);\r\n        }\r\n\r\n        let allCitiesArray = [];\r\n        allCitiesObj.forEach((el) => {\r\n            allCitiesArray.push(el.city);\r\n        });\r\n\r\n        allCitiesArray.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n\r\n        allCitiesArray.forEach(function (el) {\r\n            citiesLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<li>\r\n                <div class=\"checkbox-container-small\">\r\n                    <label class=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"${el}\" name=\"${el}\" value=\"${el}\">\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                    <label class=\"label-text\" for=\"${el}\">${el}</label>\r\n                </div>\r\n            </li>`\r\n            );\r\n        });\r\n    }\r\n\r\n    // sliderOne.min = filterMinSalary.toString();\r\n    // sliderTwo.min = filterMinSalary.toString();\r\n    // sliderOne.max = filterMaxSalary.toString();\r\n    // sliderTwo.max = filterMaxSalary.toString();\r\n    // sliderOne.value = filterMinSalary.toString();\r\n    // sliderTwo.value = filterMaxSalary.toString();\r\n    // slideOne();\r\n    // slideTwo();\r\n};\r\n\r\n// PAGES /////////////////////////////////////////////////////////////\r\nconst changePage = (pageBtn) => {\r\n    pageButtonsLoc.forEach((el) => {\r\n        el.classList.remove(\"active\");\r\n    });\r\n    pageBtn.classList.add(\"active\");\r\n    let firstRecord =\r\n        recordsOnPage * parseInt(pageBtn.innerText) - recordsOnPage;\r\n    let lastRecord = recordsOnPage * parseInt(pageBtn.innerText);\r\n\r\n    filtersON\r\n        ? createRecordBoxes(filteredRecordsArray_11, firstRecord, lastRecord)\r\n        : createRecordBoxes(allRecordsArray, firstRecord, lastRecord);\r\n    globActivePageNo = parseInt(pageBtn.innerText);\r\n    // setTimeout(setParentIframeHeight(), 500);\r\n};\r\n\r\nlet globActivePageNo;\r\n\r\nconst movePrevPagesBtns = () => {\r\n    let firstDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).shift().innerText\r\n    );\r\n    let lastDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).pop().innerText\r\n    );\r\n\r\n    let activePageNo;\r\n    activePageNo = document.querySelector(\".page.active\");\r\n\r\n    if (activePageNo) {\r\n        activePageNo = parseInt(activePageNo.innerText);\r\n    }\r\n\r\n    if (firstDispalyedPageNo > 1) {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (let n = firstDispalyedPageNo - 1; n <= lastDispalyedPageNo - 1; n++) {\r\n            if (!activePageNo) {\r\n                activePageNo = globActivePageNo;\r\n            }\r\n            if (activePageNo && n === activePageNo) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n\r\n        if (lastDispalyedPageNo < pagesQuantityCalc + 1) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next active\"><img src=\"./img/chevron-right.svg\" alt=\"\" /></div>`\r\n            );\r\n            let nextBtnLoc = document.querySelector(\".next\");\r\n            nextBtnLoc.addEventListener(\"click\", () => {\r\n                moveNextPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        if (firstDispalyedPageNo > 2) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev active\"><img src=\"./img/chevron-left.svg\" alt=\"\" /></div>`\r\n            );\r\n            let prevBtnLoc = document.querySelector(\".prev\");\r\n            prevBtnLoc.addEventListener(\"click\", () => {\r\n                movePrevPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        pageButtonsLoc = document.querySelectorAll(\".page\");\r\n        pageButtonsLoc.forEach((el) => {\r\n            el.addEventListener(\"click\", (e) => {\r\n                changePage(e.target);\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nconst moveNextPagesBtns = () => {\r\n    let firstDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).shift().innerText\r\n    );\r\n    let lastDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).pop().innerText\r\n    );\r\n\r\n    let activePageNo;\r\n    activePageNo = document.querySelector(\".page.active\");\r\n    if (activePageNo) {\r\n        activePageNo = parseInt(activePageNo.innerText);\r\n        globActivePageNo = activePageNo;\r\n    }\r\n\r\n    if (lastDispalyedPageNo < pagesQuantityCalc) {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (let n = firstDispalyedPageNo + 1; n <= lastDispalyedPageNo + 1; n++) {\r\n            if (!activePageNo) {\r\n                activePageNo = globActivePageNo;\r\n            }\r\n            if (activePageNo && n === activePageNo) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n\r\n        if (lastDispalyedPageNo < pagesQuantityCalc - 1) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next active\"><img src=\"./img/chevron-right.svg\" alt=\"\" /></div>`\r\n            );\r\n            let nextBtnLoc = document.querySelector(\".next\");\r\n            nextBtnLoc.addEventListener(\"click\", () => {\r\n                moveNextPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        if (firstDispalyedPageNo > 0) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev active\"><img src=\"./img/chevron-left.svg\" alt=\"\" /></div>`\r\n            );\r\n            let prevBtnLoc = document.querySelector(\".prev\");\r\n            prevBtnLoc.addEventListener(\"click\", () => {\r\n                movePrevPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        pageButtonsLoc = document.querySelectorAll(\".page\");\r\n        pageButtonsLoc.forEach((el) => {\r\n            el.addEventListener(\"click\", (e) => {\r\n                changePage(e.target);\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\n// RWD /////////////////////////////////////////////////////////////\r\nfunction getWidth() {\r\n    return Math.max(\r\n        document.body.scrollWidth,\r\n        document.documentElement.scrollWidth,\r\n        document.body.offsetWidth,\r\n        document.documentElement.offsetWidth,\r\n        document.documentElement.clientWidth\r\n    );\r\n}\r\n\r\nfunction getHeight() {\r\n    return Math.max(\r\n        document.body.scrollHeight,\r\n        document.documentElement.scrollHeight,\r\n        document.body.offsetHeight,\r\n        document.documentElement.offsetHeight,\r\n        document.documentElement.clientHeight\r\n    );\r\n}\r\n\r\nlet pagesQuantityCalc;\r\n\r\nconst setPages = (recordsNumber) => {\r\n    pagesQuantityCalc = Math.ceil(recordsNumber / recordsOnPage);\r\n\r\n    if (pagesQuantityCalc > maxPageBtns) {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (let n = 1; n <= maxPageBtns; n++) {\r\n            if (n === 1) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n        pagesSwitchLoc.insertAdjacentHTML(\r\n            \"beforeend\",\r\n            `<div class=\"next active\"><img src=\"./img/chevron-right.svg\" alt=\"\" /></div>`\r\n        );\r\n        let nextBtnLoc = document.querySelector(\".next\");\r\n        nextBtnLoc.addEventListener(\"click\", () => {\r\n            moveNextPagesBtns();\r\n        });\r\n    } else {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (let n = 1; n <= pagesQuantityCalc; n++) {\r\n            if (n === 1) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n\r\n        pagesSwitchLoc.insertAdjacentHTML(\r\n            \"beforeend\",\r\n            `<div class=\"next\"><img src=\"\" alt=\"\" /></div>`\r\n        );\r\n    }\r\n\r\n    pagesSwitchLoc.insertAdjacentHTML(\r\n        \"afterbegin\",\r\n        `<div class=\"prev\"><img src=\"\" alt=\"\" /></div>`\r\n    );\r\n\r\n    pageButtonsLoc = document.querySelectorAll(\".page\");\r\n    pageButtonsLoc.forEach((el) => {\r\n        el.addEventListener(\"click\", (e) => {\r\n            changePage(e.target);\r\n        });\r\n    });\r\n};\r\n\r\nlet maxPageBtns;\r\n\r\nconst setPagesBtnQuantity = () => {\r\n   \r\n    if (getWidth() < 500) {\r\n        maxPageBtns = 3;\r\n    }\r\n    if (getWidth() >= 500 && getWidth() < 650) {\r\n        maxPageBtns = 3;\r\n    }\r\n    if (getWidth() >= 650 && getWidth() < 750) {\r\n        maxPageBtns = 4;\r\n    }\r\n    if (getWidth() >= 750 && getWidth() < 950) {\r\n        maxPageBtns = 7;\r\n    }\r\n    if (getWidth() >= 950 && getWidth() < 1200) {\r\n        maxPageBtns = 12;\r\n    }\r\n    if (getWidth() >= 1200) {\r\n        maxPageBtns = 15;\r\n    }\r\n\r\n    setPages(recordsNumber);\r\n\r\n}\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n    setPagesBtnQuantity();\r\n});\r\n\r\nsetPagesBtnQuantity();\r\n\r\n// create AWARDED RECORDS BOXES ///////////////////////////////////////////////\r\nconst createAwardedRecordBoxes = (recordsArray, filterConfigData) => {\r\n\r\n    awardedResultsLoc.replaceChildren();\r\n\r\n    let awardedRecordsArray = recordsArray.filter((elem) => {\r\n        return elem.awarded;  \r\n    });\r\n\r\n    if (awardedRecordsArray.length > 0) {\r\n\r\n        if (filterConfigData.remote_filter) {\r\n            awardedRecordsArray = awardedRecordsArray.filter((elem) => {\r\n                return elem.remote;\r\n            });\r\n        }\r\n        \r\n        if (filterConfigData.language_filter.length > 0) {\r\n            filterAwarded(filterConfigData.language_filter, awardedRecordsArray, \"lang\");\r\n        }\r\n\r\n        if (filterConfigData.branche_filter.length > 0) {\r\n            filterAwarded(filterConfigData.branche_filter, awardedRecordsArray, \"branche\");\r\n        }\r\n\r\n        if (filterConfigData.location_country_filter.length > 0) {\r\n            filterAwarded(filterConfigData.location_country_filter, awardedRecordsArray, \"country\");\r\n        }\r\n\r\n        if (filterConfigData.location_city_filter.length > 0) {\r\n            filterAwarded(filterConfigData.location_city_filter, awardedRecordsArray, \"city\");\r\n        }\r\n\r\n        if (filterConfigData.recruitmentType_filter.length > 0) {\r\n            filterAwarded(filterConfigData.recruitmentType_filter, awardedRecordsArray, \"recruitmentType\");\r\n        }\r\n\r\n        for (let i = firstRecordNumber; i < 10; i++) {\r\n            if (awardedRecordsArray[i]) {\r\n                let borderColorClass = \"\";\r\n                let textColorClass = \"\";\r\n\r\n                if (awardedRecordsArray[i].recruitmentType === \"PT\") {\r\n                    borderColorClass = \"pt-border\";\r\n                    textColorClass = \"pt-text\";\r\n                }\r\n                if (awardedRecordsArray[i].recruitmentType === \"RS\") {\r\n                    borderColorClass = \"rs-border\";\r\n                    textColorClass = \"rs-text\";\r\n                }\r\n                if (awardedRecordsArray[i].recruitmentType === \"WEW\") {\r\n                    borderColorClass = \"wew-border\";\r\n                    textColorClass = \"wew-text\";\r\n                }\r\n\r\n                let formaZatrudnienia = \"\";\r\n\r\n                if (awardedRecordsArray[i].jobForm) {\r\n                    awardedRecordsArray[i].jobForm.forEach(function (elem) {\r\n                        formaZatrudnienia =\r\n                            formaZatrudnienia + \"<p>\" + elem + \"</p>\";\r\n                    });\r\n                }\r\n\r\n                awardedResultsLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<a href=\"${\r\n                        awardedRecordsArray[i].url\r\n                    }\" target=\"_blank\"><div class=\"result ${borderColorClass}\">\r\n                <div class=\"top\">\r\n                \r\n                        <div class=\"lang\">\r\n                            <p>${awardedRecordsArray[i].lang}</p>\r\n                        </div>\r\n                        <div class=\"branche-name\">\r\n                            <div class=\"branche\">${\r\n                                awardedRecordsArray[i].branche\r\n                                    ? awardedRecordsArray[i].branche\r\n                                    : \"\"\r\n                            }</div>\r\n                            <div class=\"name ${textColorClass}\">${\r\n                        awardedRecordsArray[i].name\r\n                    }</div>\r\n                        </div>\r\n                    \r\n                </div>\r\n\r\n                <div class=\"bottom\">\r\n                    <div class=\"city-container\">\r\n                        <div class=\"city\"><img src=\"./img/location_dot.svg\">${\r\n                            awardedRecordsArray[i].city\r\n                        }</div></div>\r\n                        <div class=\"details-container\">\r\n                        ${\r\n                            awardedRecordsArray[i].remote\r\n                                ? \"<div class='remote'>zdalna</div>\"\r\n                                : \"\"\r\n                        }\r\n                        ${\r\n                            awardedRecordsArray[i].relocation\r\n                                ? \"<div class='relocation'>relocation</div>\"\r\n                                : \"\"\r\n                        }\r\n                        ${\r\n                            awardedRecordsArray[i].jobType\r\n                                ? \"<div class='jobtype'>\" +\r\n                                awardedRecordsArray[i].jobType +\r\n                                \"</div>\"\r\n                                : \"\"\r\n                        }\r\n                        ${\r\n                            awardedRecordsArray[i].visibleRate\r\n                                ? awardedRecordsArray[i].salaryFrom &&\r\n                                awardedRecordsArray[i].salaryTo\r\n                                    ? \"<div class='salary'>\" +\r\n                                    awardedRecordsArray[i].salaryFrom +\r\n                                    \" - \" +\r\n                                    awardedRecordsArray[i].salaryTo +\r\n                                    \"</div>\"\r\n                                    : \"\"\r\n                                : \"\"\r\n                        }\r\n                        <div class=\"employmentform\">${formaZatrudnienia}</div>\r\n                        </div>\r\n                    \r\n                </div>\r\n\r\n                <div class=\"ribbon-wrap\">\r\n                        <div class=\"ribbon\">\r\n                                <img src=\"./img/star.svg\" alt=\"\">\r\n                                <img src=\"./img/star.svg\" alt=\"\">\r\n                                <img src=\"./img/star.svg\" alt=\"\">\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n\r\n            </div></a>`\r\n                );\r\n            }\r\n        }\r\n    } else {\r\n        awardedResultsLoc.style.margin = \"0\"\r\n    }\r\n};\r\n\r\n// show RECORDS NUMBER ///////////////////////////////////////////////\r\nconst summariseDownload = (recordsNumber) => {\r\n    recNumLoc.innerText = `Znaleziono ${recordsNumber} ogłoszeń`;\r\n    if (!recordsNumber) {\r\n        noResultsLoc.classList.add(\"active\");\r\n    } else {\r\n        noResultsLoc.classList.remove(\"active\");\r\n    }\r\n};\r\n\r\n// create FILTER DATA from API data ///////////////////////////////////////////////\r\nconst createDataForFilters = (\r\n    branche,\r\n    jobForm,\r\n    jobType,\r\n    lang,\r\n    visibleRate,\r\n    salaryFrom,\r\n    salaryTo,\r\n    country,\r\n    city,\r\n    lati,\r\n    longi\r\n) => {\r\n   \r\n    if (filterBranchesList.indexOf(branche) === -1 && branche !== undefined) {\r\n        if (filterConfigData.branche_filter.length) {\r\n            if (filterConfigData.branche_filter.indexOf(branche) !== -1) {\r\n                filterBranchesList.push(branche);\r\n            }\r\n        } else {\r\n            filterBranchesList.push(branche);\r\n        }\r\n    }\r\n\r\n    if (jobForm) {\r\n        jobForm.forEach(function (elem) {\r\n            if (filterJobFormList.indexOf(elem) === -1) {\r\n                filterJobFormList.push(elem);\r\n            }\r\n        });\r\n    }\r\n\r\n    if (filterJobTypeList.indexOf(jobType) === -1 && jobType !== undefined) {\r\n        filterJobTypeList.push(jobType);\r\n    }\r\n\r\n    if (filterLangList.indexOf(lang) === -1) {\r\n\r\n        if (filterConfigData.language_filter.length) {\r\n            if (filterConfigData.language_filter.indexOf(lang) !== -1) {\r\n                filterLangList.push(lang);\r\n            }\r\n        } else {\r\n            filterLangList.push(lang);\r\n        }\r\n    }\r\n\r\n    // if (visibleRate) {\r\n    //     if (salaryFrom < filterMinSalary) {\r\n    //         filterMinSalary = salaryFrom;\r\n    //     }\r\n    //     if (salaryTo > filterMaxSalary) {\r\n    //         filterMaxSalary = salaryTo;\r\n    //     }\r\n    // }\r\n\r\n    if (filterConfigData.location_country_filter.length) {\r\n        \r\n        if (filterConfigData.location_country_filter.indexOf(country) !== -1) {\r\n            if (filterCountriesList[country]) {\r\n                if (\r\n                    filterCountriesList[country].findIndex(\r\n                        (arr_el) => arr_el.city === city\r\n                    ) === -1\r\n                ) {\r\n                    if (filterConfigData.location_city_filter.length) {\r\n                        if (filterConfigData.location_city_filter.indexOf(city) !== -1) {\r\n                            filterCountriesList[country].push({\r\n                                city: city,\r\n                                lati: lati,\r\n                                longi: longi,\r\n                            });\r\n                        }\r\n                    } else {\r\n                        filterCountriesList[country].push({\r\n                            city: city,\r\n                            lati: lati,\r\n                            longi: longi,\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                filterCountriesList[country] = [];\r\n                if (filterConfigData.location_city_filter.length) {\r\n                    if (filterConfigData.location_city_filter.indexOf(city) !== -1) {\r\n                        filterCountriesList[country].push({\r\n                            city: city,\r\n                            lati: lati,\r\n                            longi: longi,\r\n                        });\r\n                    }\r\n                } else {\r\n                    filterCountriesList[country].push({\r\n                        city: city,\r\n                        lati: lati,\r\n                        longi: longi,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    } else {\r\n        \r\n        if (filterCountriesList[country]) {\r\n            if (\r\n                filterCountriesList[country].findIndex(\r\n                    (arr_el) => arr_el.city === city\r\n                ) === -1\r\n            ) {\r\n                filterCountriesList[country].push({\r\n                    city: city,\r\n                    lati: lati,\r\n                    longi: longi,\r\n                });\r\n            }\r\n        } else {\r\n            filterCountriesList[country] = [];\r\n            filterCountriesList[country].push({\r\n                city: city,\r\n                lati: lati,\r\n                longi: longi,\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n// create OBJECTS ARRAY from Raw API JSON ///////////////////////////////////////////////\r\nconst reworkData = (rawAPIArray) => {\r\n    rawAPIArray.forEach((el) => {\r\n\r\n        let parsedJobLocation;\r\n        if (el.options.job_location) {\r\n            parsedJobLocation = JSON.parse(el.options.job_location);\r\n        }\r\n\r\n        allRecordsArray.push({\r\n            url: el.url,\r\n            name: el.advert.name,\r\n            branche: el.options.branches,\r\n            lang: el.advert.language,\r\n            jobType: el.options.job_type,\r\n            visibleRate: parseInt(el.options._Widoczna_stawka),\r\n            salaryFrom: parseInt(el.options._spodziewane_wynagrodzenie_od),\r\n            salaryTo: parseInt(el.options._spodziewane_wynagrodzenie_do),\r\n            remote: el.options.remote,\r\n            relocation: el.options._relokacja,\r\n            recruitmentType: el.options._rekrutacja_rodzaj,\r\n            jobForm: el.options._forma_zatrudnienia,\r\n            country: parsedJobLocation.country,\r\n            city: parsedJobLocation.locality,\r\n            lati: parseFloat(parsedJobLocation.latitude),\r\n            longi: parseFloat(parsedJobLocation.longitude),\r\n            description: el.advert.values,\r\n            awarded: el.awarded,\r\n        });\r\n\r\n        createDataForFilters(\r\n            el.options.branches,\r\n            el.options._forma_zatrudnienia,\r\n            el.options.job_type,\r\n            el.advert.language,\r\n            parseInt(el.options._Widoczna_stawka),\r\n            parseInt(el.options._spodziewane_wynagrodzenie_od),\r\n            parseInt(el.options._spodziewane_wynagrodzenie_do),\r\n            parsedJobLocation.country,\r\n            parsedJobLocation.locality,\r\n            parseFloat(parsedJobLocation.latitude),\r\n            parseFloat(parsedJobLocation.longitude)\r\n        );\r\n    });\r\n};\r\n\r\n// gets DATA FROM API ///////////////////////////////////////////////\r\nconst getAPI = (apiPage) => {\r\n    const response = fetch(\r\n        \"https://grupaprogres.traffit.com/public/job_posts/published\",\r\n        {\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-Request-Page-Size\": \"100\",\r\n                \"X-Request-Current-Page\": apiPage,\r\n                \"X-Request-Sort\": '{\"sort_by\": \"id\", \"direction\": \"ASC\"}',\r\n            },\r\n        }\r\n    );\r\n\r\n    return response;\r\n};\r\n\r\nconst loopOnAPI = (jsonData, filterConfigData) => {\r\n    if (jsonData.length > 0) {\r\n        rawAPIArray = rawAPIArray.concat(jsonData);\r\n        apiPage++;\r\n        createRecordsObjFromAPI(apiPage, filterConfigData);\r\n    } else {\r\n        reworkData(rawAPIArray);\r\n        recordsNumber = rawAPIArray.length;\r\n        // summariseDownload(recordsNumber);\r\n        createAwardedRecordBoxes(allRecordsArray, filterConfigData);\r\n        setPages(recordsNumber);\r\n        createFilterLists(filterConfigData);\r\n        addListenerToFilterListsElements();\r\n        // dropDownBtnStart();\r\n        // pagesContainerStart();\r\n        createFilteredRecordsArray();\r\n    }\r\n};\r\n\r\nasync function createRecordsObjFromAPI(apiPage, filterConfigData) {\r\n    const rawData = await getAPI(apiPage);\r\n    const jsonData = await rawData.json();\r\n    loopOnAPI(jsonData, filterConfigData);\r\n}\r\n\r\n// consider configuration filters ////////////////////////\r\nconst getConfigFilter = () => {\r\n    const response = fetch(\"./config/config.json\");\r\n    return response;\r\n};\r\n\r\nasync function readConfigFilter() {\r\n    try {\r\n        const rawData = await getConfigFilter();\r\n        filterConfigData = await rawData.json();\r\n        createRecordsObjFromAPI(apiPage, filterConfigData);\r\n    } catch (e) {\r\n        console.error(e);\r\n        createRecordsObjFromAPI(apiPage);\r\n    }\r\n}\r\n\r\nreadConfigFilter();\r\n\r\n// change RECORDS QUANTITY ON PAGE //////////////////////////////////////////////////\r\nrecordsOnPageLoc.addEventListener(\"change\", (e) => {\r\n    recordsOnPage = parseInt(e.target.value);\r\n\r\n    filtersON\r\n        ? createRecordBoxes(filteredRecordsArray_11, 0, recordsOnPage)\r\n        : createRecordBoxes(allRecordsArray, 0, recordsOnPage);\r\n    setPages(recordsNumber);\r\n\r\n    // setParentIframeHeight();\r\n});\r\n\r\n// SEARCH LISTENER /////////////////////////////////////////////////////////////\r\nsearchBtn.addEventListener(\"click\", createFilteredRecordsArray);\r\n\r\nadvancedSearchBar.addEventListener(\"click\", () => {\r\n    advancedContainer.classList.toggle(\"showed\");\r\n    advancedSearchBtn.classList.toggle(\"rotate180\");\r\n})\r\n\r\nconst clearAllFiltersLoc = document.querySelector(\".clear-all-filters\")\r\n\r\nclearAllFiltersLoc.addEventListener(\"click\", () => {\r\n    // selectedOptionsInFilterArray = [[],[],[],[],[],[]];\r\n    // setClearBtn()\r\n\r\n\r\n    filterListLocArray.forEach((elem, index) => {\r\n\r\n        const clearBtn = elem.querySelector(\".clear-btn\");\r\n        const filtersQuantityBtn = elem.querySelector(\".filters-quantity\");\r\n        const filtersSelectedOptions = elem.querySelector(\".selected-options\");\r\n        const filtersListTitle = elem.querySelector(\".list-title\");\r\n\r\n        selectedOptionsInFilterArray[index] = [];\r\n        clearBtn.style.opacity = \"0\";\r\n        elem.querySelectorAll(\"input\").forEach((el) => {\r\n            el.checked = false;\r\n        })\r\n        filtersSelectedOptions.innerText = \"\";\r\n        filtersListTitle.classList.remove(\"mini\");\r\n        filtersQuantityBtn.style.opacity = \"0\";\r\n    })\r\n\r\n    jobInputLoc.value = \"\";\r\n    jobLabelLoc.classList.remove(\"mini\");\r\n    jobInputLoc.classList.remove(\"active\");\r\n    jobClearBtnLoc.style.opacity = \"0\";\r\n    jobClearBtnLoc.style.display = \"none\";\r\n\r\n    distanceLoc.querySelectorAll(\"input\").forEach((elem) => {\r\n        elem.checked = false;\r\n    })\r\n    distanceListTitleLoc.innerText = \"+0 km\";\r\n    createFilteredRecordsArray();\r\n});\r\n"]}