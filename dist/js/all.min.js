const cityLoc=document.querySelector(".city"),cityListBtnLoc=document.querySelector(".city .arrow-down"),cityListLoc=document.querySelector(".city .list"),distanceLoc=document.querySelector(".distance"),distanceListBtnLoc=document.querySelector(".distance .arrow-down"),distanceListLoc=document.querySelector(".distance .list"),sectorLoc=document.querySelector(".sector"),sectorListBtnLoc=document.querySelector(".sector .arrow-down"),sectorListLoc=document.querySelector(".sector .list"),employmentFormLoc=document.querySelector(".employment-form"),employmentFormListBtnLoc=document.querySelector(".employment-form .arrow-down"),employmentFormListLoc=document.querySelector(".employment-form .list"),workingHoursLoc=document.querySelector(".working-hours"),workingHoursListBtnLoc=document.querySelector(".working-hours .arrow-down"),workingHoursListLoc=document.querySelector(".working-hours .list"),languageLoc=document.querySelector(".language"),languageListBtnLoc=document.querySelector(".language .arrow-down"),languageListLoc=document.querySelector(".language .list"),awardedResultsLoc=document.querySelector(".awarded"),recordsOnPageLoc=document.querySelector(".records-on-page"),pagesSwitchLoc=document.querySelector(".pages"),brancheWrapperLoc=document.querySelector(".sector"),branchesLoc=document.querySelector(".sector ul"),jobFormLoc=document.querySelector(".employment-form ul"),jobTypeLoc=document.querySelector(".working-hours ul"),langLoc=document.querySelector(".language ul"),citiesLoc=document.querySelector(".city ul"),resultsLoc=document.querySelector(".results"),remoteLoc=document.querySelector("#remote"),relocationLoc=document.querySelector("#relocation"),searchInputLoc=document.querySelector(".job input"),distanceInputsLoc=document.querySelectorAll(".distance input"),distanceTitleLoc=document.querySelector(".distance .list-title"),searchBtn=document.querySelector(".search-btn"),advancedSearchBtn=document.querySelector(".advanced-search-btn .arrow-down"),advancedContainer=document.querySelector(".advanced-container");cityLoc.addEventListener("click",(()=>{cityListLoc.classList.toggle("expand"),cityListBtnLoc.classList.toggle("rotate180")})),distanceLoc.addEventListener("click",(()=>{distanceListLoc.classList.toggle("expand"),distanceListBtnLoc.classList.toggle("rotate180")})),sectorLoc.addEventListener("click",(()=>{sectorListLoc.classList.toggle("expand"),sectorListBtnLoc.classList.toggle("rotate180")})),employmentFormLoc.addEventListener("click",(()=>{employmentFormListLoc.classList.toggle("expand"),employmentFormListBtnLoc.classList.toggle("rotate180")})),workingHoursLoc.addEventListener("click",(()=>{workingHoursListLoc.classList.toggle("expand"),workingHoursListBtnLoc.classList.toggle("rotate180")})),languageLoc.addEventListener("click",(()=>{languageListLoc.classList.toggle("expand"),languageListBtnLoc.classList.toggle("rotate180")})),cityLoc.addEventListener("mouseleave",(()=>{cityListLoc.classList.remove("expand"),cityListBtnLoc.classList.remove("rotate180")})),distanceLoc.addEventListener("mouseleave",(()=>{distanceListLoc.classList.remove("expand"),distanceListBtnLoc.classList.remove("rotate180")})),sectorLoc.addEventListener("mouseleave",(()=>{sectorListLoc.classList.remove("expand"),sectorListBtnLoc.classList.remove("rotate180")})),employmentFormLoc.addEventListener("mouseleave",(()=>{employmentFormListLoc.classList.remove("expand"),employmentFormListBtnLoc.classList.remove("rotate180")})),workingHoursLoc.addEventListener("mouseleave",(()=>{workingHoursListLoc.classList.remove("expand"),workingHoursListBtnLoc.classList.remove("rotate180")})),languageLoc.addEventListener("mouseleave",(()=>{languageListLoc.classList.remove("expand"),languageListBtnLoc.classList.remove("rotate180")}));let filteredRecordsArray_11,filterConfigData={},apiPage=1,rawAPIArray=[],allRecordsArray=[],recordsNumber=0,recordsOnPage=20,filtersON=!1,filterBranchesList=[],filterJobFormList=[],filterJobTypeList=[],filterLangList=[],filterCountriesList={},filterListMaxHeight=0;distanceInputsLoc.forEach((e=>{e.addEventListener("change",(()=>{distanceTitleLoc.innerText=`+${Number(e.value)} km`,distanceTitleLoc.dataset.distance=Number(e.value)}))})),recordsOnPageLoc.value=recordsOnPage;const createRecordBoxes=(e,t,r)=>{for(resultsLoc.replaceChildren(),i=t;i<r;i++)if(e[i]){let t="",r="";filterConfigData.recruitmentType_colorOnly.length?(-1!==filterConfigData.recruitmentType_colorOnly.indexOf("PT")&&"PT"===e[i].recruitmentType&&(t="pt-border",r="pt-text"),-1!==filterConfigData.recruitmentType_colorOnly.indexOf("RS")&&"RS"===e[i].recruitmentType&&(t="rs-border",r="rs-text"),-1!==filterConfigData.recruitmentType_colorOnly.indexOf("WEW")&&"WEW"===e[i].recruitmentType&&(t="wew-border",r="wew-text")):("PT"===e[i].recruitmentType&&(t="pt-border",r="pt-text"),"RS"===e[i].recruitmentType&&(t="rs-border",r="rs-text"),"WEW"===e[i].recruitmentType&&(t="wew-border",r="wew-text"));let o="";e[i].jobForm&&e[i].jobForm.forEach((function(e){o=o+"<p>"+e+"</p>"})),resultsLoc.insertAdjacentHTML("beforeend",`<a href="${e[i].url}" target="_blank"><div class="result ${t}">\n            <div class="top">\n              \n                    <div class="lang"><p>${e[i].lang}</p></div>\n                    <div class="branche-name">\n                        <div class="branche">${e[i].branche?e[i].branche:""}</div>\n                        <div class="name ${r}">${e[i].name}</div>\n                   \n                </div>\n              \n            </div>\n\n            <div class="bottom">\n                <div class="city-container">\n                    <div class="city"><img src="./img/location_dot.svg">${e[i].city}</div>\n                    </div>\n                    <div class="details-container">\n                    ${e[i].jobType?"<div class='jobtype'>"+e[i].jobType+"</div>":""}\n                    ${e[i].visibleRate&&e[i].salaryFrom&&e[i].salaryTo?"<div class='salary'>"+e[i].salaryFrom+" - "+e[i].salaryTo+"</div>":""}\n                    ${e[i].remote?"<div class='remote'>zdalna</div>":""}\n                    ${e[i].relocation?"<div class='relocation'>relocation</div>":""}\n                    <div class="employmentform">${o}</div>\n                    </div>\n                </div>\n                   \n                </div>\n          \n\n        </div></a>`)}},createFilteredRecordsArray=()=>{const e=branchesLoc.querySelectorAll("li input"),t=jobFormLoc.querySelectorAll("li input"),r=jobTypeLoc.querySelectorAll("li input"),i=langLoc.querySelectorAll("li input"),o=citiesLoc.querySelectorAll("li input");let n=allRecordsArray,a=[];console.log(e),a=filterConfigData.branche_filter.length?filterConfigData.branche_filter:Array.from(e).filter((function(e){return e.checked})).map((function(e){return e.value})),console.log(a);let c=[];0!==a.length?n.forEach(((e,t)=>{let r=!1;a.forEach((t=>{e.branche===t&&(r=!0)})),r&&c.push(e)})):c=n,console.log("filteredRecordsArray_1",c);let l=[];console.log(t),l=Array.from(t).filter((function(e){return e.checked})).map((function(e){return e.value})),console.log(l);let s=[];0!==l.length?c.forEach(((e,t)=>{if(e.jobForm){let t=!1;l.forEach((r=>{-1!==e.jobForm.indexOf(r)&&(t=!0)})),t&&s.push(e)}})):s=c,console.log("filteredRecordsArray_2",s);let d=Array.from(r).filter((function(e){return e.checked})).map((function(e){return e.value})),u=[];0!==d.length?s.forEach(((e,t)=>{let r=!1;d.forEach((t=>{e.jobType===t&&(r=!0)})),r&&u.push(e)})):u=s;let f=[];f=filterConfigData.language_filter.length?filterConfigData.language_filter:Array.from(i).filter((function(e){return e.checked})).map((function(e){return e.value}));let g=[];0!==f.length?u.forEach(((e,t)=>{let r=!1;f.forEach((t=>{e.lang===t&&(r=!0)})),r&&g.push(e)})):g=u;let L=g,m=[];filterConfigData.location_city_filter.length?m=filterConfigData.location_city_filter:(m=Array.from(o).filter((function(e){if(e.value)return e.checked})).map((function(e){if(e.value)return e.value})),console.log(m),console.log(L));let p=[];if(m.length){let e,t,r,i,o,n,a=parseInt(distanceTitleLoc.dataset.distance);console.log(a),m.forEach((c=>{L.forEach(((l,s)=>{c===l.city&&(e=l.lati,t=l.longi,r=e-.009044*a,i=e+.009044*a,o=t-.0089831*a/Math.cos(e*Math.PI/180),n=t+.0089831*a/Math.cos(e*Math.PI/180))})),L.forEach(((e,t)=>{e.lati<=i&&e.lati>=r&&e.longi<=n&&e.longi>=o&&p.push(e)}))}))}else p=L;let h=[];remoteLoc.checked||filterConfigData.remote_filter?p.forEach(((e,t)=>{let r=!1;e.remote&&(r=!0),r&&h.push(e)})):h=p;let y=[];relocationLoc.checked?h.forEach(((e,t)=>{let r=!1;e.relocation&&(r=!0),r&&y.push(e)})):y=h;let v=[],b=searchInputLoc.value;b?y.forEach(((e,t)=>{let r,i=!1;e.description.forEach((function(e){e.value&&"geolocation"!==e.field_id&&(r=e.value.toLowerCase().search(b.toLowerCase()),-1!==r&&(i=!0))})),r=e.name.toLowerCase().search(b.toLowerCase()),-1!==r&&(i=!0),i&&v.push(e)})):v=y,filteredRecordsArray_11=[];let _=[];filterConfigData.recruitmentType_filter.length&&(_=filterConfigData.recruitmentType_filter),0!==_.length?v.forEach(((e,t)=>{let r=!1;_.forEach((t=>{e.recruitmentType===t&&(r=!0)})),r&&filteredRecordsArray_11.push(e)})):filteredRecordsArray_11=v,recordsNumber=filteredRecordsArray_11.length,createRecordBoxes(filteredRecordsArray_11,0,recordsOnPage),setPages(recordsNumber),filtersON=!0},pagesContainerStart=()=>{pagesContainer.classList.add("active")},dropDownBtnStart=()=>{dropDownLoc.addEventListener("click",showHideFilters),dropDownLoc.classList.add("active")},createFilterLists=e=>{if(e.branche_visible||brancheWrapperLoc.classList.add("unactive"),filterBranchesList.length>0&&(filterBranchesList.sort((function(e,t){return e.localeCompare(t)})),rowHeight=21*filterBranchesList.length+3,filterListMaxHeight=rowHeight,filterBranchesList.forEach((function(e){branchesLoc.insertAdjacentHTML("beforeend",`<li>\n                <div class="checkbox-container-small">\n                    <label class="checkbox">\n                        <input type="checkbox" id="${e}" name="${e}" value="${e}">\n                        <span class="checkmark"></span>\n                    </label>\n                    <label class="label-text" for="${e}">${e}</label>\n                </div>\n            </li>`)}))),filterJobFormList.length>0&&(filterJobFormList.sort((function(e,t){return e.localeCompare(t)})),rowHeight=21*filterJobFormList.length+3,filterJobFormList.forEach((function(e){jobFormLoc.insertAdjacentHTML("beforeend",`<li>\n                <div class="checkbox-container-small">\n                    <label class="checkbox">\n                        <input type="checkbox" id="${e}" name="${e}" value="${e}">\n                        <span class="checkmark"></span>\n                    </label>\n                    <label class="label-text" for="${e}">${e}</label>\n                </div>\n            </li>`)}))),filterJobTypeList.length>0&&(filterJobTypeList.sort((function(e,t){return e.localeCompare(t)})),rowHeight=21*filterJobTypeList.length+3,filterJobTypeList.forEach((function(e){jobTypeLoc.insertAdjacentHTML("beforeend",`<li>\n                <div class="checkbox-container-small">\n                    <label class="checkbox">\n                        <input type="checkbox" id="${e}" name="${e}" value="${e}">\n                        <span class="checkmark"></span>\n                    </label>\n                    <label class="label-text" for="${e}">${e}</label>\n                </div>\n            </li>`)}))),filterLangList.length>0&&(filterLangList.sort((function(e,t){return e.localeCompare(t)})),rowHeight=21*filterLangList.length+3,filterLangList.forEach((function(e){langLoc.insertAdjacentHTML("beforeend",`<li>\n                <div class="checkbox-container-small">\n                    <label class="checkbox">\n                        <input type="checkbox" id="${e}" name="${e}" value="${e}">\n                        <span class="checkmark"></span>\n                    </label>\n                    <label class="label-text" for="${e}">${e}</label>\n                </div>\n            </li>`)}))),console.log(filterCountriesList),Object.keys(filterCountriesList).length>0){function t(e,t){return e.city.localeCompare(t.city)}for(let o in filterCountriesList)filterCountriesList[o].sort(t);filterCountriesList=Object.keys(filterCountriesList).sort().reduce(((e,t)=>(e[t]=filterCountriesList[t],e)),{});let r=[];for(let n in filterCountriesList)r=r.concat(filterCountriesList[n]);let i=[];r.forEach((e=>{i.push(e.city)})),i.sort((function(e,t){return e.localeCompare(t)})),i.forEach((function(e){citiesLoc.insertAdjacentHTML("beforeend",`<li>\n                <div class="checkbox-container-small">\n                    <label class="checkbox">\n                        <input type="checkbox" id="${e}" name="${e}" value="${e}">\n                        <span class="checkmark"></span>\n                    </label>\n                    <label class="label-text" for="${e}">${e}</label>\n                </div>\n            </li>`)}))}},changePage=e=>{pageButtonsLoc.forEach((e=>{e.classList.remove("active")})),e.classList.add("active");let t=recordsOnPage*parseInt(e.innerText)-recordsOnPage,r=recordsOnPage*parseInt(e.innerText);createRecordBoxes(filtersON?filteredRecordsArray_11:allRecordsArray,t,r),globActivePageNo=parseInt(e.innerText)};function getWidth(){return Math.max(document.body.scrollWidth,document.documentElement.scrollWidth,document.body.offsetWidth,document.documentElement.offsetWidth,document.documentElement.clientWidth)}function getHeight(){return Math.max(document.body.scrollHeight,document.documentElement.scrollHeight,document.body.offsetHeight,document.documentElement.offsetHeight,document.documentElement.clientHeight)}let maxPageBtns,pagesQuantityCalc;getWidth()<500&&(maxPageBtns=6),getWidth()>=500&&getWidth()<700&&(maxPageBtns=8),getWidth()>700&&getWidth()<900&&(maxPageBtns=10),getWidth()>900&&getWidth()<1024&&(maxPageBtns=15),getWidth()>1024&&(maxPageBtns=20);const setPages=e=>{if(pagesQuantityCalc=Math.ceil(e/recordsOnPage),pagesQuantityCalc>maxPageBtns){for(pagesSwitchLoc.replaceChildren(),n=1;n<=maxPageBtns;n++)1===n?pagesSwitchLoc.insertAdjacentHTML("beforeend",`<div class="page active">${n}</div>`):pagesSwitchLoc.insertAdjacentHTML("beforeend",`<div class="page">${n}</div>`);pagesSwitchLoc.insertAdjacentHTML("beforeend",'<div class="next active"><img src="./img/chevron-right.svg" alt="" /></div>'),document.querySelector(".next").addEventListener("click",(()=>{moveNextPagesBtns()}))}else{for(pagesSwitchLoc.replaceChildren(),n=1;n<=pagesQuantityCalc;n++)1===n?pagesSwitchLoc.insertAdjacentHTML("beforeend",`<div class="page active">${n}</div>`):pagesSwitchLoc.insertAdjacentHTML("beforeend",`<div class="page">${n}</div>`);pagesSwitchLoc.insertAdjacentHTML("beforeend",'<div class="next"><img src="" alt="" /></div>')}pagesSwitchLoc.insertAdjacentHTML("afterbegin",'<div class="prev"><img src="" alt="" /></div>'),pageButtonsLoc=document.querySelectorAll(".page"),pageButtonsLoc.forEach((e=>{e.addEventListener("click",(e=>{changePage(e.target)}))}))},createAwardedRecordBoxes=(e,t)=>{awardedResultsLoc.replaceChildren();let r=e.filter((e=>e.awarded));if(console.log(r),r.length>0){for(t.remote_filter&&(r=r.filter((e=>e.remote))),t.language_filter.length>0&&filterAwarded(t.language_filter,r,"lang"),t.branche_filter.length>0&&filterAwarded(t.branche_filter,r,"branche"),t.location_country_filter.length>0&&filterAwarded(t.location_country_filter,r,"country"),t.location_city_filter.length>0&&filterAwarded(t.location_city_filter,r,"city"),t.recruitmentType_filter.length>0&&filterAwarded(t.recruitmentType_filter,r,"recruitmentType"),i=firstRecordNumber;i<10;i++)if(r[i]){let e="",t="";"PT"===r[i].recruitmentType&&(e="pt-border",t="pt-text"),"RS"===r[i].recruitmentType&&(e="rs-border",t="rs-text"),"WEW"===r[i].recruitmentType&&(e="wew-border",t="wew-text");let o="";r[i].jobForm&&r[i].jobForm.forEach((function(e){o=o+"<p>"+e+"</p>"})),awardedResultsLoc.insertAdjacentHTML("beforeend",`<a href="${r[i].url}" target="_blank"><div class="result ${e}">\n                <div class="top">\n                \n                        <div class="lang">\n                            <p>${r[i].lang}</p>\n                        </div>\n                        <div class="branche-name">\n                            <div class="branche">${r[i].branche?r[i].branche:""}</div>\n                            <div class="name ${t}">${r[i].name}</div>\n                        </div>\n                    \n                </div>\n\n                <div class="bottom">\n                    <div class="city-container">\n                        <div class="city"><img src="./img/location_dot.svg">${r[i].city}</div></div>\n                        <div class="details-container">\n                        ${r[i].remote?"<div class='remote'>zdalna</div>":""}\n                        ${r[i].relocation?"<div class='relocation'>relocation</div>":""}\n                        ${r[i].jobType?"<div class='jobtype'>"+r[i].jobType+"</div>":""}\n                        ${r[i].visibleRate&&r[i].salaryFrom&&r[i].salaryTo?"<div class='salary'>"+r[i].salaryFrom+" - "+r[i].salaryTo+"</div>":""}\n                        <div class="employmentform">${o}</div>\n                        </div>\n                    \n                </div>\n\n                <div class="ribbon-wrap">\n                        <div class="ribbon">\n                                <img src="./img/star.svg" alt="">\n                                <img src="./img/star.svg" alt="">\n                                <img src="./img/star.svg" alt="">\n                            </div>\n                        </div>\n                </div>\n\n                \n\n            </div></a>`)}}else awardedResultsLoc.style.margin="0"},summariseDownload=e=>{recNumLoc.innerText=`Znaleziono ${e} ogłoszeń`,e?noResultsLoc.classList.remove("active"):noResultsLoc.classList.add("active")},createDataForFilters=(e,t,r,i,o,n,a,c,l,s,d)=>{-1===filterBranchesList.indexOf(e)&&void 0!==e&&(filterConfigData.branche_filter.length?-1!==filterConfigData.branche_filter.indexOf(e)&&filterBranchesList.push(e):filterBranchesList.push(e)),t&&t.forEach((function(e){-1===filterJobFormList.indexOf(e)&&filterJobFormList.push(e)})),-1===filterJobTypeList.indexOf(r)&&void 0!==r&&filterJobTypeList.push(r),-1===filterLangList.indexOf(i)&&(filterConfigData.language_filter.length?-1!==filterConfigData.language_filter.indexOf(i)&&filterLangList.push(i):filterLangList.push(i)),filterConfigData.location_country_filter.length?-1!==filterConfigData.location_country_filter.indexOf(c)&&(filterCountriesList[c]?-1===filterCountriesList[c].findIndex((e=>e.city===l))&&(filterConfigData.location_city_filter.length?-1!==filterConfigData.location_city_filter.indexOf(l)&&filterCountriesList[c].push({city:l,lati:s,longi:d}):filterCountriesList[c].push({city:l,lati:s,longi:d})):(filterCountriesList[c]=[],filterConfigData.location_city_filter.length?-1!==filterConfigData.location_city_filter.indexOf(l)&&filterCountriesList[c].push({city:l,lati:s,longi:d}):filterCountriesList[c].push({city:l,lati:s,longi:d}))):filterCountriesList[c]?-1===filterCountriesList[c].findIndex((e=>e.city===l))&&filterCountriesList[c].push({city:l,lati:s,longi:d}):(filterCountriesList[c]=[],filterCountriesList[c].push({city:l,lati:s,longi:d}))},reworkData=e=>{e.forEach((e=>{var t,r,i,o,n,a,c,l;e.options.job_location&&(parsedJobLocation=JSON.parse(e.options.job_location)),allRecordsArray.push({url:e.url,name:e.advert.name,branche:e.options.branches,lang:e.advert.language,jobType:e.options.job_type,visibleRate:parseInt(e.options._Widoczna_stawka),salaryFrom:parseInt(e.options._spodziewane_wynagrodzenie_od),salaryTo:parseInt(e.options._spodziewane_wynagrodzenie_do),remote:e.options.remote,relocation:e.options._relokacja,recruitmentType:e.options._rekrutacja_rodzaj,jobForm:e.options._forma_zatrudnienia,country:parsedJobLocation.country,city:parsedJobLocation.locality,lati:parseFloat(parsedJobLocation.latitude),longi:parseFloat(parsedJobLocation.longitude),description:e.advert.values,awarded:e.awarded}),t=e.options.branches,r=e.options._forma_zatrudnienia,i=e.options.job_type,o=e.advert.language,parseInt(e.options._Widoczna_stawka),parseInt(e.options._spodziewane_wynagrodzenie_od),parseInt(e.options._spodziewane_wynagrodzenie_do),n=parsedJobLocation.country,a=parsedJobLocation.locality,c=parseFloat(parsedJobLocation.latitude),l=parseFloat(parsedJobLocation.longitude),-1===filterBranchesList.indexOf(t)&&void 0!==t&&(filterConfigData.branche_filter.length?-1!==filterConfigData.branche_filter.indexOf(t)&&filterBranchesList.push(t):filterBranchesList.push(t)),r&&r.forEach((function(e){-1===filterJobFormList.indexOf(e)&&filterJobFormList.push(e)})),-1===filterJobTypeList.indexOf(i)&&void 0!==i&&filterJobTypeList.push(i),-1===filterLangList.indexOf(o)&&(filterConfigData.language_filter.length?-1!==filterConfigData.language_filter.indexOf(o)&&filterLangList.push(o):filterLangList.push(o)),filterConfigData.location_country_filter.length?-1!==filterConfigData.location_country_filter.indexOf(n)&&(filterCountriesList[n]?-1===filterCountriesList[n].findIndex((e=>e.city===a))&&(filterConfigData.location_city_filter.length?-1!==filterConfigData.location_city_filter.indexOf(a)&&filterCountriesList[n].push({city:a,lati:c,longi:l}):filterCountriesList[n].push({city:a,lati:c,longi:l})):(filterCountriesList[n]=[],filterConfigData.location_city_filter.length?-1!==filterConfigData.location_city_filter.indexOf(a)&&filterCountriesList[n].push({city:a,lati:c,longi:l}):filterCountriesList[n].push({city:a,lati:c,longi:l}))):filterCountriesList[n]?-1===filterCountriesList[n].findIndex((e=>e.city===a))&&filterCountriesList[n].push({city:a,lati:c,longi:l}):(filterCountriesList[n]=[],filterCountriesList[n].push({city:a,lati:c,longi:l}))}))},getAPI=e=>fetch("https://grupaprogres.traffit.com/public/job_posts/published",{mode:"cors",headers:{"Content-Type":"application/json","X-Request-Page-Size":"100","X-Request-Current-Page":e,"X-Request-Sort":'{"sort_by": "id", "direction": "ASC"}'}}),loopOnAPI=(e,t)=>{e.length>0?(rawAPIArray=rawAPIArray.concat(e),apiPage++,console.log("rawAPIArray",rawAPIArray),createRecordsObjFromAPI(apiPage,t)):(reworkData(rawAPIArray),console.log("allRecordsArray",allRecordsArray),recordsNumber=rawAPIArray.length,console.log("recordsNumber",recordsNumber),createAwardedRecordBoxes(allRecordsArray,t),setPages(recordsNumber),createFilterLists(t),createFilteredRecordsArray())};async function createRecordsObjFromAPI(e,t){const r=await getAPI(e),i=await r.json();loopOnAPI(i,t)}const getConfigFilter=()=>fetch("./config/config.json");async function readConfigFilter(){try{const e=await fetch("./config/config.json");filterConfigData=await e.json(),console.log("filterConfigData",filterConfigData),createRecordsObjFromAPI(apiPage,filterConfigData)}catch(e){console.error(e),createRecordsObjFromAPI(apiPage)}}readConfigFilter(),recordsOnPageLoc.addEventListener("change",(e=>{recordsOnPage=parseInt(e.target.value),createRecordBoxes(filtersON?filteredRecordsArray_11:allRecordsArray,0,recordsOnPage),setPages(recordsNumber)})),searchBtn.addEventListener("click",createFilteredRecordsArray),advancedSearchBtn.addEventListener("click",(()=>{advancedContainer.classList.toggle("showed"),advancedSearchBtn.classList.toggle("rotate180")}));
//# sourceMappingURL=all.min.js.map
